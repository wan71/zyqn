// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.2 (win64) Build 2708876 Wed Nov  6 21:40:23 MST 2019
// Date        : Mon Jul 11 21:35:46 2022
// Host        : LAPTOP-MVN21HRU running 64-bit major release  (build 9200)
// Command     : write_verilog -mode funcsim -nolib -force -file
//               D:/VivadoProject/Bicubic/Bicubic.sim/sim_1/synth/func/xsim/Bicubic_tb_func_synth.v
// Design      : Bic_top
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

module Bic_A2W
   (rst_n_i,
    win_tvalid,
    state,
    win_tready_reg,
    srcBmp_axis_tready_OBUF,
    win_tdata,
    CLK,
    E,
    win_tready,
    rst_n_i_IBUF,
    srcBmp_axis_tvalid_IBUF,
    srcBmp_axis_tdata_IBUF);
  output rst_n_i;
  output win_tvalid;
  output state;
  output win_tready_reg;
  output srcBmp_axis_tready_OBUF;
  output [383:0]win_tdata;
  input CLK;
  input [0:0]E;
  input win_tready;
  input rst_n_i_IBUF;
  input srcBmp_axis_tvalid_IBUF;
  input [23:0]srcBmp_axis_tdata_IBUF;

  wire CLK;
  wire [0:0]E;
  wire \genblk1[0].Bic_SW_dut_n_1 ;
  wire \genblk1[0].Bic_SW_dut_n_2 ;
  wire \genblk1[0].Bic_SW_dut_n_3 ;
  wire \genblk1[0].Bic_SW_dut_n_4 ;
  wire \genblk1[0].Bic_SW_dut_n_5 ;
  wire \genblk1[0].Bic_SW_dut_n_6 ;
  wire \genblk1[0].Bic_SW_dut_n_7 ;
  wire \genblk1[0].Bic_SW_dut_n_8 ;
  wire \genblk1[0].Bic_SW_dut_n_9 ;
  wire \genblk1[1].Bic_SW_dut_n_1 ;
  wire [9:0]h_cnt;
  wire \h_cnt[0]_i_1__1_n_1 ;
  wire \h_cnt[1]_i_1__0_n_1 ;
  wire \h_cnt[2]_i_1__0_n_1 ;
  wire \h_cnt[3]_i_1__0_n_1 ;
  wire \h_cnt[4]_i_1__0_n_1 ;
  wire \h_cnt[5]_i_1__0_n_1 ;
  wire \h_cnt[6]_i_1__0_n_1 ;
  wire \h_cnt[6]_i_2__0_n_1 ;
  wire \h_cnt[7]_i_1__0_n_1 ;
  wire \h_cnt[8]_i_1__0_n_1 ;
  wire \h_cnt[9]_i_1__0_n_1 ;
  wire \h_cnt[9]_i_2__0_n_1 ;
  wire \h_cnt[9]_i_3__0_n_1 ;
  wire \h_cnt[9]_i_5__0_n_1 ;
  wire \h_cnt[9]_i_6__0_n_1 ;
  wire lock;
  wire lock_i_1_n_1;
  wire next_state;
  wire [9:1]p_0_out;
  wire p_5_in;
  wire rst_n_i;
  wire rst_n_i_IBUF;
  wire [23:0]srcBmp_axis_tdata_IBUF;
  wire srcBmp_axis_tready_OBUF;
  wire srcBmp_axis_tready_OBUF_inst_i_6_n_1;
  wire srcBmp_axis_tvalid_IBUF;
  wire state;
  wire valid_r0;
  wire \valid_r_reg_n_1_[0] ;
  wire \valid_r_reg_n_1_[1] ;
  wire \valid_r_reg_n_1_[2] ;
  wire [9:0]w_cnt;
  wire \w_cnt[0]_i_1__0_n_1 ;
  wire \w_cnt[2]_i_1__0_n_1 ;
  wire \w_cnt[3]_i_1__0_n_1 ;
  wire \w_cnt[4]_i_1__0_n_1 ;
  wire \w_cnt[5]_i_1__0_n_1 ;
  wire \w_cnt[5]_i_2__0_n_1 ;
  wire \w_cnt[9]_i_1__0_n_1 ;
  wire \w_cnt[9]_i_3__0_n_1 ;
  wire [383:0]win_tdata;
  wire win_tready;
  wire win_tready_reg;
  wire win_tvalid;
  wire win_tvalid_reg_i_1_n_1;
  wire win_tvalid_reg_i_2_n_1;
  wire win_tvalid_reg_i_5_n_1;

  LUT2 #(
    .INIT(4'h2)) 
    FSM_sequential_state_i_1
       (.I0(state),
        .I1(srcBmp_axis_tvalid_IBUF),
        .O(next_state));
  (* FSM_ENCODED_STATES = "IDLE:1,DOING:0" *) 
  FDPE #(
    .INIT(1'b1)) 
    FSM_sequential_state_reg
       (.C(CLK),
        .CE(1'b1),
        .D(next_state),
        .PRE(rst_n_i),
        .Q(state));
  Bic_SW__xdcDup__1 \genblk1[0].Bic_SW_dut 
       (.CLK(CLK),
        .E(E),
        .FSM_sequential_state_reg(\genblk1[0].Bic_SW_dut_n_9 ),
        .Q(w_cnt),
        .\bbstub_data_count[6] (\genblk1[0].Bic_SW_dut_n_8 ),
        .\dout_r_reg[0][0]_0 (h_cnt),
        .\genblk3[0].fifo_0_i_9__1 (state),
        .\h_cnt_reg[2] (\genblk1[0].Bic_SW_dut_n_7 ),
        .\h_cnt_reg[4] (\genblk1[0].Bic_SW_dut_n_1 ),
        .\h_cnt_reg[6] (\genblk1[0].Bic_SW_dut_n_2 ),
        .srcBmp_axis_tdata_IBUF(srcBmp_axis_tdata_IBUF[7:0]),
        .srcBmp_axis_tvalid_IBUF(srcBmp_axis_tvalid_IBUF),
        .srst(rst_n_i),
        .\w_cnt_reg[0] (\genblk1[0].Bic_SW_dut_n_3 ),
        .\w_cnt_reg[0]_0 (\genblk1[0].Bic_SW_dut_n_4 ),
        .\w_cnt_reg[6] (\genblk1[0].Bic_SW_dut_n_5 ),
        .\w_cnt_reg[8] (\genblk1[0].Bic_SW_dut_n_6 ),
        .win_tdata(win_tdata[127:0]),
        .win_tready(win_tready));
  Bic_SW__xdcDup__2 \genblk1[1].Bic_SW_dut 
       (.CLK(CLK),
        .E(E),
        .\bbstub_data_count[8] (\genblk1[1].Bic_SW_dut_n_1 ),
        .\dout_r_reg[0][0]_0 (\genblk1[0].Bic_SW_dut_n_1 ),
        .\dout_r_reg[0][0]_1 (\genblk1[0].Bic_SW_dut_n_2 ),
        .\dout_r_reg[0][0]_2 (\genblk1[0].Bic_SW_dut_n_3 ),
        .\dout_r_reg[0][0]_3 (\genblk1[0].Bic_SW_dut_n_4 ),
        .\dout_r_reg[8][7]_0 (\genblk1[0].Bic_SW_dut_n_9 ),
        .srcBmp_axis_tdata_IBUF(srcBmp_axis_tdata_IBUF[15:8]),
        .srst(rst_n_i),
        .win_tdata(win_tdata[255:128]));
  Bic_SW \genblk1[2].Bic_SW_dut 
       (.CLK(CLK),
        .D(valid_r0),
        .E(E),
        .\dout_r_reg[0][0]_0 (\genblk1[0].Bic_SW_dut_n_1 ),
        .\dout_r_reg[0][0]_1 (\genblk1[0].Bic_SW_dut_n_2 ),
        .\dout_r_reg[0][0]_2 (\genblk1[0].Bic_SW_dut_n_3 ),
        .\dout_r_reg[0][0]_3 (\genblk1[0].Bic_SW_dut_n_4 ),
        .\dout_r_reg[8][7]_0 (\genblk1[0].Bic_SW_dut_n_9 ),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .srcBmp_axis_tdata_IBUF(srcBmp_axis_tdata_IBUF[23:16]),
        .srst(rst_n_i),
        .\valid_r_reg[0] (\genblk1[1].Bic_SW_dut_n_1 ),
        .\valid_r_reg[0]_0 (\genblk1[0].Bic_SW_dut_n_8 ),
        .win_tdata(win_tdata[383:256]));
  LUT2 #(
    .INIT(4'h1)) 
    \h_cnt[0]_i_1__1 
       (.I0(h_cnt[0]),
        .I1(\h_cnt[9]_i_6__0_n_1 ),
        .O(\h_cnt[0]_i_1__1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \h_cnt[1]_i_1__0 
       (.I0(h_cnt[1]),
        .I1(h_cnt[0]),
        .I2(\h_cnt[9]_i_6__0_n_1 ),
        .O(\h_cnt[1]_i_1__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h1540)) 
    \h_cnt[2]_i_1__0 
       (.I0(\h_cnt[9]_i_6__0_n_1 ),
        .I1(h_cnt[0]),
        .I2(h_cnt[1]),
        .I3(h_cnt[2]),
        .O(\h_cnt[2]_i_1__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h15554000)) 
    \h_cnt[3]_i_1__0 
       (.I0(\h_cnt[9]_i_6__0_n_1 ),
        .I1(h_cnt[1]),
        .I2(h_cnt[0]),
        .I3(h_cnt[2]),
        .I4(h_cnt[3]),
        .O(\h_cnt[3]_i_1__0_n_1 ));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \h_cnt[4]_i_1__0 
       (.I0(\h_cnt[9]_i_6__0_n_1 ),
        .I1(h_cnt[2]),
        .I2(h_cnt[0]),
        .I3(h_cnt[1]),
        .I4(h_cnt[3]),
        .I5(h_cnt[4]),
        .O(\h_cnt[4]_i_1__0_n_1 ));
  LUT5 #(
    .INIT(32'h0000F708)) 
    \h_cnt[5]_i_1__0 
       (.I0(h_cnt[4]),
        .I1(h_cnt[3]),
        .I2(\h_cnt[6]_i_2__0_n_1 ),
        .I3(h_cnt[5]),
        .I4(state),
        .O(\h_cnt[5]_i_1__0_n_1 ));
  LUT6 #(
    .INIT(64'h5155555504000000)) 
    \h_cnt[6]_i_1__0 
       (.I0(state),
        .I1(h_cnt[5]),
        .I2(\h_cnt[6]_i_2__0_n_1 ),
        .I3(h_cnt[3]),
        .I4(h_cnt[4]),
        .I5(h_cnt[6]),
        .O(\h_cnt[6]_i_1__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \h_cnt[6]_i_2__0 
       (.I0(h_cnt[1]),
        .I1(h_cnt[0]),
        .I2(h_cnt[2]),
        .O(\h_cnt[6]_i_2__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h4510)) 
    \h_cnt[7]_i_1__0 
       (.I0(state),
        .I1(\h_cnt[9]_i_5__0_n_1 ),
        .I2(h_cnt[6]),
        .I3(h_cnt[7]),
        .O(\h_cnt[7]_i_1__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h51550400)) 
    \h_cnt[8]_i_1__0 
       (.I0(state),
        .I1(h_cnt[6]),
        .I2(\h_cnt[9]_i_5__0_n_1 ),
        .I3(h_cnt[7]),
        .I4(h_cnt[8]),
        .O(\h_cnt[8]_i_1__0_n_1 ));
  LUT6 #(
    .INIT(64'hAAAAEEAEAAAAAAAA)) 
    \h_cnt[9]_i_1__0 
       (.I0(state),
        .I1(srcBmp_axis_tvalid_IBUF),
        .I2(lock),
        .I3(win_tready),
        .I4(\h_cnt[9]_i_3__0_n_1 ),
        .I5(\genblk1[0].Bic_SW_dut_n_5 ),
        .O(\h_cnt[9]_i_1__0_n_1 ));
  LUT6 #(
    .INIT(64'h00000000A6AAAAAA)) 
    \h_cnt[9]_i_2__0 
       (.I0(h_cnt[9]),
        .I1(h_cnt[6]),
        .I2(\h_cnt[9]_i_5__0_n_1 ),
        .I3(h_cnt[7]),
        .I4(h_cnt[8]),
        .I5(\h_cnt[9]_i_6__0_n_1 ),
        .O(\h_cnt[9]_i_2__0_n_1 ));
  LUT5 #(
    .INIT(32'hDFFFFFFF)) 
    \h_cnt[9]_i_3__0 
       (.I0(w_cnt[1]),
        .I1(w_cnt[0]),
        .I2(w_cnt[8]),
        .I3(w_cnt[7]),
        .I4(w_cnt[9]),
        .O(\h_cnt[9]_i_3__0_n_1 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \h_cnt[9]_i_5__0 
       (.I0(h_cnt[5]),
        .I1(h_cnt[1]),
        .I2(h_cnt[0]),
        .I3(h_cnt[2]),
        .I4(h_cnt[3]),
        .I5(h_cnt[4]),
        .O(\h_cnt[9]_i_5__0_n_1 ));
  LUT5 #(
    .INIT(32'hAAAA0080)) 
    \h_cnt[9]_i_6__0 
       (.I0(\h_cnt[9]_i_1__0_n_1 ),
        .I1(\genblk1[0].Bic_SW_dut_n_7 ),
        .I2(h_cnt[1]),
        .I3(h_cnt[0]),
        .I4(state),
        .O(\h_cnt[9]_i_6__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \h_cnt[9]_i_8 
       (.I0(win_tvalid),
        .I1(win_tready),
        .O(win_tready_reg));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[0] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[0]_i_1__1_n_1 ),
        .Q(h_cnt[0]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[1] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[1]_i_1__0_n_1 ),
        .Q(h_cnt[1]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[2] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[2]_i_1__0_n_1 ),
        .Q(h_cnt[2]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[3] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[3]_i_1__0_n_1 ),
        .Q(h_cnt[3]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[4] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[4]_i_1__0_n_1 ),
        .Q(h_cnt[4]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[5] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[5]_i_1__0_n_1 ),
        .Q(h_cnt[5]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[6] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[6]_i_1__0_n_1 ),
        .Q(h_cnt[6]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[7] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[7]_i_1__0_n_1 ),
        .Q(h_cnt[7]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[8] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[8]_i_1__0_n_1 ),
        .Q(h_cnt[8]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[9] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\h_cnt[9]_i_2__0_n_1 ),
        .Q(h_cnt[9]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'hE)) 
    lock_i_1
       (.I0(win_tvalid),
        .I1(lock),
        .O(lock_i_1_n_1));
  FDCE #(
    .INIT(1'b0)) 
    lock_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(rst_n_i),
        .D(lock_i_1_n_1),
        .Q(lock));
  LUT5 #(
    .INIT(32'h0000000B)) 
    srcBmp_axis_tready_OBUF_inst_i_1
       (.I0(\genblk1[0].Bic_SW_dut_n_1 ),
        .I1(\genblk1[0].Bic_SW_dut_n_2 ),
        .I2(\genblk1[0].Bic_SW_dut_n_3 ),
        .I3(\genblk1[0].Bic_SW_dut_n_4 ),
        .I4(srcBmp_axis_tready_OBUF_inst_i_6_n_1),
        .O(srcBmp_axis_tready_OBUF));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFF4FFFFF)) 
    srcBmp_axis_tready_OBUF_inst_i_6
       (.I0(win_tready),
        .I1(lock),
        .I2(rst_n_i_IBUF),
        .I3(state),
        .I4(srcBmp_axis_tvalid_IBUF),
        .O(srcBmp_axis_tready_OBUF_inst_i_6_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \valid_r_reg[0] 
       (.C(CLK),
        .CE(E),
        .D(valid_r0),
        .Q(\valid_r_reg_n_1_[0] ),
        .R(rst_n_i));
  FDRE #(
    .INIT(1'b0)) 
    \valid_r_reg[1] 
       (.C(CLK),
        .CE(E),
        .D(\valid_r_reg_n_1_[0] ),
        .Q(\valid_r_reg_n_1_[1] ),
        .R(rst_n_i));
  FDRE #(
    .INIT(1'b0)) 
    \valid_r_reg[2] 
       (.C(CLK),
        .CE(E),
        .D(\valid_r_reg_n_1_[1] ),
        .Q(\valid_r_reg_n_1_[2] ),
        .R(rst_n_i));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \w_cnt[0]_i_1__0 
       (.I0(w_cnt[0]),
        .I1(\h_cnt[9]_i_1__0_n_1 ),
        .O(\w_cnt[0]_i_1__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h14)) 
    \w_cnt[1]_i_1__0 
       (.I0(\h_cnt[9]_i_1__0_n_1 ),
        .I1(w_cnt[1]),
        .I2(w_cnt[0]),
        .O(p_0_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h1540)) 
    \w_cnt[2]_i_1__0 
       (.I0(state),
        .I1(w_cnt[0]),
        .I2(w_cnt[1]),
        .I3(w_cnt[2]),
        .O(\w_cnt[2]_i_1__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h15554000)) 
    \w_cnt[3]_i_1__0 
       (.I0(state),
        .I1(w_cnt[1]),
        .I2(w_cnt[0]),
        .I3(w_cnt[2]),
        .I4(w_cnt[3]),
        .O(\w_cnt[3]_i_1__0_n_1 ));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \w_cnt[4]_i_1__0 
       (.I0(state),
        .I1(w_cnt[2]),
        .I2(w_cnt[0]),
        .I3(w_cnt[1]),
        .I4(w_cnt[3]),
        .I5(w_cnt[4]),
        .O(\w_cnt[4]_i_1__0_n_1 ));
  LUT3 #(
    .INIT(8'h41)) 
    \w_cnt[5]_i_1__0 
       (.I0(state),
        .I1(\w_cnt[5]_i_2__0_n_1 ),
        .I2(w_cnt[5]),
        .O(\w_cnt[5]_i_1__0_n_1 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \w_cnt[5]_i_2__0 
       (.I0(w_cnt[3]),
        .I1(w_cnt[1]),
        .I2(w_cnt[0]),
        .I3(w_cnt[2]),
        .I4(w_cnt[4]),
        .O(\w_cnt[5]_i_2__0_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h09)) 
    \w_cnt[6]_i_1__0 
       (.I0(\w_cnt[9]_i_3__0_n_1 ),
        .I1(w_cnt[6]),
        .I2(\h_cnt[9]_i_1__0_n_1 ),
        .O(p_0_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h00B4)) 
    \w_cnt[7]_i_1__0 
       (.I0(\w_cnt[9]_i_3__0_n_1 ),
        .I1(w_cnt[6]),
        .I2(w_cnt[7]),
        .I3(\h_cnt[9]_i_1__0_n_1 ),
        .O(p_0_out[7]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h0000BF40)) 
    \w_cnt[8]_i_1__0 
       (.I0(\w_cnt[9]_i_3__0_n_1 ),
        .I1(w_cnt[6]),
        .I2(w_cnt[7]),
        .I3(w_cnt[8]),
        .I4(\h_cnt[9]_i_1__0_n_1 ),
        .O(p_0_out[8]));
  LUT4 #(
    .INIT(16'hEEAE)) 
    \w_cnt[9]_i_1__0 
       (.I0(state),
        .I1(srcBmp_axis_tvalid_IBUF),
        .I2(lock),
        .I3(win_tready),
        .O(\w_cnt[9]_i_1__0_n_1 ));
  LUT6 #(
    .INIT(64'h00000000B4F0F0F0)) 
    \w_cnt[9]_i_2__0 
       (.I0(\w_cnt[9]_i_3__0_n_1 ),
        .I1(w_cnt[6]),
        .I2(w_cnt[9]),
        .I3(w_cnt[7]),
        .I4(w_cnt[8]),
        .I5(\h_cnt[9]_i_1__0_n_1 ),
        .O(p_0_out[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \w_cnt[9]_i_3__0 
       (.I0(w_cnt[4]),
        .I1(w_cnt[2]),
        .I2(w_cnt[0]),
        .I3(w_cnt[1]),
        .I4(w_cnt[3]),
        .I5(w_cnt[5]),
        .O(\w_cnt[9]_i_3__0_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[0] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\w_cnt[0]_i_1__0_n_1 ),
        .Q(w_cnt[0]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[1] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(p_0_out[1]),
        .Q(w_cnt[1]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[2] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\w_cnt[2]_i_1__0_n_1 ),
        .Q(w_cnt[2]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[3] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\w_cnt[3]_i_1__0_n_1 ),
        .Q(w_cnt[3]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[4] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\w_cnt[4]_i_1__0_n_1 ),
        .Q(w_cnt[4]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[5] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(\w_cnt[5]_i_1__0_n_1 ),
        .Q(w_cnt[5]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[6] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(p_0_out[6]),
        .Q(w_cnt[6]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[7] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(p_0_out[7]),
        .Q(w_cnt[7]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[8] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(p_0_out[8]),
        .Q(w_cnt[8]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[9] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1__0_n_1 ),
        .CLR(rst_n_i),
        .D(p_0_out[9]),
        .Q(w_cnt[9]));
  LDCP #(
    .INIT(1'b0)) 
    win_tvalid_reg
       (.CLR(win_tvalid_reg_i_2_n_1),
        .D(win_tvalid_reg_i_1_n_1),
        .G(1'b1),
        .PRE(p_5_in),
        .Q(win_tvalid));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hFF57)) 
    win_tvalid_reg_i_1
       (.I0(\genblk1[0].Bic_SW_dut_n_6 ),
        .I1(w_cnt[0]),
        .I2(w_cnt[1]),
        .I3(state),
        .O(win_tvalid_reg_i_1_n_1));
  LUT6 #(
    .INIT(64'hFFFFFFFF1400FFFF)) 
    win_tvalid_reg_i_2
       (.I0(lock),
        .I1(w_cnt[1]),
        .I2(w_cnt[0]),
        .I3(\genblk1[0].Bic_SW_dut_n_6 ),
        .I4(\valid_r_reg_n_1_[2] ),
        .I5(win_tvalid_reg_i_5_n_1),
        .O(win_tvalid_reg_i_2_n_1));
  LUT1 #(
    .INIT(2'h1)) 
    win_tvalid_reg_i_3
       (.I0(lock),
        .O(p_5_in));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    win_tvalid_reg_i_5
       (.I0(srcBmp_axis_tvalid_IBUF),
        .I1(state),
        .I2(rst_n_i_IBUF),
        .O(win_tvalid_reg_i_5_n_1));
endmodule

module Bic_CAL
   (B,
    \win_cnt_reg[0] ,
    \win_cnt_reg[2] ,
    ch2_win_data__0,
    \FSM_sequential_state_reg[1] ,
    coef10,
    coef3,
    \win_cnt_reg[0]_0 ,
    coef4,
    \win_cnt_reg[3] ,
    \win_cnt_reg[2]_0 ,
    \win_cnt_reg[0]_1 ,
    coef15,
    coef14,
    coef9,
    coef8,
    coef7,
    coef6,
    din,
    rst_n_i_IBUF,
    Q,
    u7_i_5_0,
    u2_i_5_0,
    u7_i_5_1,
    u7_i_5_2,
    u7_i_5_3,
    CLK,
    add_1_0_i_27__1_0,
    coef0,
    coef1,
    coef2,
    add_1_1_i_54__1_0,
    coef5,
    add_1_3_i_27__1_0,
    add_1_4_i_27__1_0,
    add_1_4_i_54__1_0,
    coef11,
    coef12,
    coef13);
  output [11:0]B;
  output [5:0]\win_cnt_reg[0] ;
  output [9:0]\win_cnt_reg[2] ;
  output ch2_win_data__0;
  output \FSM_sequential_state_reg[1] ;
  output [12:0]coef10;
  output [6:0]coef3;
  output [7:0]\win_cnt_reg[0]_0 ;
  output [6:0]coef4;
  output [4:0]\win_cnt_reg[3] ;
  output [8:0]\win_cnt_reg[2]_0 ;
  output [5:0]\win_cnt_reg[0]_1 ;
  output [5:0]coef15;
  output [6:0]coef14;
  output [6:0]coef9;
  output [4:0]coef8;
  output [6:0]coef7;
  output [8:0]coef6;
  output [7:0]din;
  input rst_n_i_IBUF;
  input [1:0]Q;
  input u7_i_5_0;
  input u2_i_5_0;
  input u7_i_5_1;
  input u7_i_5_2;
  input u7_i_5_3;
  input CLK;
  input [127:0]add_1_0_i_27__1_0;
  input [4:0]coef0;
  input [2:0]coef1;
  input [2:0]coef2;
  input [0:0]add_1_1_i_54__1_0;
  input [4:0]coef5;
  input [0:0]add_1_3_i_27__1_0;
  input [3:0]add_1_4_i_27__1_0;
  input [2:0]add_1_4_i_54__1_0;
  input [1:0]coef11;
  input [0:0]coef12;
  input [2:0]coef13;

  wire [11:0]B;
  wire CLK;
  wire \FSM_sequential_state_reg[1] ;
  wire [27:0]\L1Sw[0]_77 ;
  wire [27:0]\L1Sw[1]_78 ;
  wire [27:0]\L1Sw[2]_79 ;
  wire [27:0]\L1Sw[3]_80 ;
  wire [27:0]\L1Sw[4]_81 ;
  wire [27:0]\L1Sw[5]_82 ;
  wire [27:0]\L1Sw[6]_83 ;
  wire [27:0]\L1Sw[7]_84 ;
  wire [28:0]\L2Sw[0]_85 ;
  wire [28:0]\L2Sw[1]_86 ;
  wire [28:0]\L2Sw[2]_87 ;
  wire [28:0]\L2Sw[3]_88 ;
  wire [29:0]\L3Sw[0]_89 ;
  wire [29:0]\L3Sw[1]_90 ;
  wire [26:0]\Pw[0]_61 ;
  wire [26:0]\Pw[10]_71 ;
  wire [26:0]\Pw[11]_72 ;
  wire [26:0]\Pw[12]_73 ;
  wire [26:0]\Pw[13]_74 ;
  wire [26:0]\Pw[14]_75 ;
  wire [26:0]\Pw[15]_76 ;
  wire [26:0]\Pw[1]_62 ;
  wire [26:0]\Pw[2]_63 ;
  wire [26:0]\Pw[3]_64 ;
  wire [26:0]\Pw[4]_65 ;
  wire [26:0]\Pw[5]_66 ;
  wire [26:0]\Pw[6]_67 ;
  wire [26:0]\Pw[7]_68 ;
  wire [26:0]\Pw[8]_69 ;
  wire [26:0]\Pw[9]_70 ;
  wire [1:0]Q;
  wire add_1_0_i_10__1_n_1;
  wire add_1_0_i_11__1_n_1;
  wire add_1_0_i_12__1_n_1;
  wire add_1_0_i_13__1_n_1;
  wire add_1_0_i_14__1_n_1;
  wire add_1_0_i_15__1_n_1;
  wire add_1_0_i_16__1_n_1;
  wire add_1_0_i_17__1_n_1;
  wire add_1_0_i_18__1_n_1;
  wire add_1_0_i_19__1_n_1;
  wire add_1_0_i_1__1_n_1;
  wire add_1_0_i_20__1_n_1;
  wire add_1_0_i_21__1_n_1;
  wire add_1_0_i_22__1_n_1;
  wire add_1_0_i_23__1_n_1;
  wire add_1_0_i_24__1_n_1;
  wire add_1_0_i_25__1_n_1;
  wire add_1_0_i_26__1_n_1;
  wire [127:0]add_1_0_i_27__1_0;
  wire add_1_0_i_27__1_n_1;
  wire add_1_0_i_28__1_n_1;
  wire add_1_0_i_29__1_n_1;
  wire add_1_0_i_2__1_n_1;
  wire add_1_0_i_30__1_n_1;
  wire add_1_0_i_31__1_n_1;
  wire add_1_0_i_32__1_n_1;
  wire add_1_0_i_33__1_n_1;
  wire add_1_0_i_34__1_n_1;
  wire add_1_0_i_35__1_n_1;
  wire add_1_0_i_36__1_n_1;
  wire add_1_0_i_37__1_n_1;
  wire add_1_0_i_38__1_n_1;
  wire add_1_0_i_39__1_n_1;
  wire add_1_0_i_3__1_n_1;
  wire add_1_0_i_40__1_n_1;
  wire add_1_0_i_41__1_n_1;
  wire add_1_0_i_42__1_n_1;
  wire add_1_0_i_43__1_n_1;
  wire add_1_0_i_44__1_n_1;
  wire add_1_0_i_45__1_n_1;
  wire add_1_0_i_46__1_n_1;
  wire add_1_0_i_47__1_n_1;
  wire add_1_0_i_48__1_n_1;
  wire add_1_0_i_49__1_n_1;
  wire add_1_0_i_4__1_n_1;
  wire add_1_0_i_50__1_n_1;
  wire add_1_0_i_51__1_n_1;
  wire add_1_0_i_52__1_n_1;
  wire add_1_0_i_53__1_n_1;
  wire add_1_0_i_54__1_n_1;
  wire add_1_0_i_5__1_n_1;
  wire add_1_0_i_6__1_n_1;
  wire add_1_0_i_7__1_n_1;
  wire add_1_0_i_8__1_n_1;
  wire add_1_0_i_9__1_n_1;
  wire add_1_1_i_10__1_n_1;
  wire add_1_1_i_11__1_n_1;
  wire add_1_1_i_12__1_n_1;
  wire add_1_1_i_13__1_n_1;
  wire add_1_1_i_14__1_n_1;
  wire add_1_1_i_15__1_n_1;
  wire add_1_1_i_16__1_n_1;
  wire add_1_1_i_17__1_n_1;
  wire add_1_1_i_18__1_n_1;
  wire add_1_1_i_19__1_n_1;
  wire add_1_1_i_1__1_n_1;
  wire add_1_1_i_20__1_n_1;
  wire add_1_1_i_21__1_n_1;
  wire add_1_1_i_22__1_n_1;
  wire add_1_1_i_23__1_n_1;
  wire add_1_1_i_24__1_n_1;
  wire add_1_1_i_25__1_n_1;
  wire add_1_1_i_26__1_n_1;
  wire add_1_1_i_27__1_n_1;
  wire add_1_1_i_28__1_n_1;
  wire add_1_1_i_29__1_n_1;
  wire add_1_1_i_2__1_n_1;
  wire add_1_1_i_30__1_n_1;
  wire add_1_1_i_31__1_n_1;
  wire add_1_1_i_32__1_n_1;
  wire add_1_1_i_33__1_n_1;
  wire add_1_1_i_34__1_n_1;
  wire add_1_1_i_35__1_n_1;
  wire add_1_1_i_36__1_n_1;
  wire add_1_1_i_37__1_n_1;
  wire add_1_1_i_38__1_n_1;
  wire add_1_1_i_39__1_n_1;
  wire add_1_1_i_3__1_n_1;
  wire add_1_1_i_40__1_n_1;
  wire add_1_1_i_41__1_n_1;
  wire add_1_1_i_42__1_n_1;
  wire add_1_1_i_43__1_n_1;
  wire add_1_1_i_44__1_n_1;
  wire add_1_1_i_45__1_n_1;
  wire add_1_1_i_46__1_n_1;
  wire add_1_1_i_47__1_n_1;
  wire add_1_1_i_48__1_n_1;
  wire add_1_1_i_49__1_n_1;
  wire add_1_1_i_4__1_n_1;
  wire add_1_1_i_50__1_n_1;
  wire add_1_1_i_51__1_n_1;
  wire add_1_1_i_52__1_n_1;
  wire add_1_1_i_53__1_n_1;
  wire [0:0]add_1_1_i_54__1_0;
  wire add_1_1_i_54__1_n_1;
  wire add_1_1_i_5__1_n_1;
  wire add_1_1_i_6__1_n_1;
  wire add_1_1_i_7__1_n_1;
  wire add_1_1_i_8__1_n_1;
  wire add_1_1_i_9__1_n_1;
  wire add_1_2_i_10__1_n_1;
  wire add_1_2_i_11__1_n_1;
  wire add_1_2_i_12__1_n_1;
  wire add_1_2_i_13__1_n_1;
  wire add_1_2_i_14__1_n_1;
  wire add_1_2_i_15__1_n_1;
  wire add_1_2_i_16__1_n_1;
  wire add_1_2_i_17__1_n_1;
  wire add_1_2_i_18__1_n_1;
  wire add_1_2_i_19__1_n_1;
  wire add_1_2_i_1__1_n_1;
  wire add_1_2_i_20__1_n_1;
  wire add_1_2_i_21__1_n_1;
  wire add_1_2_i_22__1_n_1;
  wire add_1_2_i_23__1_n_1;
  wire add_1_2_i_24__1_n_1;
  wire add_1_2_i_25__1_n_1;
  wire add_1_2_i_26__1_n_1;
  wire add_1_2_i_27__1_n_1;
  wire add_1_2_i_28__1_n_1;
  wire add_1_2_i_29__1_n_1;
  wire add_1_2_i_2__1_n_1;
  wire add_1_2_i_30__1_n_1;
  wire add_1_2_i_31__1_n_1;
  wire add_1_2_i_32__1_n_1;
  wire add_1_2_i_33__1_n_1;
  wire add_1_2_i_34__1_n_1;
  wire add_1_2_i_35__1_n_1;
  wire add_1_2_i_36__1_n_1;
  wire add_1_2_i_37__1_n_1;
  wire add_1_2_i_38__1_n_1;
  wire add_1_2_i_39__1_n_1;
  wire add_1_2_i_3__1_n_1;
  wire add_1_2_i_40__1_n_1;
  wire add_1_2_i_41__1_n_1;
  wire add_1_2_i_42__1_n_1;
  wire add_1_2_i_43__1_n_1;
  wire add_1_2_i_44__1_n_1;
  wire add_1_2_i_45__1_n_1;
  wire add_1_2_i_46__1_n_1;
  wire add_1_2_i_47__1_n_1;
  wire add_1_2_i_48__1_n_1;
  wire add_1_2_i_49__1_n_1;
  wire add_1_2_i_4__1_n_1;
  wire add_1_2_i_50__1_n_1;
  wire add_1_2_i_51__1_n_1;
  wire add_1_2_i_52__1_n_1;
  wire add_1_2_i_53__1_n_1;
  wire add_1_2_i_54__1_n_1;
  wire add_1_2_i_5__1_n_1;
  wire add_1_2_i_6__1_n_1;
  wire add_1_2_i_7__1_n_1;
  wire add_1_2_i_8__1_n_1;
  wire add_1_2_i_9__1_n_1;
  wire add_1_3_i_10__1_n_1;
  wire add_1_3_i_11__1_n_1;
  wire add_1_3_i_12__1_n_1;
  wire add_1_3_i_13__1_n_1;
  wire add_1_3_i_14__1_n_1;
  wire add_1_3_i_15__1_n_1;
  wire add_1_3_i_16__1_n_1;
  wire add_1_3_i_17__1_n_1;
  wire add_1_3_i_18__1_n_1;
  wire add_1_3_i_19__1_n_1;
  wire add_1_3_i_1__1_n_1;
  wire add_1_3_i_20__1_n_1;
  wire add_1_3_i_21__1_n_1;
  wire add_1_3_i_22__1_n_1;
  wire add_1_3_i_23__1_n_1;
  wire add_1_3_i_24__1_n_1;
  wire add_1_3_i_25__1_n_1;
  wire add_1_3_i_26__1_n_1;
  wire [0:0]add_1_3_i_27__1_0;
  wire add_1_3_i_27__1_n_1;
  wire add_1_3_i_28__1_n_1;
  wire add_1_3_i_29__1_n_1;
  wire add_1_3_i_2__1_n_1;
  wire add_1_3_i_30__1_n_1;
  wire add_1_3_i_31__1_n_1;
  wire add_1_3_i_32__1_n_1;
  wire add_1_3_i_33__1_n_1;
  wire add_1_3_i_34__1_n_1;
  wire add_1_3_i_35__1_n_1;
  wire add_1_3_i_36__1_n_1;
  wire add_1_3_i_37__1_n_1;
  wire add_1_3_i_38__1_n_1;
  wire add_1_3_i_39__1_n_1;
  wire add_1_3_i_3__1_n_1;
  wire add_1_3_i_40__1_n_1;
  wire add_1_3_i_41__1_n_1;
  wire add_1_3_i_42__1_n_1;
  wire add_1_3_i_43__1_n_1;
  wire add_1_3_i_44__1_n_1;
  wire add_1_3_i_45__1_n_1;
  wire add_1_3_i_46__1_n_1;
  wire add_1_3_i_47__1_n_1;
  wire add_1_3_i_48__1_n_1;
  wire add_1_3_i_49__1_n_1;
  wire add_1_3_i_4__1_n_1;
  wire add_1_3_i_50__1_n_1;
  wire add_1_3_i_51__1_n_1;
  wire add_1_3_i_52__1_n_1;
  wire add_1_3_i_53__1_n_1;
  wire add_1_3_i_54__1_n_1;
  wire add_1_3_i_5__1_n_1;
  wire add_1_3_i_6__1_n_1;
  wire add_1_3_i_7__1_n_1;
  wire add_1_3_i_8__1_n_1;
  wire add_1_3_i_9__1_n_1;
  wire add_1_4_i_10__1_n_1;
  wire add_1_4_i_11__1_n_1;
  wire add_1_4_i_12__1_n_1;
  wire add_1_4_i_13__1_n_1;
  wire add_1_4_i_14__1_n_1;
  wire add_1_4_i_15__1_n_1;
  wire add_1_4_i_16__1_n_1;
  wire add_1_4_i_17__1_n_1;
  wire add_1_4_i_18__1_n_1;
  wire add_1_4_i_19__1_n_1;
  wire add_1_4_i_1__1_n_1;
  wire add_1_4_i_20__1_n_1;
  wire add_1_4_i_21__1_n_1;
  wire add_1_4_i_22__1_n_1;
  wire add_1_4_i_23__1_n_1;
  wire add_1_4_i_24__1_n_1;
  wire add_1_4_i_25__1_n_1;
  wire add_1_4_i_26__1_n_1;
  wire [3:0]add_1_4_i_27__1_0;
  wire add_1_4_i_27__1_n_1;
  wire add_1_4_i_28__1_n_1;
  wire add_1_4_i_29__1_n_1;
  wire add_1_4_i_2__1_n_1;
  wire add_1_4_i_30__1_n_1;
  wire add_1_4_i_31__1_n_1;
  wire add_1_4_i_32__1_n_1;
  wire add_1_4_i_33__1_n_1;
  wire add_1_4_i_34__1_n_1;
  wire add_1_4_i_35__1_n_1;
  wire add_1_4_i_36__1_n_1;
  wire add_1_4_i_37__1_n_1;
  wire add_1_4_i_38__1_n_1;
  wire add_1_4_i_39__1_n_1;
  wire add_1_4_i_3__1_n_1;
  wire add_1_4_i_40__1_n_1;
  wire add_1_4_i_41__1_n_1;
  wire add_1_4_i_42__1_n_1;
  wire add_1_4_i_43__1_n_1;
  wire add_1_4_i_44__1_n_1;
  wire add_1_4_i_45__1_n_1;
  wire add_1_4_i_46__1_n_1;
  wire add_1_4_i_47__1_n_1;
  wire add_1_4_i_48__1_n_1;
  wire add_1_4_i_49__1_n_1;
  wire add_1_4_i_4__1_n_1;
  wire add_1_4_i_50__1_n_1;
  wire add_1_4_i_51__1_n_1;
  wire add_1_4_i_52__1_n_1;
  wire add_1_4_i_53__1_n_1;
  wire [2:0]add_1_4_i_54__1_0;
  wire add_1_4_i_54__1_n_1;
  wire add_1_4_i_5__1_n_1;
  wire add_1_4_i_6__1_n_1;
  wire add_1_4_i_7__1_n_1;
  wire add_1_4_i_8__1_n_1;
  wire add_1_4_i_9__1_n_1;
  wire add_1_5_i_10__1_n_1;
  wire add_1_5_i_11__1_n_1;
  wire add_1_5_i_12__1_n_1;
  wire add_1_5_i_13__1_n_1;
  wire add_1_5_i_14__1_n_1;
  wire add_1_5_i_15__1_n_1;
  wire add_1_5_i_16__1_n_1;
  wire add_1_5_i_17__1_n_1;
  wire add_1_5_i_18__1_n_1;
  wire add_1_5_i_19__1_n_1;
  wire add_1_5_i_1__1_n_1;
  wire add_1_5_i_20__1_n_1;
  wire add_1_5_i_21__1_n_1;
  wire add_1_5_i_22__1_n_1;
  wire add_1_5_i_23__1_n_1;
  wire add_1_5_i_24__1_n_1;
  wire add_1_5_i_25__1_n_1;
  wire add_1_5_i_26__1_n_1;
  wire add_1_5_i_27__1_n_1;
  wire add_1_5_i_28__1_n_1;
  wire add_1_5_i_29__1_n_1;
  wire add_1_5_i_2__1_n_1;
  wire add_1_5_i_30__1_n_1;
  wire add_1_5_i_31__1_n_1;
  wire add_1_5_i_32__1_n_1;
  wire add_1_5_i_33__1_n_1;
  wire add_1_5_i_34__1_n_1;
  wire add_1_5_i_35__1_n_1;
  wire add_1_5_i_36__1_n_1;
  wire add_1_5_i_37__1_n_1;
  wire add_1_5_i_38__1_n_1;
  wire add_1_5_i_39__1_n_1;
  wire add_1_5_i_3__1_n_1;
  wire add_1_5_i_40__1_n_1;
  wire add_1_5_i_41__1_n_1;
  wire add_1_5_i_42__1_n_1;
  wire add_1_5_i_43__1_n_1;
  wire add_1_5_i_44__1_n_1;
  wire add_1_5_i_45__1_n_1;
  wire add_1_5_i_46__1_n_1;
  wire add_1_5_i_47__1_n_1;
  wire add_1_5_i_48__1_n_1;
  wire add_1_5_i_49__1_n_1;
  wire add_1_5_i_4__1_n_1;
  wire add_1_5_i_50__1_n_1;
  wire add_1_5_i_51__1_n_1;
  wire add_1_5_i_52__1_n_1;
  wire add_1_5_i_53__1_n_1;
  wire add_1_5_i_54__1_n_1;
  wire add_1_5_i_5__1_n_1;
  wire add_1_5_i_6__1_n_1;
  wire add_1_5_i_7__1_n_1;
  wire add_1_5_i_8__1_n_1;
  wire add_1_5_i_9__1_n_1;
  wire add_1_6_i_10__1_n_1;
  wire add_1_6_i_11__1_n_1;
  wire add_1_6_i_12__1_n_1;
  wire add_1_6_i_13__1_n_1;
  wire add_1_6_i_14__1_n_1;
  wire add_1_6_i_15__1_n_1;
  wire add_1_6_i_16__1_n_1;
  wire add_1_6_i_17__1_n_1;
  wire add_1_6_i_18__1_n_1;
  wire add_1_6_i_19__1_n_1;
  wire add_1_6_i_1__1_n_1;
  wire add_1_6_i_20__1_n_1;
  wire add_1_6_i_21__1_n_1;
  wire add_1_6_i_22__1_n_1;
  wire add_1_6_i_23__1_n_1;
  wire add_1_6_i_24__1_n_1;
  wire add_1_6_i_25__1_n_1;
  wire add_1_6_i_26__1_n_1;
  wire add_1_6_i_27__1_n_1;
  wire add_1_6_i_28__1_n_1;
  wire add_1_6_i_29__1_n_1;
  wire add_1_6_i_2__1_n_1;
  wire add_1_6_i_30__1_n_1;
  wire add_1_6_i_31__1_n_1;
  wire add_1_6_i_32__1_n_1;
  wire add_1_6_i_33__1_n_1;
  wire add_1_6_i_34__1_n_1;
  wire add_1_6_i_35__1_n_1;
  wire add_1_6_i_36__1_n_1;
  wire add_1_6_i_37__1_n_1;
  wire add_1_6_i_38__1_n_1;
  wire add_1_6_i_39__1_n_1;
  wire add_1_6_i_3__1_n_1;
  wire add_1_6_i_40__1_n_1;
  wire add_1_6_i_41__1_n_1;
  wire add_1_6_i_42__1_n_1;
  wire add_1_6_i_43__1_n_1;
  wire add_1_6_i_44__1_n_1;
  wire add_1_6_i_45__1_n_1;
  wire add_1_6_i_46__1_n_1;
  wire add_1_6_i_47__1_n_1;
  wire add_1_6_i_48__1_n_1;
  wire add_1_6_i_49__1_n_1;
  wire add_1_6_i_4__1_n_1;
  wire add_1_6_i_50__1_n_1;
  wire add_1_6_i_51__1_n_1;
  wire add_1_6_i_52__1_n_1;
  wire add_1_6_i_53__1_n_1;
  wire add_1_6_i_54__1_n_1;
  wire add_1_6_i_5__1_n_1;
  wire add_1_6_i_6__1_n_1;
  wire add_1_6_i_7__1_n_1;
  wire add_1_6_i_8__1_n_1;
  wire add_1_6_i_9__1_n_1;
  wire add_1_7_i_10__1_n_1;
  wire add_1_7_i_11__1_n_1;
  wire add_1_7_i_12__1_n_1;
  wire add_1_7_i_13__1_n_1;
  wire add_1_7_i_14__1_n_1;
  wire add_1_7_i_15__1_n_1;
  wire add_1_7_i_16__1_n_1;
  wire add_1_7_i_17__1_n_1;
  wire add_1_7_i_18__1_n_1;
  wire add_1_7_i_19__1_n_1;
  wire add_1_7_i_1__1_n_1;
  wire add_1_7_i_20__1_n_1;
  wire add_1_7_i_21__1_n_1;
  wire add_1_7_i_22__1_n_1;
  wire add_1_7_i_23__1_n_1;
  wire add_1_7_i_24__1_n_1;
  wire add_1_7_i_25__1_n_1;
  wire add_1_7_i_26__1_n_1;
  wire add_1_7_i_27__1_n_1;
  wire add_1_7_i_28__1_n_1;
  wire add_1_7_i_29__1_n_1;
  wire add_1_7_i_2__1_n_1;
  wire add_1_7_i_30__1_n_1;
  wire add_1_7_i_31__1_n_1;
  wire add_1_7_i_32__1_n_1;
  wire add_1_7_i_33__1_n_1;
  wire add_1_7_i_34__1_n_1;
  wire add_1_7_i_35__1_n_1;
  wire add_1_7_i_36__1_n_1;
  wire add_1_7_i_37__1_n_1;
  wire add_1_7_i_38__1_n_1;
  wire add_1_7_i_39__1_n_1;
  wire add_1_7_i_3__1_n_1;
  wire add_1_7_i_40__1_n_1;
  wire add_1_7_i_41__1_n_1;
  wire add_1_7_i_42__1_n_1;
  wire add_1_7_i_43__1_n_1;
  wire add_1_7_i_44__1_n_1;
  wire add_1_7_i_45__1_n_1;
  wire add_1_7_i_46__1_n_1;
  wire add_1_7_i_47__1_n_1;
  wire add_1_7_i_48__1_n_1;
  wire add_1_7_i_49__1_n_1;
  wire add_1_7_i_4__1_n_1;
  wire add_1_7_i_50__1_n_1;
  wire add_1_7_i_51__1_n_1;
  wire add_1_7_i_52__1_n_1;
  wire add_1_7_i_53__1_n_1;
  wire add_1_7_i_54__1_n_1;
  wire add_1_7_i_5__1_n_1;
  wire add_1_7_i_6__1_n_1;
  wire add_1_7_i_7__1_n_1;
  wire add_1_7_i_8__1_n_1;
  wire add_1_7_i_9__1_n_1;
  wire add_2_0_i_10__1_n_1;
  wire add_2_0_i_11__1_n_1;
  wire add_2_0_i_12__1_n_1;
  wire add_2_0_i_13__1_n_1;
  wire add_2_0_i_14__1_n_1;
  wire add_2_0_i_15__1_n_1;
  wire add_2_0_i_16__1_n_1;
  wire add_2_0_i_17__1_n_1;
  wire add_2_0_i_18__1_n_1;
  wire add_2_0_i_19__1_n_1;
  wire add_2_0_i_1__1_n_1;
  wire add_2_0_i_20__1_n_1;
  wire add_2_0_i_21__1_n_1;
  wire add_2_0_i_22__1_n_1;
  wire add_2_0_i_23__1_n_1;
  wire add_2_0_i_24__1_n_1;
  wire add_2_0_i_25__1_n_1;
  wire add_2_0_i_26__1_n_1;
  wire add_2_0_i_27__1_n_1;
  wire add_2_0_i_28__1_n_1;
  wire add_2_0_i_29__1_n_1;
  wire add_2_0_i_2__1_n_1;
  wire add_2_0_i_30__1_n_1;
  wire add_2_0_i_31__1_n_1;
  wire add_2_0_i_32__1_n_1;
  wire add_2_0_i_33__1_n_1;
  wire add_2_0_i_34__1_n_1;
  wire add_2_0_i_35__1_n_1;
  wire add_2_0_i_36__1_n_1;
  wire add_2_0_i_37__1_n_1;
  wire add_2_0_i_38__1_n_1;
  wire add_2_0_i_39__1_n_1;
  wire add_2_0_i_3__1_n_1;
  wire add_2_0_i_40__1_n_1;
  wire add_2_0_i_41__1_n_1;
  wire add_2_0_i_42__1_n_1;
  wire add_2_0_i_43__1_n_1;
  wire add_2_0_i_44__1_n_1;
  wire add_2_0_i_45__1_n_1;
  wire add_2_0_i_46__1_n_1;
  wire add_2_0_i_47__1_n_1;
  wire add_2_0_i_48__1_n_1;
  wire add_2_0_i_49__1_n_1;
  wire add_2_0_i_4__1_n_1;
  wire add_2_0_i_50__1_n_1;
  wire add_2_0_i_51__1_n_1;
  wire add_2_0_i_52__1_n_1;
  wire add_2_0_i_53__1_n_1;
  wire add_2_0_i_54__1_n_1;
  wire add_2_0_i_55__1_n_1;
  wire add_2_0_i_56__1_n_1;
  wire add_2_0_i_5__1_n_1;
  wire add_2_0_i_6__1_n_1;
  wire add_2_0_i_7__1_n_1;
  wire add_2_0_i_8__1_n_1;
  wire add_2_0_i_9__1_n_1;
  wire add_2_1_i_10__1_n_1;
  wire add_2_1_i_11__1_n_1;
  wire add_2_1_i_12__1_n_1;
  wire add_2_1_i_13__1_n_1;
  wire add_2_1_i_14__1_n_1;
  wire add_2_1_i_15__1_n_1;
  wire add_2_1_i_16__1_n_1;
  wire add_2_1_i_17__1_n_1;
  wire add_2_1_i_18__1_n_1;
  wire add_2_1_i_19__1_n_1;
  wire add_2_1_i_1__1_n_1;
  wire add_2_1_i_20__1_n_1;
  wire add_2_1_i_21__1_n_1;
  wire add_2_1_i_22__1_n_1;
  wire add_2_1_i_23__1_n_1;
  wire add_2_1_i_24__1_n_1;
  wire add_2_1_i_25__1_n_1;
  wire add_2_1_i_26__1_n_1;
  wire add_2_1_i_27__1_n_1;
  wire add_2_1_i_28__1_n_1;
  wire add_2_1_i_29__1_n_1;
  wire add_2_1_i_2__1_n_1;
  wire add_2_1_i_30__1_n_1;
  wire add_2_1_i_31__1_n_1;
  wire add_2_1_i_32__1_n_1;
  wire add_2_1_i_33__1_n_1;
  wire add_2_1_i_34__1_n_1;
  wire add_2_1_i_35__1_n_1;
  wire add_2_1_i_36__1_n_1;
  wire add_2_1_i_37__1_n_1;
  wire add_2_1_i_38__1_n_1;
  wire add_2_1_i_39__1_n_1;
  wire add_2_1_i_3__1_n_1;
  wire add_2_1_i_40__1_n_1;
  wire add_2_1_i_41__1_n_1;
  wire add_2_1_i_42__1_n_1;
  wire add_2_1_i_43__1_n_1;
  wire add_2_1_i_44__1_n_1;
  wire add_2_1_i_45__1_n_1;
  wire add_2_1_i_46__1_n_1;
  wire add_2_1_i_47__1_n_1;
  wire add_2_1_i_48__1_n_1;
  wire add_2_1_i_49__1_n_1;
  wire add_2_1_i_4__1_n_1;
  wire add_2_1_i_50__1_n_1;
  wire add_2_1_i_51__1_n_1;
  wire add_2_1_i_52__1_n_1;
  wire add_2_1_i_53__1_n_1;
  wire add_2_1_i_54__1_n_1;
  wire add_2_1_i_55__1_n_1;
  wire add_2_1_i_56__1_n_1;
  wire add_2_1_i_5__1_n_1;
  wire add_2_1_i_6__1_n_1;
  wire add_2_1_i_7__1_n_1;
  wire add_2_1_i_8__1_n_1;
  wire add_2_1_i_9__1_n_1;
  wire add_2_2_i_10__1_n_1;
  wire add_2_2_i_11__1_n_1;
  wire add_2_2_i_12__1_n_1;
  wire add_2_2_i_13__1_n_1;
  wire add_2_2_i_14__1_n_1;
  wire add_2_2_i_15__1_n_1;
  wire add_2_2_i_16__1_n_1;
  wire add_2_2_i_17__1_n_1;
  wire add_2_2_i_18__1_n_1;
  wire add_2_2_i_19__1_n_1;
  wire add_2_2_i_1__1_n_1;
  wire add_2_2_i_20__1_n_1;
  wire add_2_2_i_21__1_n_1;
  wire add_2_2_i_22__1_n_1;
  wire add_2_2_i_23__1_n_1;
  wire add_2_2_i_24__1_n_1;
  wire add_2_2_i_25__1_n_1;
  wire add_2_2_i_26__1_n_1;
  wire add_2_2_i_27__1_n_1;
  wire add_2_2_i_28__1_n_1;
  wire add_2_2_i_29__1_n_1;
  wire add_2_2_i_2__1_n_1;
  wire add_2_2_i_30__1_n_1;
  wire add_2_2_i_31__1_n_1;
  wire add_2_2_i_32__1_n_1;
  wire add_2_2_i_33__1_n_1;
  wire add_2_2_i_34__1_n_1;
  wire add_2_2_i_35__1_n_1;
  wire add_2_2_i_36__1_n_1;
  wire add_2_2_i_37__1_n_1;
  wire add_2_2_i_38__1_n_1;
  wire add_2_2_i_39__1_n_1;
  wire add_2_2_i_3__1_n_1;
  wire add_2_2_i_40__1_n_1;
  wire add_2_2_i_41__1_n_1;
  wire add_2_2_i_42__1_n_1;
  wire add_2_2_i_43__1_n_1;
  wire add_2_2_i_44__1_n_1;
  wire add_2_2_i_45__1_n_1;
  wire add_2_2_i_46__1_n_1;
  wire add_2_2_i_47__1_n_1;
  wire add_2_2_i_48__1_n_1;
  wire add_2_2_i_49__1_n_1;
  wire add_2_2_i_4__1_n_1;
  wire add_2_2_i_50__1_n_1;
  wire add_2_2_i_51__1_n_1;
  wire add_2_2_i_52__1_n_1;
  wire add_2_2_i_53__1_n_1;
  wire add_2_2_i_54__1_n_1;
  wire add_2_2_i_55__1_n_1;
  wire add_2_2_i_56__1_n_1;
  wire add_2_2_i_5__1_n_1;
  wire add_2_2_i_6__1_n_1;
  wire add_2_2_i_7__1_n_1;
  wire add_2_2_i_8__1_n_1;
  wire add_2_2_i_9__1_n_1;
  wire add_2_3_i_10__1_n_1;
  wire add_2_3_i_11__1_n_1;
  wire add_2_3_i_12__1_n_1;
  wire add_2_3_i_13__1_n_1;
  wire add_2_3_i_14__1_n_1;
  wire add_2_3_i_15__1_n_1;
  wire add_2_3_i_16__1_n_1;
  wire add_2_3_i_17__1_n_1;
  wire add_2_3_i_18__1_n_1;
  wire add_2_3_i_19__1_n_1;
  wire add_2_3_i_1__1_n_1;
  wire add_2_3_i_20__1_n_1;
  wire add_2_3_i_21__1_n_1;
  wire add_2_3_i_22__1_n_1;
  wire add_2_3_i_23__1_n_1;
  wire add_2_3_i_24__1_n_1;
  wire add_2_3_i_25__1_n_1;
  wire add_2_3_i_26__1_n_1;
  wire add_2_3_i_27__1_n_1;
  wire add_2_3_i_28__1_n_1;
  wire add_2_3_i_29__1_n_1;
  wire add_2_3_i_2__1_n_1;
  wire add_2_3_i_30__1_n_1;
  wire add_2_3_i_31__1_n_1;
  wire add_2_3_i_32__1_n_1;
  wire add_2_3_i_33__1_n_1;
  wire add_2_3_i_34__1_n_1;
  wire add_2_3_i_35__1_n_1;
  wire add_2_3_i_36__1_n_1;
  wire add_2_3_i_37__1_n_1;
  wire add_2_3_i_38__1_n_1;
  wire add_2_3_i_39__1_n_1;
  wire add_2_3_i_3__1_n_1;
  wire add_2_3_i_40__1_n_1;
  wire add_2_3_i_41__1_n_1;
  wire add_2_3_i_42__1_n_1;
  wire add_2_3_i_43__1_n_1;
  wire add_2_3_i_44__1_n_1;
  wire add_2_3_i_45__1_n_1;
  wire add_2_3_i_46__1_n_1;
  wire add_2_3_i_47__1_n_1;
  wire add_2_3_i_48__1_n_1;
  wire add_2_3_i_49__1_n_1;
  wire add_2_3_i_4__1_n_1;
  wire add_2_3_i_50__1_n_1;
  wire add_2_3_i_51__1_n_1;
  wire add_2_3_i_52__1_n_1;
  wire add_2_3_i_53__1_n_1;
  wire add_2_3_i_54__1_n_1;
  wire add_2_3_i_55__1_n_1;
  wire add_2_3_i_56__1_n_1;
  wire add_2_3_i_5__1_n_1;
  wire add_2_3_i_6__1_n_1;
  wire add_2_3_i_7__1_n_1;
  wire add_2_3_i_8__1_n_1;
  wire add_2_3_i_9__1_n_1;
  wire add_3_0_i_10__1_n_1;
  wire add_3_0_i_11__1_n_1;
  wire add_3_0_i_12__1_n_1;
  wire add_3_0_i_13__1_n_1;
  wire add_3_0_i_14__1_n_1;
  wire add_3_0_i_15__1_n_1;
  wire add_3_0_i_16__1_n_1;
  wire add_3_0_i_17__1_n_1;
  wire add_3_0_i_18__1_n_1;
  wire add_3_0_i_19__1_n_1;
  wire add_3_0_i_1__1_n_1;
  wire add_3_0_i_20__1_n_1;
  wire add_3_0_i_21__1_n_1;
  wire add_3_0_i_22__1_n_1;
  wire add_3_0_i_23__1_n_1;
  wire add_3_0_i_24__1_n_1;
  wire add_3_0_i_25__1_n_1;
  wire add_3_0_i_26__1_n_1;
  wire add_3_0_i_27__1_n_1;
  wire add_3_0_i_28__1_n_1;
  wire add_3_0_i_29__1_n_1;
  wire add_3_0_i_2__1_n_1;
  wire add_3_0_i_30__1_n_1;
  wire add_3_0_i_31__1_n_1;
  wire add_3_0_i_32__1_n_1;
  wire add_3_0_i_33__1_n_1;
  wire add_3_0_i_34__1_n_1;
  wire add_3_0_i_35__1_n_1;
  wire add_3_0_i_36__1_n_1;
  wire add_3_0_i_37__1_n_1;
  wire add_3_0_i_38__1_n_1;
  wire add_3_0_i_39__1_n_1;
  wire add_3_0_i_3__1_n_1;
  wire add_3_0_i_40__1_n_1;
  wire add_3_0_i_41__1_n_1;
  wire add_3_0_i_42__1_n_1;
  wire add_3_0_i_43__1_n_1;
  wire add_3_0_i_44__1_n_1;
  wire add_3_0_i_45__1_n_1;
  wire add_3_0_i_46__1_n_1;
  wire add_3_0_i_47__1_n_1;
  wire add_3_0_i_48__1_n_1;
  wire add_3_0_i_49__1_n_1;
  wire add_3_0_i_4__1_n_1;
  wire add_3_0_i_50__1_n_1;
  wire add_3_0_i_51__1_n_1;
  wire add_3_0_i_52__1_n_1;
  wire add_3_0_i_53__1_n_1;
  wire add_3_0_i_54__1_n_1;
  wire add_3_0_i_55__1_n_1;
  wire add_3_0_i_56__1_n_1;
  wire add_3_0_i_57__1_n_1;
  wire add_3_0_i_58__1_n_1;
  wire add_3_0_i_5__1_n_1;
  wire add_3_0_i_6__1_n_1;
  wire add_3_0_i_7__1_n_1;
  wire add_3_0_i_8__1_n_1;
  wire add_3_0_i_9__1_n_1;
  wire add_3_1_i_10__1_n_1;
  wire add_3_1_i_11__1_n_1;
  wire add_3_1_i_12__1_n_1;
  wire add_3_1_i_13__1_n_1;
  wire add_3_1_i_14__1_n_1;
  wire add_3_1_i_15__1_n_1;
  wire add_3_1_i_16__1_n_1;
  wire add_3_1_i_17__1_n_1;
  wire add_3_1_i_18__1_n_1;
  wire add_3_1_i_19__1_n_1;
  wire add_3_1_i_1__1_n_1;
  wire add_3_1_i_20__1_n_1;
  wire add_3_1_i_21__1_n_1;
  wire add_3_1_i_22__1_n_1;
  wire add_3_1_i_23__1_n_1;
  wire add_3_1_i_24__1_n_1;
  wire add_3_1_i_25__1_n_1;
  wire add_3_1_i_26__1_n_1;
  wire add_3_1_i_27__1_n_1;
  wire add_3_1_i_28__1_n_1;
  wire add_3_1_i_29__1_n_1;
  wire add_3_1_i_2__1_n_1;
  wire add_3_1_i_30__1_n_1;
  wire add_3_1_i_31__1_n_1;
  wire add_3_1_i_32__1_n_1;
  wire add_3_1_i_33__1_n_1;
  wire add_3_1_i_34__1_n_1;
  wire add_3_1_i_35__1_n_1;
  wire add_3_1_i_36__1_n_1;
  wire add_3_1_i_37__1_n_1;
  wire add_3_1_i_38__1_n_1;
  wire add_3_1_i_39__1_n_1;
  wire add_3_1_i_3__1_n_1;
  wire add_3_1_i_40__1_n_1;
  wire add_3_1_i_41__1_n_1;
  wire add_3_1_i_42__1_n_1;
  wire add_3_1_i_43__1_n_1;
  wire add_3_1_i_44__1_n_1;
  wire add_3_1_i_45__1_n_1;
  wire add_3_1_i_46__1_n_1;
  wire add_3_1_i_47__1_n_1;
  wire add_3_1_i_48__1_n_1;
  wire add_3_1_i_49__1_n_1;
  wire add_3_1_i_4__1_n_1;
  wire add_3_1_i_50__1_n_1;
  wire add_3_1_i_51__1_n_1;
  wire add_3_1_i_52__1_n_1;
  wire add_3_1_i_53__1_n_1;
  wire add_3_1_i_54__1_n_1;
  wire add_3_1_i_55__1_n_1;
  wire add_3_1_i_56__1_n_1;
  wire add_3_1_i_57__1_n_1;
  wire add_3_1_i_58__1_n_1;
  wire add_3_1_i_5__1_n_1;
  wire add_3_1_i_6__1_n_1;
  wire add_3_1_i_7__1_n_1;
  wire add_3_1_i_8__1_n_1;
  wire add_3_1_i_9__1_n_1;
  wire add_4_i_10__1_n_1;
  wire add_4_i_11__1_n_1;
  wire add_4_i_12__1_n_1;
  wire add_4_i_13__1_n_1;
  wire add_4_i_14__1_n_1;
  wire add_4_i_15__1_n_1;
  wire add_4_i_16__1_n_1;
  wire add_4_i_17__1_n_1;
  wire add_4_i_18__1_n_1;
  wire add_4_i_19__1_n_1;
  wire add_4_i_1__1_n_1;
  wire add_4_i_20__1_n_1;
  wire add_4_i_21__1_n_1;
  wire add_4_i_22__1_n_1;
  wire add_4_i_23__1_n_1;
  wire add_4_i_24__1_n_1;
  wire add_4_i_25__1_n_1;
  wire add_4_i_26__1_n_1;
  wire add_4_i_27__1_n_1;
  wire add_4_i_28__1_n_1;
  wire add_4_i_29__1_n_1;
  wire add_4_i_2__1_n_1;
  wire add_4_i_30__1_n_1;
  wire add_4_i_31__1_n_1;
  wire add_4_i_32__1_n_1;
  wire add_4_i_33__1_n_1;
  wire add_4_i_34__1_n_1;
  wire add_4_i_35__1_n_1;
  wire add_4_i_36__1_n_1;
  wire add_4_i_37__1_n_1;
  wire add_4_i_38__1_n_1;
  wire add_4_i_39__1_n_1;
  wire add_4_i_3__1_n_1;
  wire add_4_i_40__1_n_1;
  wire add_4_i_41__1_n_1;
  wire add_4_i_42__1_n_1;
  wire add_4_i_43__1_n_1;
  wire add_4_i_44__1_n_1;
  wire add_4_i_45__1_n_1;
  wire add_4_i_46__1_n_1;
  wire add_4_i_47__1_n_1;
  wire add_4_i_48__1_n_1;
  wire add_4_i_49__1_n_1;
  wire add_4_i_4__1_n_1;
  wire add_4_i_50__1_n_1;
  wire add_4_i_51__1_n_1;
  wire add_4_i_52__1_n_1;
  wire add_4_i_53__1_n_1;
  wire add_4_i_54__1_n_1;
  wire add_4_i_55__1_n_1;
  wire add_4_i_56__1_n_1;
  wire add_4_i_57__1_n_1;
  wire add_4_i_58__1_n_1;
  wire add_4_i_59__1_n_1;
  wire add_4_i_5__1_n_1;
  wire add_4_i_60__1_n_1;
  wire add_4_i_6__1_n_1;
  wire add_4_i_7__1_n_1;
  wire add_4_i_8__1_n_1;
  wire add_4_i_9__1_n_1;
  wire ch2_win_data__0;
  wire [4:0]coef0;
  wire [2:0]coef1;
  wire [12:0]coef10;
  wire [1:0]coef11;
  wire [0:0]coef12;
  wire [2:0]coef13;
  wire [6:0]coef14;
  wire [5:0]coef15;
  wire [2:0]coef2;
  wire [6:0]coef3;
  wire [6:0]coef4;
  wire [4:0]coef5;
  wire [8:0]coef6;
  wire [6:0]coef7;
  wire [4:0]coef8;
  wire [6:0]coef9;
  wire [7:0]din;
  wire [29:29]dst_data_30;
  wire [29:0]dst_data_30w;
  wire line0_i_103_n_1;
  wire line0_i_103_n_2;
  wire line0_i_103_n_3;
  wire line0_i_103_n_4;
  wire line0_i_104_n_1;
  wire line0_i_105_n_1;
  wire line0_i_106_n_1;
  wire line0_i_107_n_1;
  wire line0_i_108_n_1;
  wire line0_i_109_n_1;
  wire line0_i_110_n_1;
  wire line0_i_111_n_1;
  wire line0_i_112_n_1;
  wire line0_i_112_n_2;
  wire line0_i_112_n_3;
  wire line0_i_112_n_4;
  wire line0_i_113_n_1;
  wire line0_i_114_n_1;
  wire line0_i_115_n_1;
  wire line0_i_116_n_1;
  wire line0_i_117_n_1;
  wire line0_i_118_n_1;
  wire line0_i_119_n_1;
  wire line0_i_120_n_1;
  wire line0_i_157_n_1;
  wire line0_i_158_n_1;
  wire line0_i_159_n_1;
  wire line0_i_160_n_1;
  wire line0_i_161_n_1;
  wire line0_i_162_n_1;
  wire line0_i_163_n_1;
  wire line0_i_164_n_1;
  wire line0_i_165_n_1;
  wire line0_i_166_n_1;
  wire line0_i_167_n_1;
  wire line0_i_168_n_1;
  wire line0_i_169_n_1;
  wire line0_i_170_n_1;
  wire line0_i_171_n_1;
  wire line0_i_172_n_1;
  wire line0_i_27_n_3;
  wire line0_i_27_n_4;
  wire line0_i_28_n_3;
  wire line0_i_28_n_4;
  wire line0_i_34_n_1;
  wire line0_i_34_n_2;
  wire line0_i_34_n_3;
  wire line0_i_34_n_4;
  wire line0_i_35_n_1;
  wire line0_i_36_n_1;
  wire line0_i_37_n_1;
  wire line0_i_38_n_1;
  wire line0_i_39_n_1;
  wire line0_i_40_n_1;
  wire line0_i_40_n_2;
  wire line0_i_40_n_3;
  wire line0_i_40_n_4;
  wire line0_i_42_n_1;
  wire line0_i_43_n_1;
  wire line0_i_44_n_1;
  wire line0_i_67_n_1;
  wire line0_i_67_n_2;
  wire line0_i_67_n_3;
  wire line0_i_67_n_4;
  wire line0_i_68_n_1;
  wire line0_i_69_n_1;
  wire line0_i_70_n_1;
  wire line0_i_71_n_1;
  wire line0_i_72_n_1;
  wire line0_i_73_n_1;
  wire line0_i_73_n_2;
  wire line0_i_73_n_3;
  wire line0_i_73_n_4;
  wire line0_i_74_n_1;
  wire line0_i_75_n_1;
  wire line0_i_76_n_1;
  wire line0_i_77_n_1;
  wire line0_i_78_n_1;
  wire out_data1;
  wire out_data2;
  wire rst_n_i_IBUF;
  wire u0_i_14_n_1;
  wire u0_i_15_n_1;
  wire u10_i_14_n_1;
  wire u10_i_15_n_1;
  wire u12_i_7_n_1;
  wire u13_i_8_n_1;
  wire u1_i_15_n_1;
  wire u1_i_16_n_1;
  wire u1_i_17_n_1;
  wire u1_i_18_n_1;
  wire u1_i_19_n_1;
  wire u1_i_20_n_1;
  wire u2_i_13_n_1;
  wire u2_i_14_n_1;
  wire u2_i_15_n_1;
  wire u2_i_16_n_1;
  wire u2_i_17_n_1;
  wire u2_i_18_n_1;
  wire u2_i_5_0;
  wire u4_i_10_n_1;
  wire u4_i_11_n_1;
  wire u4_i_8_n_1;
  wire u4_i_9_n_1;
  wire u7_i_10_n_1;
  wire u7_i_5_0;
  wire u7_i_5_1;
  wire u7_i_5_2;
  wire u7_i_5_3;
  wire u7_i_8_n_1;
  wire u7_i_9_n_1;
  wire u8_i_13_n_1;
  wire u8_i_14_n_1;
  wire u8_i_15_n_1;
  wire u8_i_16_n_1;
  wire u9_i_13_n_1;
  wire [5:0]\win_cnt_reg[0] ;
  wire [7:0]\win_cnt_reg[0]_0 ;
  wire [5:0]\win_cnt_reg[0]_1 ;
  wire [9:0]\win_cnt_reg[2] ;
  wire [8:0]\win_cnt_reg[2]_0 ;
  wire [4:0]\win_cnt_reg[3] ;
  wire [3:0]NLW_line0_i_103_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_112_O_UNCONNECTED;
  wire [3:3]NLW_line0_i_27_CO_UNCONNECTED;
  wire [3:0]NLW_line0_i_27_O_UNCONNECTED;
  wire [3:3]NLW_line0_i_28_CO_UNCONNECTED;
  wire [3:0]NLW_line0_i_28_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_34_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_40_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_67_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_73_O_UNCONNECTED;

  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_0
       (.A({add_1_0_i_1__1_n_1,add_1_0_i_2__1_n_1,add_1_0_i_3__1_n_1,add_1_0_i_4__1_n_1,add_1_0_i_5__1_n_1,add_1_0_i_6__1_n_1,add_1_0_i_7__1_n_1,add_1_0_i_8__1_n_1,add_1_0_i_9__1_n_1,add_1_0_i_10__1_n_1,add_1_0_i_11__1_n_1,add_1_0_i_12__1_n_1,add_1_0_i_13__1_n_1,add_1_0_i_14__1_n_1,add_1_0_i_15__1_n_1,add_1_0_i_16__1_n_1,add_1_0_i_17__1_n_1,add_1_0_i_18__1_n_1,add_1_0_i_19__1_n_1,add_1_0_i_20__1_n_1,add_1_0_i_21__1_n_1,add_1_0_i_22__1_n_1,add_1_0_i_23__1_n_1,add_1_0_i_24__1_n_1,add_1_0_i_25__1_n_1,add_1_0_i_26__1_n_1,add_1_0_i_27__1_n_1}),
        .B({add_1_0_i_28__1_n_1,add_1_0_i_29__1_n_1,add_1_0_i_30__1_n_1,add_1_0_i_31__1_n_1,add_1_0_i_32__1_n_1,add_1_0_i_33__1_n_1,add_1_0_i_34__1_n_1,add_1_0_i_35__1_n_1,add_1_0_i_36__1_n_1,add_1_0_i_37__1_n_1,add_1_0_i_38__1_n_1,add_1_0_i_39__1_n_1,add_1_0_i_40__1_n_1,add_1_0_i_41__1_n_1,add_1_0_i_42__1_n_1,add_1_0_i_43__1_n_1,add_1_0_i_44__1_n_1,add_1_0_i_45__1_n_1,add_1_0_i_46__1_n_1,add_1_0_i_47__1_n_1,add_1_0_i_48__1_n_1,add_1_0_i_49__1_n_1,add_1_0_i_50__1_n_1,add_1_0_i_51__1_n_1,add_1_0_i_52__1_n_1,add_1_0_i_53__1_n_1,add_1_0_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[0]_77 ));
  (* SOFT_HLUTNM = "soft_lutpair1124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [17]),
        .O(add_1_0_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [16]),
        .O(add_1_0_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [15]),
        .O(add_1_0_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [14]),
        .O(add_1_0_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [13]),
        .O(add_1_0_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [12]),
        .O(add_1_0_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [11]),
        .O(add_1_0_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [10]),
        .O(add_1_0_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [9]),
        .O(add_1_0_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [8]),
        .O(add_1_0_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [26]),
        .O(add_1_0_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [7]),
        .O(add_1_0_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [6]),
        .O(add_1_0_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [5]),
        .O(add_1_0_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [4]),
        .O(add_1_0_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [3]),
        .O(add_1_0_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [2]),
        .O(add_1_0_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [1]),
        .O(add_1_0_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [0]),
        .O(add_1_0_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [26]),
        .O(add_1_0_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [25]),
        .O(add_1_0_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [25]),
        .O(add_1_0_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [24]),
        .O(add_1_0_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [23]),
        .O(add_1_0_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [22]),
        .O(add_1_0_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [21]),
        .O(add_1_0_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [20]),
        .O(add_1_0_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [19]),
        .O(add_1_0_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [18]),
        .O(add_1_0_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [17]),
        .O(add_1_0_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [16]),
        .O(add_1_0_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [15]),
        .O(add_1_0_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [24]),
        .O(add_1_0_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [14]),
        .O(add_1_0_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [13]),
        .O(add_1_0_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [12]),
        .O(add_1_0_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [11]),
        .O(add_1_0_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [10]),
        .O(add_1_0_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [9]),
        .O(add_1_0_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [8]),
        .O(add_1_0_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [7]),
        .O(add_1_0_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1132" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [6]),
        .O(add_1_0_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1132" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [5]),
        .O(add_1_0_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1127" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [23]),
        .O(add_1_0_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [4]),
        .O(add_1_0_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [3]),
        .O(add_1_0_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [2]),
        .O(add_1_0_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [1]),
        .O(add_1_0_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_62 [0]),
        .O(add_1_0_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1127" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [22]),
        .O(add_1_0_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [21]),
        .O(add_1_0_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [20]),
        .O(add_1_0_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [19]),
        .O(add_1_0_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_61 [18]),
        .O(add_1_0_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_1
       (.A({add_1_1_i_1__1_n_1,add_1_1_i_2__1_n_1,add_1_1_i_3__1_n_1,add_1_1_i_4__1_n_1,add_1_1_i_5__1_n_1,add_1_1_i_6__1_n_1,add_1_1_i_7__1_n_1,add_1_1_i_8__1_n_1,add_1_1_i_9__1_n_1,add_1_1_i_10__1_n_1,add_1_1_i_11__1_n_1,add_1_1_i_12__1_n_1,add_1_1_i_13__1_n_1,add_1_1_i_14__1_n_1,add_1_1_i_15__1_n_1,add_1_1_i_16__1_n_1,add_1_1_i_17__1_n_1,add_1_1_i_18__1_n_1,add_1_1_i_19__1_n_1,add_1_1_i_20__1_n_1,add_1_1_i_21__1_n_1,add_1_1_i_22__1_n_1,add_1_1_i_23__1_n_1,add_1_1_i_24__1_n_1,add_1_1_i_25__1_n_1,add_1_1_i_26__1_n_1,add_1_1_i_27__1_n_1}),
        .B({add_1_1_i_28__1_n_1,add_1_1_i_29__1_n_1,add_1_1_i_30__1_n_1,add_1_1_i_31__1_n_1,add_1_1_i_32__1_n_1,add_1_1_i_33__1_n_1,add_1_1_i_34__1_n_1,add_1_1_i_35__1_n_1,add_1_1_i_36__1_n_1,add_1_1_i_37__1_n_1,add_1_1_i_38__1_n_1,add_1_1_i_39__1_n_1,add_1_1_i_40__1_n_1,add_1_1_i_41__1_n_1,add_1_1_i_42__1_n_1,add_1_1_i_43__1_n_1,add_1_1_i_44__1_n_1,add_1_1_i_45__1_n_1,add_1_1_i_46__1_n_1,add_1_1_i_47__1_n_1,add_1_1_i_48__1_n_1,add_1_1_i_49__1_n_1,add_1_1_i_50__1_n_1,add_1_1_i_51__1_n_1,add_1_1_i_52__1_n_1,add_1_1_i_53__1_n_1,add_1_1_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[1]_78 ));
  (* SOFT_HLUTNM = "soft_lutpair1151" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [17]),
        .O(add_1_1_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1151" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [16]),
        .O(add_1_1_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1150" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [15]),
        .O(add_1_1_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1150" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [14]),
        .O(add_1_1_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1149" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [13]),
        .O(add_1_1_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1149" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [12]),
        .O(add_1_1_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1148" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [11]),
        .O(add_1_1_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1148" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [10]),
        .O(add_1_1_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1147" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [9]),
        .O(add_1_1_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1147" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [8]),
        .O(add_1_1_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1156" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [26]),
        .O(add_1_1_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [7]),
        .O(add_1_1_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [6]),
        .O(add_1_1_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [5]),
        .O(add_1_1_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [4]),
        .O(add_1_1_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [3]),
        .O(add_1_1_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [2]),
        .O(add_1_1_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [1]),
        .O(add_1_1_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [0]),
        .O(add_1_1_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [26]),
        .O(add_1_1_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [25]),
        .O(add_1_1_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [25]),
        .O(add_1_1_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [24]),
        .O(add_1_1_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [23]),
        .O(add_1_1_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [22]),
        .O(add_1_1_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [21]),
        .O(add_1_1_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [20]),
        .O(add_1_1_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [19]),
        .O(add_1_1_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [18]),
        .O(add_1_1_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [17]),
        .O(add_1_1_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [16]),
        .O(add_1_1_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [15]),
        .O(add_1_1_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [24]),
        .O(add_1_1_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [14]),
        .O(add_1_1_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [13]),
        .O(add_1_1_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [12]),
        .O(add_1_1_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [11]),
        .O(add_1_1_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [10]),
        .O(add_1_1_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [9]),
        .O(add_1_1_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [8]),
        .O(add_1_1_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [7]),
        .O(add_1_1_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [6]),
        .O(add_1_1_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [5]),
        .O(add_1_1_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [23]),
        .O(add_1_1_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [4]),
        .O(add_1_1_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [3]),
        .O(add_1_1_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [2]),
        .O(add_1_1_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [1]),
        .O(add_1_1_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1156" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_64 [0]),
        .O(add_1_1_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [22]),
        .O(add_1_1_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1153" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [21]),
        .O(add_1_1_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1153" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [20]),
        .O(add_1_1_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1152" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [19]),
        .O(add_1_1_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1152" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_63 [18]),
        .O(add_1_1_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_2
       (.A({add_1_2_i_1__1_n_1,add_1_2_i_2__1_n_1,add_1_2_i_3__1_n_1,add_1_2_i_4__1_n_1,add_1_2_i_5__1_n_1,add_1_2_i_6__1_n_1,add_1_2_i_7__1_n_1,add_1_2_i_8__1_n_1,add_1_2_i_9__1_n_1,add_1_2_i_10__1_n_1,add_1_2_i_11__1_n_1,add_1_2_i_12__1_n_1,add_1_2_i_13__1_n_1,add_1_2_i_14__1_n_1,add_1_2_i_15__1_n_1,add_1_2_i_16__1_n_1,add_1_2_i_17__1_n_1,add_1_2_i_18__1_n_1,add_1_2_i_19__1_n_1,add_1_2_i_20__1_n_1,add_1_2_i_21__1_n_1,add_1_2_i_22__1_n_1,add_1_2_i_23__1_n_1,add_1_2_i_24__1_n_1,add_1_2_i_25__1_n_1,add_1_2_i_26__1_n_1,add_1_2_i_27__1_n_1}),
        .B({add_1_2_i_28__1_n_1,add_1_2_i_29__1_n_1,add_1_2_i_30__1_n_1,add_1_2_i_31__1_n_1,add_1_2_i_32__1_n_1,add_1_2_i_33__1_n_1,add_1_2_i_34__1_n_1,add_1_2_i_35__1_n_1,add_1_2_i_36__1_n_1,add_1_2_i_37__1_n_1,add_1_2_i_38__1_n_1,add_1_2_i_39__1_n_1,add_1_2_i_40__1_n_1,add_1_2_i_41__1_n_1,add_1_2_i_42__1_n_1,add_1_2_i_43__1_n_1,add_1_2_i_44__1_n_1,add_1_2_i_45__1_n_1,add_1_2_i_46__1_n_1,add_1_2_i_47__1_n_1,add_1_2_i_48__1_n_1,add_1_2_i_49__1_n_1,add_1_2_i_50__1_n_1,add_1_2_i_51__1_n_1,add_1_2_i_52__1_n_1,add_1_2_i_53__1_n_1,add_1_2_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[2]_79 ));
  (* SOFT_HLUTNM = "soft_lutpair1178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [17]),
        .O(add_1_2_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [16]),
        .O(add_1_2_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [15]),
        .O(add_1_2_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [14]),
        .O(add_1_2_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [13]),
        .O(add_1_2_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [12]),
        .O(add_1_2_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [11]),
        .O(add_1_2_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [10]),
        .O(add_1_2_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [9]),
        .O(add_1_2_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [8]),
        .O(add_1_2_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [26]),
        .O(add_1_2_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [7]),
        .O(add_1_2_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [6]),
        .O(add_1_2_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [5]),
        .O(add_1_2_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [4]),
        .O(add_1_2_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [3]),
        .O(add_1_2_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [2]),
        .O(add_1_2_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [1]),
        .O(add_1_2_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [0]),
        .O(add_1_2_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [26]),
        .O(add_1_2_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [25]),
        .O(add_1_2_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [25]),
        .O(add_1_2_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [24]),
        .O(add_1_2_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [23]),
        .O(add_1_2_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [22]),
        .O(add_1_2_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [21]),
        .O(add_1_2_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [20]),
        .O(add_1_2_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [19]),
        .O(add_1_2_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1192" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [18]),
        .O(add_1_2_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1192" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [17]),
        .O(add_1_2_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1191" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [16]),
        .O(add_1_2_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1191" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [15]),
        .O(add_1_2_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [24]),
        .O(add_1_2_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [14]),
        .O(add_1_2_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [13]),
        .O(add_1_2_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [12]),
        .O(add_1_2_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [11]),
        .O(add_1_2_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [10]),
        .O(add_1_2_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [9]),
        .O(add_1_2_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [8]),
        .O(add_1_2_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [7]),
        .O(add_1_2_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [6]),
        .O(add_1_2_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [5]),
        .O(add_1_2_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [23]),
        .O(add_1_2_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1185" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [4]),
        .O(add_1_2_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1185" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [3]),
        .O(add_1_2_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1184" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [2]),
        .O(add_1_2_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1184" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [1]),
        .O(add_1_2_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_66 [0]),
        .O(add_1_2_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [22]),
        .O(add_1_2_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [21]),
        .O(add_1_2_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [20]),
        .O(add_1_2_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [19]),
        .O(add_1_2_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_65 [18]),
        .O(add_1_2_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_3
       (.A({add_1_3_i_1__1_n_1,add_1_3_i_2__1_n_1,add_1_3_i_3__1_n_1,add_1_3_i_4__1_n_1,add_1_3_i_5__1_n_1,add_1_3_i_6__1_n_1,add_1_3_i_7__1_n_1,add_1_3_i_8__1_n_1,add_1_3_i_9__1_n_1,add_1_3_i_10__1_n_1,add_1_3_i_11__1_n_1,add_1_3_i_12__1_n_1,add_1_3_i_13__1_n_1,add_1_3_i_14__1_n_1,add_1_3_i_15__1_n_1,add_1_3_i_16__1_n_1,add_1_3_i_17__1_n_1,add_1_3_i_18__1_n_1,add_1_3_i_19__1_n_1,add_1_3_i_20__1_n_1,add_1_3_i_21__1_n_1,add_1_3_i_22__1_n_1,add_1_3_i_23__1_n_1,add_1_3_i_24__1_n_1,add_1_3_i_25__1_n_1,add_1_3_i_26__1_n_1,add_1_3_i_27__1_n_1}),
        .B({add_1_3_i_28__1_n_1,add_1_3_i_29__1_n_1,add_1_3_i_30__1_n_1,add_1_3_i_31__1_n_1,add_1_3_i_32__1_n_1,add_1_3_i_33__1_n_1,add_1_3_i_34__1_n_1,add_1_3_i_35__1_n_1,add_1_3_i_36__1_n_1,add_1_3_i_37__1_n_1,add_1_3_i_38__1_n_1,add_1_3_i_39__1_n_1,add_1_3_i_40__1_n_1,add_1_3_i_41__1_n_1,add_1_3_i_42__1_n_1,add_1_3_i_43__1_n_1,add_1_3_i_44__1_n_1,add_1_3_i_45__1_n_1,add_1_3_i_46__1_n_1,add_1_3_i_47__1_n_1,add_1_3_i_48__1_n_1,add_1_3_i_49__1_n_1,add_1_3_i_50__1_n_1,add_1_3_i_51__1_n_1,add_1_3_i_52__1_n_1,add_1_3_i_53__1_n_1,add_1_3_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[3]_80 ));
  (* SOFT_HLUTNM = "soft_lutpair1205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [17]),
        .O(add_1_3_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [16]),
        .O(add_1_3_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1204" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [15]),
        .O(add_1_3_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1204" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [14]),
        .O(add_1_3_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1203" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [13]),
        .O(add_1_3_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1203" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [12]),
        .O(add_1_3_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1202" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [11]),
        .O(add_1_3_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1202" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [10]),
        .O(add_1_3_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1201" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [9]),
        .O(add_1_3_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1201" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [8]),
        .O(add_1_3_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [26]),
        .O(add_1_3_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1200" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [7]),
        .O(add_1_3_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1200" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [6]),
        .O(add_1_3_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [5]),
        .O(add_1_3_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [4]),
        .O(add_1_3_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [3]),
        .O(add_1_3_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [2]),
        .O(add_1_3_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1197" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [1]),
        .O(add_1_3_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1197" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [0]),
        .O(add_1_3_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [26]),
        .O(add_1_3_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [25]),
        .O(add_1_3_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [25]),
        .O(add_1_3_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [24]),
        .O(add_1_3_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [23]),
        .O(add_1_3_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [22]),
        .O(add_1_3_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [21]),
        .O(add_1_3_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [20]),
        .O(add_1_3_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [19]),
        .O(add_1_3_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1219" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [18]),
        .O(add_1_3_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1219" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [17]),
        .O(add_1_3_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1218" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [16]),
        .O(add_1_3_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1218" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [15]),
        .O(add_1_3_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [24]),
        .O(add_1_3_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [14]),
        .O(add_1_3_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [13]),
        .O(add_1_3_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [12]),
        .O(add_1_3_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [11]),
        .O(add_1_3_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [10]),
        .O(add_1_3_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [9]),
        .O(add_1_3_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1214" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [8]),
        .O(add_1_3_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1214" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [7]),
        .O(add_1_3_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1213" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [6]),
        .O(add_1_3_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1213" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [5]),
        .O(add_1_3_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1208" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [23]),
        .O(add_1_3_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1212" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [4]),
        .O(add_1_3_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1212" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [3]),
        .O(add_1_3_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1211" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [2]),
        .O(add_1_3_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1211" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [1]),
        .O(add_1_3_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_68 [0]),
        .O(add_1_3_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1208" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [22]),
        .O(add_1_3_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1207" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [21]),
        .O(add_1_3_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1207" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [20]),
        .O(add_1_3_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [19]),
        .O(add_1_3_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_67 [18]),
        .O(add_1_3_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_4
       (.A({add_1_4_i_1__1_n_1,add_1_4_i_2__1_n_1,add_1_4_i_3__1_n_1,add_1_4_i_4__1_n_1,add_1_4_i_5__1_n_1,add_1_4_i_6__1_n_1,add_1_4_i_7__1_n_1,add_1_4_i_8__1_n_1,add_1_4_i_9__1_n_1,add_1_4_i_10__1_n_1,add_1_4_i_11__1_n_1,add_1_4_i_12__1_n_1,add_1_4_i_13__1_n_1,add_1_4_i_14__1_n_1,add_1_4_i_15__1_n_1,add_1_4_i_16__1_n_1,add_1_4_i_17__1_n_1,add_1_4_i_18__1_n_1,add_1_4_i_19__1_n_1,add_1_4_i_20__1_n_1,add_1_4_i_21__1_n_1,add_1_4_i_22__1_n_1,add_1_4_i_23__1_n_1,add_1_4_i_24__1_n_1,add_1_4_i_25__1_n_1,add_1_4_i_26__1_n_1,add_1_4_i_27__1_n_1}),
        .B({add_1_4_i_28__1_n_1,add_1_4_i_29__1_n_1,add_1_4_i_30__1_n_1,add_1_4_i_31__1_n_1,add_1_4_i_32__1_n_1,add_1_4_i_33__1_n_1,add_1_4_i_34__1_n_1,add_1_4_i_35__1_n_1,add_1_4_i_36__1_n_1,add_1_4_i_37__1_n_1,add_1_4_i_38__1_n_1,add_1_4_i_39__1_n_1,add_1_4_i_40__1_n_1,add_1_4_i_41__1_n_1,add_1_4_i_42__1_n_1,add_1_4_i_43__1_n_1,add_1_4_i_44__1_n_1,add_1_4_i_45__1_n_1,add_1_4_i_46__1_n_1,add_1_4_i_47__1_n_1,add_1_4_i_48__1_n_1,add_1_4_i_49__1_n_1,add_1_4_i_50__1_n_1,add_1_4_i_51__1_n_1,add_1_4_i_52__1_n_1,add_1_4_i_53__1_n_1,add_1_4_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[4]_81 ));
  (* SOFT_HLUTNM = "soft_lutpair1232" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [17]),
        .O(add_1_4_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1232" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [16]),
        .O(add_1_4_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [15]),
        .O(add_1_4_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [14]),
        .O(add_1_4_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1230" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [13]),
        .O(add_1_4_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1230" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [12]),
        .O(add_1_4_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [11]),
        .O(add_1_4_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [10]),
        .O(add_1_4_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [9]),
        .O(add_1_4_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [8]),
        .O(add_1_4_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1237" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [26]),
        .O(add_1_4_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [7]),
        .O(add_1_4_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [6]),
        .O(add_1_4_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [5]),
        .O(add_1_4_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [4]),
        .O(add_1_4_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [3]),
        .O(add_1_4_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [2]),
        .O(add_1_4_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [1]),
        .O(add_1_4_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [0]),
        .O(add_1_4_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [26]),
        .O(add_1_4_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [25]),
        .O(add_1_4_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1236" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [25]),
        .O(add_1_4_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [24]),
        .O(add_1_4_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [23]),
        .O(add_1_4_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [22]),
        .O(add_1_4_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [21]),
        .O(add_1_4_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [20]),
        .O(add_1_4_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [19]),
        .O(add_1_4_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [18]),
        .O(add_1_4_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [17]),
        .O(add_1_4_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1245" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [16]),
        .O(add_1_4_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1245" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [15]),
        .O(add_1_4_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1236" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [24]),
        .O(add_1_4_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1244" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [14]),
        .O(add_1_4_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1244" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [13]),
        .O(add_1_4_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [12]),
        .O(add_1_4_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [11]),
        .O(add_1_4_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1242" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [10]),
        .O(add_1_4_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1242" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [9]),
        .O(add_1_4_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1241" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [8]),
        .O(add_1_4_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1241" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [7]),
        .O(add_1_4_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1240" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [6]),
        .O(add_1_4_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1240" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [5]),
        .O(add_1_4_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1235" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [23]),
        .O(add_1_4_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1239" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [4]),
        .O(add_1_4_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1239" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [3]),
        .O(add_1_4_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [2]),
        .O(add_1_4_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [1]),
        .O(add_1_4_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1237" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_70 [0]),
        .O(add_1_4_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1235" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [22]),
        .O(add_1_4_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1234" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [21]),
        .O(add_1_4_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1234" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [20]),
        .O(add_1_4_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1233" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [19]),
        .O(add_1_4_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1233" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_69 [18]),
        .O(add_1_4_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_5
       (.A({add_1_5_i_1__1_n_1,add_1_5_i_2__1_n_1,add_1_5_i_3__1_n_1,add_1_5_i_4__1_n_1,add_1_5_i_5__1_n_1,add_1_5_i_6__1_n_1,add_1_5_i_7__1_n_1,add_1_5_i_8__1_n_1,add_1_5_i_9__1_n_1,add_1_5_i_10__1_n_1,add_1_5_i_11__1_n_1,add_1_5_i_12__1_n_1,add_1_5_i_13__1_n_1,add_1_5_i_14__1_n_1,add_1_5_i_15__1_n_1,add_1_5_i_16__1_n_1,add_1_5_i_17__1_n_1,add_1_5_i_18__1_n_1,add_1_5_i_19__1_n_1,add_1_5_i_20__1_n_1,add_1_5_i_21__1_n_1,add_1_5_i_22__1_n_1,add_1_5_i_23__1_n_1,add_1_5_i_24__1_n_1,add_1_5_i_25__1_n_1,add_1_5_i_26__1_n_1,add_1_5_i_27__1_n_1}),
        .B({add_1_5_i_28__1_n_1,add_1_5_i_29__1_n_1,add_1_5_i_30__1_n_1,add_1_5_i_31__1_n_1,add_1_5_i_32__1_n_1,add_1_5_i_33__1_n_1,add_1_5_i_34__1_n_1,add_1_5_i_35__1_n_1,add_1_5_i_36__1_n_1,add_1_5_i_37__1_n_1,add_1_5_i_38__1_n_1,add_1_5_i_39__1_n_1,add_1_5_i_40__1_n_1,add_1_5_i_41__1_n_1,add_1_5_i_42__1_n_1,add_1_5_i_43__1_n_1,add_1_5_i_44__1_n_1,add_1_5_i_45__1_n_1,add_1_5_i_46__1_n_1,add_1_5_i_47__1_n_1,add_1_5_i_48__1_n_1,add_1_5_i_49__1_n_1,add_1_5_i_50__1_n_1,add_1_5_i_51__1_n_1,add_1_5_i_52__1_n_1,add_1_5_i_53__1_n_1,add_1_5_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[5]_82 ));
  (* SOFT_HLUTNM = "soft_lutpair1259" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [17]),
        .O(add_1_5_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1259" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [16]),
        .O(add_1_5_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1258" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [15]),
        .O(add_1_5_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1258" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [14]),
        .O(add_1_5_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1257" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [13]),
        .O(add_1_5_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1257" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [12]),
        .O(add_1_5_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1256" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [11]),
        .O(add_1_5_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1256" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [10]),
        .O(add_1_5_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1255" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [9]),
        .O(add_1_5_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1255" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [8]),
        .O(add_1_5_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1264" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [26]),
        .O(add_1_5_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1254" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [7]),
        .O(add_1_5_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1254" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [6]),
        .O(add_1_5_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1253" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [5]),
        .O(add_1_5_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1253" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [4]),
        .O(add_1_5_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [3]),
        .O(add_1_5_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [2]),
        .O(add_1_5_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [1]),
        .O(add_1_5_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [0]),
        .O(add_1_5_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1277" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [26]),
        .O(add_1_5_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1277" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [25]),
        .O(add_1_5_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1263" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [25]),
        .O(add_1_5_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1276" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [24]),
        .O(add_1_5_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1276" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [23]),
        .O(add_1_5_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1275" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [22]),
        .O(add_1_5_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1275" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [21]),
        .O(add_1_5_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1274" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [20]),
        .O(add_1_5_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1274" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [19]),
        .O(add_1_5_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [18]),
        .O(add_1_5_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [17]),
        .O(add_1_5_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1272" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [16]),
        .O(add_1_5_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1272" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [15]),
        .O(add_1_5_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1263" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [24]),
        .O(add_1_5_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1271" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [14]),
        .O(add_1_5_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1271" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [13]),
        .O(add_1_5_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1270" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [12]),
        .O(add_1_5_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1270" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [11]),
        .O(add_1_5_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1269" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [10]),
        .O(add_1_5_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1269" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [9]),
        .O(add_1_5_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [8]),
        .O(add_1_5_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [7]),
        .O(add_1_5_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1267" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [6]),
        .O(add_1_5_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1267" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [5]),
        .O(add_1_5_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1262" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [23]),
        .O(add_1_5_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1266" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [4]),
        .O(add_1_5_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1266" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [3]),
        .O(add_1_5_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1265" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [2]),
        .O(add_1_5_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1265" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [1]),
        .O(add_1_5_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1264" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_72 [0]),
        .O(add_1_5_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1262" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [22]),
        .O(add_1_5_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1261" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [21]),
        .O(add_1_5_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1261" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [20]),
        .O(add_1_5_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1260" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [19]),
        .O(add_1_5_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1260" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_71 [18]),
        .O(add_1_5_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_6
       (.A({add_1_6_i_1__1_n_1,add_1_6_i_2__1_n_1,add_1_6_i_3__1_n_1,add_1_6_i_4__1_n_1,add_1_6_i_5__1_n_1,add_1_6_i_6__1_n_1,add_1_6_i_7__1_n_1,add_1_6_i_8__1_n_1,add_1_6_i_9__1_n_1,add_1_6_i_10__1_n_1,add_1_6_i_11__1_n_1,add_1_6_i_12__1_n_1,add_1_6_i_13__1_n_1,add_1_6_i_14__1_n_1,add_1_6_i_15__1_n_1,add_1_6_i_16__1_n_1,add_1_6_i_17__1_n_1,add_1_6_i_18__1_n_1,add_1_6_i_19__1_n_1,add_1_6_i_20__1_n_1,add_1_6_i_21__1_n_1,add_1_6_i_22__1_n_1,add_1_6_i_23__1_n_1,add_1_6_i_24__1_n_1,add_1_6_i_25__1_n_1,add_1_6_i_26__1_n_1,add_1_6_i_27__1_n_1}),
        .B({add_1_6_i_28__1_n_1,add_1_6_i_29__1_n_1,add_1_6_i_30__1_n_1,add_1_6_i_31__1_n_1,add_1_6_i_32__1_n_1,add_1_6_i_33__1_n_1,add_1_6_i_34__1_n_1,add_1_6_i_35__1_n_1,add_1_6_i_36__1_n_1,add_1_6_i_37__1_n_1,add_1_6_i_38__1_n_1,add_1_6_i_39__1_n_1,add_1_6_i_40__1_n_1,add_1_6_i_41__1_n_1,add_1_6_i_42__1_n_1,add_1_6_i_43__1_n_1,add_1_6_i_44__1_n_1,add_1_6_i_45__1_n_1,add_1_6_i_46__1_n_1,add_1_6_i_47__1_n_1,add_1_6_i_48__1_n_1,add_1_6_i_49__1_n_1,add_1_6_i_50__1_n_1,add_1_6_i_51__1_n_1,add_1_6_i_52__1_n_1,add_1_6_i_53__1_n_1,add_1_6_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[6]_83 ));
  (* SOFT_HLUTNM = "soft_lutpair1286" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [17]),
        .O(add_1_6_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1286" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [16]),
        .O(add_1_6_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1285" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [15]),
        .O(add_1_6_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1285" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [14]),
        .O(add_1_6_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1284" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [13]),
        .O(add_1_6_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1284" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [12]),
        .O(add_1_6_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [11]),
        .O(add_1_6_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [10]),
        .O(add_1_6_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1282" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [9]),
        .O(add_1_6_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1282" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [8]),
        .O(add_1_6_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1291" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [26]),
        .O(add_1_6_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1281" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [7]),
        .O(add_1_6_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1281" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [6]),
        .O(add_1_6_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1280" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [5]),
        .O(add_1_6_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1280" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [4]),
        .O(add_1_6_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1279" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [3]),
        .O(add_1_6_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1279" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [2]),
        .O(add_1_6_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1278" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [1]),
        .O(add_1_6_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1278" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [0]),
        .O(add_1_6_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1304" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [26]),
        .O(add_1_6_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1304" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [25]),
        .O(add_1_6_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1290" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [25]),
        .O(add_1_6_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1303" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [24]),
        .O(add_1_6_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1303" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [23]),
        .O(add_1_6_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1302" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [22]),
        .O(add_1_6_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1302" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [21]),
        .O(add_1_6_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1301" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [20]),
        .O(add_1_6_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1301" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [19]),
        .O(add_1_6_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1300" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [18]),
        .O(add_1_6_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1300" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [17]),
        .O(add_1_6_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1299" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [16]),
        .O(add_1_6_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1299" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [15]),
        .O(add_1_6_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1290" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [24]),
        .O(add_1_6_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1298" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [14]),
        .O(add_1_6_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1298" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [13]),
        .O(add_1_6_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1297" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [12]),
        .O(add_1_6_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1297" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [11]),
        .O(add_1_6_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1296" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [10]),
        .O(add_1_6_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1296" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [9]),
        .O(add_1_6_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1295" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [8]),
        .O(add_1_6_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1295" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [7]),
        .O(add_1_6_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1294" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [6]),
        .O(add_1_6_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1294" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [5]),
        .O(add_1_6_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1289" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [23]),
        .O(add_1_6_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1293" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [4]),
        .O(add_1_6_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1293" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [3]),
        .O(add_1_6_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1292" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [2]),
        .O(add_1_6_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1292" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [1]),
        .O(add_1_6_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1291" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_74 [0]),
        .O(add_1_6_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1289" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [22]),
        .O(add_1_6_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1288" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [21]),
        .O(add_1_6_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1288" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [20]),
        .O(add_1_6_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1287" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [19]),
        .O(add_1_6_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1287" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_73 [18]),
        .O(add_1_6_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_7
       (.A({add_1_7_i_1__1_n_1,add_1_7_i_2__1_n_1,add_1_7_i_3__1_n_1,add_1_7_i_4__1_n_1,add_1_7_i_5__1_n_1,add_1_7_i_6__1_n_1,add_1_7_i_7__1_n_1,add_1_7_i_8__1_n_1,add_1_7_i_9__1_n_1,add_1_7_i_10__1_n_1,add_1_7_i_11__1_n_1,add_1_7_i_12__1_n_1,add_1_7_i_13__1_n_1,add_1_7_i_14__1_n_1,add_1_7_i_15__1_n_1,add_1_7_i_16__1_n_1,add_1_7_i_17__1_n_1,add_1_7_i_18__1_n_1,add_1_7_i_19__1_n_1,add_1_7_i_20__1_n_1,add_1_7_i_21__1_n_1,add_1_7_i_22__1_n_1,add_1_7_i_23__1_n_1,add_1_7_i_24__1_n_1,add_1_7_i_25__1_n_1,add_1_7_i_26__1_n_1,add_1_7_i_27__1_n_1}),
        .B({add_1_7_i_28__1_n_1,add_1_7_i_29__1_n_1,add_1_7_i_30__1_n_1,add_1_7_i_31__1_n_1,add_1_7_i_32__1_n_1,add_1_7_i_33__1_n_1,add_1_7_i_34__1_n_1,add_1_7_i_35__1_n_1,add_1_7_i_36__1_n_1,add_1_7_i_37__1_n_1,add_1_7_i_38__1_n_1,add_1_7_i_39__1_n_1,add_1_7_i_40__1_n_1,add_1_7_i_41__1_n_1,add_1_7_i_42__1_n_1,add_1_7_i_43__1_n_1,add_1_7_i_44__1_n_1,add_1_7_i_45__1_n_1,add_1_7_i_46__1_n_1,add_1_7_i_47__1_n_1,add_1_7_i_48__1_n_1,add_1_7_i_49__1_n_1,add_1_7_i_50__1_n_1,add_1_7_i_51__1_n_1,add_1_7_i_52__1_n_1,add_1_7_i_53__1_n_1,add_1_7_i_54__1_n_1}),
        .CLK(CLK),
        .S(\L1Sw[7]_84 ));
  (* SOFT_HLUTNM = "soft_lutpair1313" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [17]),
        .O(add_1_7_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1313" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [16]),
        .O(add_1_7_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [15]),
        .O(add_1_7_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [14]),
        .O(add_1_7_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [13]),
        .O(add_1_7_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [12]),
        .O(add_1_7_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [11]),
        .O(add_1_7_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [10]),
        .O(add_1_7_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [9]),
        .O(add_1_7_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [8]),
        .O(add_1_7_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1318" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [26]),
        .O(add_1_7_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [7]),
        .O(add_1_7_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [6]),
        .O(add_1_7_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1307" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [5]),
        .O(add_1_7_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1307" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [4]),
        .O(add_1_7_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1306" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [3]),
        .O(add_1_7_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1306" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [2]),
        .O(add_1_7_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1305" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [1]),
        .O(add_1_7_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1305" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [0]),
        .O(add_1_7_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1331" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [26]),
        .O(add_1_7_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1331" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [25]),
        .O(add_1_7_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1317" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [25]),
        .O(add_1_7_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1330" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [24]),
        .O(add_1_7_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1330" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [23]),
        .O(add_1_7_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1329" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [22]),
        .O(add_1_7_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1329" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [21]),
        .O(add_1_7_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1328" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [20]),
        .O(add_1_7_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1328" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [19]),
        .O(add_1_7_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1327" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [18]),
        .O(add_1_7_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1327" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [17]),
        .O(add_1_7_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1326" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [16]),
        .O(add_1_7_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1326" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [15]),
        .O(add_1_7_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1317" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [24]),
        .O(add_1_7_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1325" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [14]),
        .O(add_1_7_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1325" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [13]),
        .O(add_1_7_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1324" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [12]),
        .O(add_1_7_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1324" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [11]),
        .O(add_1_7_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1323" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [10]),
        .O(add_1_7_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1323" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [9]),
        .O(add_1_7_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1322" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [8]),
        .O(add_1_7_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1322" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [7]),
        .O(add_1_7_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1321" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [6]),
        .O(add_1_7_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1321" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [5]),
        .O(add_1_7_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1316" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [23]),
        .O(add_1_7_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1320" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [4]),
        .O(add_1_7_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1320" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [3]),
        .O(add_1_7_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1319" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [2]),
        .O(add_1_7_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1319" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [1]),
        .O(add_1_7_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1318" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_76 [0]),
        .O(add_1_7_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1316" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [22]),
        .O(add_1_7_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1315" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [21]),
        .O(add_1_7_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1315" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [20]),
        .O(add_1_7_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1314" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [19]),
        .O(add_1_7_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1314" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_75 [18]),
        .O(add_1_7_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_0
       (.A({add_2_0_i_1__1_n_1,add_2_0_i_2__1_n_1,add_2_0_i_3__1_n_1,add_2_0_i_4__1_n_1,add_2_0_i_5__1_n_1,add_2_0_i_6__1_n_1,add_2_0_i_7__1_n_1,add_2_0_i_8__1_n_1,add_2_0_i_9__1_n_1,add_2_0_i_10__1_n_1,add_2_0_i_11__1_n_1,add_2_0_i_12__1_n_1,add_2_0_i_13__1_n_1,add_2_0_i_14__1_n_1,add_2_0_i_15__1_n_1,add_2_0_i_16__1_n_1,add_2_0_i_17__1_n_1,add_2_0_i_18__1_n_1,add_2_0_i_19__1_n_1,add_2_0_i_20__1_n_1,add_2_0_i_21__1_n_1,add_2_0_i_22__1_n_1,add_2_0_i_23__1_n_1,add_2_0_i_24__1_n_1,add_2_0_i_25__1_n_1,add_2_0_i_26__1_n_1,add_2_0_i_27__1_n_1,add_2_0_i_28__1_n_1}),
        .B({add_2_0_i_29__1_n_1,add_2_0_i_30__1_n_1,add_2_0_i_31__1_n_1,add_2_0_i_32__1_n_1,add_2_0_i_33__1_n_1,add_2_0_i_34__1_n_1,add_2_0_i_35__1_n_1,add_2_0_i_36__1_n_1,add_2_0_i_37__1_n_1,add_2_0_i_38__1_n_1,add_2_0_i_39__1_n_1,add_2_0_i_40__1_n_1,add_2_0_i_41__1_n_1,add_2_0_i_42__1_n_1,add_2_0_i_43__1_n_1,add_2_0_i_44__1_n_1,add_2_0_i_45__1_n_1,add_2_0_i_46__1_n_1,add_2_0_i_47__1_n_1,add_2_0_i_48__1_n_1,add_2_0_i_49__1_n_1,add_2_0_i_50__1_n_1,add_2_0_i_51__1_n_1,add_2_0_i_52__1_n_1,add_2_0_i_53__1_n_1,add_2_0_i_54__1_n_1,add_2_0_i_55__1_n_1,add_2_0_i_56__1_n_1}),
        .CLK(CLK),
        .S(\L2Sw[0]_85 ));
  (* SOFT_HLUTNM = "soft_lutpair1013" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [18]),
        .O(add_2_0_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1012" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [17]),
        .O(add_2_0_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1012" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [16]),
        .O(add_2_0_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1011" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [15]),
        .O(add_2_0_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1011" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [14]),
        .O(add_2_0_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1010" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [13]),
        .O(add_2_0_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1010" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [12]),
        .O(add_2_0_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1009" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [11]),
        .O(add_2_0_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1009" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [10]),
        .O(add_2_0_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1008" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [9]),
        .O(add_2_0_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1017" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [27]),
        .O(add_2_0_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1008" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [8]),
        .O(add_2_0_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1007" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [7]),
        .O(add_2_0_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1007" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [6]),
        .O(add_2_0_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1006" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [5]),
        .O(add_2_0_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1006" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [4]),
        .O(add_2_0_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1005" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [3]),
        .O(add_2_0_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1005" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [2]),
        .O(add_2_0_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1004" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [1]),
        .O(add_2_0_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1004" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [0]),
        .O(add_2_0_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1031" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [27]),
        .O(add_2_0_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1017" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [26]),
        .O(add_2_0_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1031" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [26]),
        .O(add_2_0_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1030" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [25]),
        .O(add_2_0_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1030" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [24]),
        .O(add_2_0_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1029" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [23]),
        .O(add_2_0_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1029" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [22]),
        .O(add_2_0_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1028" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [21]),
        .O(add_2_0_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1028" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [20]),
        .O(add_2_0_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1027" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [19]),
        .O(add_2_0_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1027" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [18]),
        .O(add_2_0_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1026" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [17]),
        .O(add_2_0_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1016" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [25]),
        .O(add_2_0_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1026" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [16]),
        .O(add_2_0_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1025" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [15]),
        .O(add_2_0_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1025" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [14]),
        .O(add_2_0_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1024" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [13]),
        .O(add_2_0_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1024" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [12]),
        .O(add_2_0_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1023" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [11]),
        .O(add_2_0_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1023" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [10]),
        .O(add_2_0_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1022" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [9]),
        .O(add_2_0_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1022" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [8]),
        .O(add_2_0_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1021" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [7]),
        .O(add_2_0_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1016" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [24]),
        .O(add_2_0_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1021" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [6]),
        .O(add_2_0_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1020" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [5]),
        .O(add_2_0_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1020" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [4]),
        .O(add_2_0_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1019" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [3]),
        .O(add_2_0_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1019" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [2]),
        .O(add_2_0_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1018" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [1]),
        .O(add_2_0_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1018" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_78 [0]),
        .O(add_2_0_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1015" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [23]),
        .O(add_2_0_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1015" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [22]),
        .O(add_2_0_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1014" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [21]),
        .O(add_2_0_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1014" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [20]),
        .O(add_2_0_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1013" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_77 [19]),
        .O(add_2_0_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_1
       (.A({add_2_1_i_1__1_n_1,add_2_1_i_2__1_n_1,add_2_1_i_3__1_n_1,add_2_1_i_4__1_n_1,add_2_1_i_5__1_n_1,add_2_1_i_6__1_n_1,add_2_1_i_7__1_n_1,add_2_1_i_8__1_n_1,add_2_1_i_9__1_n_1,add_2_1_i_10__1_n_1,add_2_1_i_11__1_n_1,add_2_1_i_12__1_n_1,add_2_1_i_13__1_n_1,add_2_1_i_14__1_n_1,add_2_1_i_15__1_n_1,add_2_1_i_16__1_n_1,add_2_1_i_17__1_n_1,add_2_1_i_18__1_n_1,add_2_1_i_19__1_n_1,add_2_1_i_20__1_n_1,add_2_1_i_21__1_n_1,add_2_1_i_22__1_n_1,add_2_1_i_23__1_n_1,add_2_1_i_24__1_n_1,add_2_1_i_25__1_n_1,add_2_1_i_26__1_n_1,add_2_1_i_27__1_n_1,add_2_1_i_28__1_n_1}),
        .B({add_2_1_i_29__1_n_1,add_2_1_i_30__1_n_1,add_2_1_i_31__1_n_1,add_2_1_i_32__1_n_1,add_2_1_i_33__1_n_1,add_2_1_i_34__1_n_1,add_2_1_i_35__1_n_1,add_2_1_i_36__1_n_1,add_2_1_i_37__1_n_1,add_2_1_i_38__1_n_1,add_2_1_i_39__1_n_1,add_2_1_i_40__1_n_1,add_2_1_i_41__1_n_1,add_2_1_i_42__1_n_1,add_2_1_i_43__1_n_1,add_2_1_i_44__1_n_1,add_2_1_i_45__1_n_1,add_2_1_i_46__1_n_1,add_2_1_i_47__1_n_1,add_2_1_i_48__1_n_1,add_2_1_i_49__1_n_1,add_2_1_i_50__1_n_1,add_2_1_i_51__1_n_1,add_2_1_i_52__1_n_1,add_2_1_i_53__1_n_1,add_2_1_i_54__1_n_1,add_2_1_i_55__1_n_1,add_2_1_i_56__1_n_1}),
        .CLK(CLK),
        .S(\L2Sw[1]_86 ));
  (* SOFT_HLUTNM = "soft_lutpair1041" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [18]),
        .O(add_2_1_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1040" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [17]),
        .O(add_2_1_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1040" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [16]),
        .O(add_2_1_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1039" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [15]),
        .O(add_2_1_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1039" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [14]),
        .O(add_2_1_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1038" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [13]),
        .O(add_2_1_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1038" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [12]),
        .O(add_2_1_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1037" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [11]),
        .O(add_2_1_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1037" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [10]),
        .O(add_2_1_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1036" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [9]),
        .O(add_2_1_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1045" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [27]),
        .O(add_2_1_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1036" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [8]),
        .O(add_2_1_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1035" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [7]),
        .O(add_2_1_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1035" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [6]),
        .O(add_2_1_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1034" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [5]),
        .O(add_2_1_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1034" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [4]),
        .O(add_2_1_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1033" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [3]),
        .O(add_2_1_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1033" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [2]),
        .O(add_2_1_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1032" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [1]),
        .O(add_2_1_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1032" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [0]),
        .O(add_2_1_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1059" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [27]),
        .O(add_2_1_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1045" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [26]),
        .O(add_2_1_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1059" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [26]),
        .O(add_2_1_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1058" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [25]),
        .O(add_2_1_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1058" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [24]),
        .O(add_2_1_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1057" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [23]),
        .O(add_2_1_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1057" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [22]),
        .O(add_2_1_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1056" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [21]),
        .O(add_2_1_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1056" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [20]),
        .O(add_2_1_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1055" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [19]),
        .O(add_2_1_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1055" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [18]),
        .O(add_2_1_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1054" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [17]),
        .O(add_2_1_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1044" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [25]),
        .O(add_2_1_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1054" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [16]),
        .O(add_2_1_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1053" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [15]),
        .O(add_2_1_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1053" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [14]),
        .O(add_2_1_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1052" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [13]),
        .O(add_2_1_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1052" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [12]),
        .O(add_2_1_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1051" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [11]),
        .O(add_2_1_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1051" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [10]),
        .O(add_2_1_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1050" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [9]),
        .O(add_2_1_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1050" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [8]),
        .O(add_2_1_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1049" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [7]),
        .O(add_2_1_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1044" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [24]),
        .O(add_2_1_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1049" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [6]),
        .O(add_2_1_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1048" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [5]),
        .O(add_2_1_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1048" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [4]),
        .O(add_2_1_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1047" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [3]),
        .O(add_2_1_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1047" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [2]),
        .O(add_2_1_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1046" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [1]),
        .O(add_2_1_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1046" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_80 [0]),
        .O(add_2_1_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1043" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [23]),
        .O(add_2_1_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1043" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [22]),
        .O(add_2_1_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1042" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [21]),
        .O(add_2_1_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1042" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [20]),
        .O(add_2_1_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1041" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_79 [19]),
        .O(add_2_1_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_2
       (.A({add_2_2_i_1__1_n_1,add_2_2_i_2__1_n_1,add_2_2_i_3__1_n_1,add_2_2_i_4__1_n_1,add_2_2_i_5__1_n_1,add_2_2_i_6__1_n_1,add_2_2_i_7__1_n_1,add_2_2_i_8__1_n_1,add_2_2_i_9__1_n_1,add_2_2_i_10__1_n_1,add_2_2_i_11__1_n_1,add_2_2_i_12__1_n_1,add_2_2_i_13__1_n_1,add_2_2_i_14__1_n_1,add_2_2_i_15__1_n_1,add_2_2_i_16__1_n_1,add_2_2_i_17__1_n_1,add_2_2_i_18__1_n_1,add_2_2_i_19__1_n_1,add_2_2_i_20__1_n_1,add_2_2_i_21__1_n_1,add_2_2_i_22__1_n_1,add_2_2_i_23__1_n_1,add_2_2_i_24__1_n_1,add_2_2_i_25__1_n_1,add_2_2_i_26__1_n_1,add_2_2_i_27__1_n_1,add_2_2_i_28__1_n_1}),
        .B({add_2_2_i_29__1_n_1,add_2_2_i_30__1_n_1,add_2_2_i_31__1_n_1,add_2_2_i_32__1_n_1,add_2_2_i_33__1_n_1,add_2_2_i_34__1_n_1,add_2_2_i_35__1_n_1,add_2_2_i_36__1_n_1,add_2_2_i_37__1_n_1,add_2_2_i_38__1_n_1,add_2_2_i_39__1_n_1,add_2_2_i_40__1_n_1,add_2_2_i_41__1_n_1,add_2_2_i_42__1_n_1,add_2_2_i_43__1_n_1,add_2_2_i_44__1_n_1,add_2_2_i_45__1_n_1,add_2_2_i_46__1_n_1,add_2_2_i_47__1_n_1,add_2_2_i_48__1_n_1,add_2_2_i_49__1_n_1,add_2_2_i_50__1_n_1,add_2_2_i_51__1_n_1,add_2_2_i_52__1_n_1,add_2_2_i_53__1_n_1,add_2_2_i_54__1_n_1,add_2_2_i_55__1_n_1,add_2_2_i_56__1_n_1}),
        .CLK(CLK),
        .S(\L2Sw[2]_87 ));
  (* SOFT_HLUTNM = "soft_lutpair1069" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [18]),
        .O(add_2_2_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1068" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [17]),
        .O(add_2_2_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1068" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [16]),
        .O(add_2_2_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1067" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [15]),
        .O(add_2_2_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1067" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [14]),
        .O(add_2_2_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1066" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [13]),
        .O(add_2_2_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1066" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [12]),
        .O(add_2_2_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1065" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [11]),
        .O(add_2_2_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1065" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [10]),
        .O(add_2_2_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1064" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [9]),
        .O(add_2_2_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1073" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [27]),
        .O(add_2_2_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1064" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [8]),
        .O(add_2_2_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1063" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [7]),
        .O(add_2_2_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1063" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [6]),
        .O(add_2_2_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1062" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [5]),
        .O(add_2_2_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1062" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [4]),
        .O(add_2_2_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1061" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [3]),
        .O(add_2_2_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1061" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [2]),
        .O(add_2_2_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1060" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [1]),
        .O(add_2_2_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1060" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [0]),
        .O(add_2_2_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1087" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [27]),
        .O(add_2_2_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1073" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [26]),
        .O(add_2_2_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1087" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [26]),
        .O(add_2_2_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1086" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [25]),
        .O(add_2_2_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1086" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [24]),
        .O(add_2_2_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1085" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [23]),
        .O(add_2_2_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1085" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [22]),
        .O(add_2_2_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1084" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [21]),
        .O(add_2_2_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1084" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [20]),
        .O(add_2_2_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1083" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [19]),
        .O(add_2_2_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1083" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [18]),
        .O(add_2_2_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1082" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [17]),
        .O(add_2_2_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1072" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [25]),
        .O(add_2_2_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1082" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [16]),
        .O(add_2_2_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1081" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [15]),
        .O(add_2_2_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1081" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [14]),
        .O(add_2_2_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1080" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [13]),
        .O(add_2_2_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1080" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [12]),
        .O(add_2_2_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1079" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [11]),
        .O(add_2_2_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1079" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [10]),
        .O(add_2_2_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1078" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [9]),
        .O(add_2_2_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1078" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [8]),
        .O(add_2_2_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1077" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [7]),
        .O(add_2_2_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1072" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [24]),
        .O(add_2_2_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1077" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [6]),
        .O(add_2_2_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1076" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [5]),
        .O(add_2_2_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1076" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [4]),
        .O(add_2_2_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1075" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [3]),
        .O(add_2_2_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1075" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [2]),
        .O(add_2_2_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1074" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [1]),
        .O(add_2_2_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1074" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_82 [0]),
        .O(add_2_2_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1071" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [23]),
        .O(add_2_2_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1071" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [22]),
        .O(add_2_2_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1070" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [21]),
        .O(add_2_2_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1070" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [20]),
        .O(add_2_2_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1069" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_81 [19]),
        .O(add_2_2_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_3
       (.A({add_2_3_i_1__1_n_1,add_2_3_i_2__1_n_1,add_2_3_i_3__1_n_1,add_2_3_i_4__1_n_1,add_2_3_i_5__1_n_1,add_2_3_i_6__1_n_1,add_2_3_i_7__1_n_1,add_2_3_i_8__1_n_1,add_2_3_i_9__1_n_1,add_2_3_i_10__1_n_1,add_2_3_i_11__1_n_1,add_2_3_i_12__1_n_1,add_2_3_i_13__1_n_1,add_2_3_i_14__1_n_1,add_2_3_i_15__1_n_1,add_2_3_i_16__1_n_1,add_2_3_i_17__1_n_1,add_2_3_i_18__1_n_1,add_2_3_i_19__1_n_1,add_2_3_i_20__1_n_1,add_2_3_i_21__1_n_1,add_2_3_i_22__1_n_1,add_2_3_i_23__1_n_1,add_2_3_i_24__1_n_1,add_2_3_i_25__1_n_1,add_2_3_i_26__1_n_1,add_2_3_i_27__1_n_1,add_2_3_i_28__1_n_1}),
        .B({add_2_3_i_29__1_n_1,add_2_3_i_30__1_n_1,add_2_3_i_31__1_n_1,add_2_3_i_32__1_n_1,add_2_3_i_33__1_n_1,add_2_3_i_34__1_n_1,add_2_3_i_35__1_n_1,add_2_3_i_36__1_n_1,add_2_3_i_37__1_n_1,add_2_3_i_38__1_n_1,add_2_3_i_39__1_n_1,add_2_3_i_40__1_n_1,add_2_3_i_41__1_n_1,add_2_3_i_42__1_n_1,add_2_3_i_43__1_n_1,add_2_3_i_44__1_n_1,add_2_3_i_45__1_n_1,add_2_3_i_46__1_n_1,add_2_3_i_47__1_n_1,add_2_3_i_48__1_n_1,add_2_3_i_49__1_n_1,add_2_3_i_50__1_n_1,add_2_3_i_51__1_n_1,add_2_3_i_52__1_n_1,add_2_3_i_53__1_n_1,add_2_3_i_54__1_n_1,add_2_3_i_55__1_n_1,add_2_3_i_56__1_n_1}),
        .CLK(CLK),
        .S(\L2Sw[3]_88 ));
  (* SOFT_HLUTNM = "soft_lutpair1097" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [18]),
        .O(add_2_3_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1096" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [17]),
        .O(add_2_3_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1096" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [16]),
        .O(add_2_3_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1095" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [15]),
        .O(add_2_3_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1095" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [14]),
        .O(add_2_3_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1094" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [13]),
        .O(add_2_3_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1094" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [12]),
        .O(add_2_3_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1093" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [11]),
        .O(add_2_3_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1093" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [10]),
        .O(add_2_3_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1092" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [9]),
        .O(add_2_3_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [27]),
        .O(add_2_3_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1092" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [8]),
        .O(add_2_3_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1091" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [7]),
        .O(add_2_3_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1091" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [6]),
        .O(add_2_3_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1090" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [5]),
        .O(add_2_3_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1090" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [4]),
        .O(add_2_3_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1089" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [3]),
        .O(add_2_3_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1089" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [2]),
        .O(add_2_3_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1088" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [1]),
        .O(add_2_3_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1088" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [0]),
        .O(add_2_3_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [27]),
        .O(add_2_3_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [26]),
        .O(add_2_3_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [26]),
        .O(add_2_3_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [25]),
        .O(add_2_3_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [24]),
        .O(add_2_3_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [23]),
        .O(add_2_3_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [22]),
        .O(add_2_3_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [21]),
        .O(add_2_3_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [20]),
        .O(add_2_3_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [19]),
        .O(add_2_3_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [18]),
        .O(add_2_3_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [17]),
        .O(add_2_3_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [25]),
        .O(add_2_3_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [16]),
        .O(add_2_3_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [15]),
        .O(add_2_3_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [14]),
        .O(add_2_3_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [13]),
        .O(add_2_3_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [12]),
        .O(add_2_3_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [11]),
        .O(add_2_3_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [10]),
        .O(add_2_3_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [9]),
        .O(add_2_3_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [8]),
        .O(add_2_3_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [7]),
        .O(add_2_3_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [24]),
        .O(add_2_3_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [6]),
        .O(add_2_3_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [5]),
        .O(add_2_3_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [4]),
        .O(add_2_3_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [3]),
        .O(add_2_3_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [2]),
        .O(add_2_3_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [1]),
        .O(add_2_3_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_84 [0]),
        .O(add_2_3_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1099" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [23]),
        .O(add_2_3_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1099" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [22]),
        .O(add_2_3_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1098" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [21]),
        .O(add_2_3_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1098" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [20]),
        .O(add_2_3_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1097" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_83 [19]),
        .O(add_2_3_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_29/add_29.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_29 add_3_0
       (.A({add_3_0_i_1__1_n_1,add_3_0_i_2__1_n_1,add_3_0_i_3__1_n_1,add_3_0_i_4__1_n_1,add_3_0_i_5__1_n_1,add_3_0_i_6__1_n_1,add_3_0_i_7__1_n_1,add_3_0_i_8__1_n_1,add_3_0_i_9__1_n_1,add_3_0_i_10__1_n_1,add_3_0_i_11__1_n_1,add_3_0_i_12__1_n_1,add_3_0_i_13__1_n_1,add_3_0_i_14__1_n_1,add_3_0_i_15__1_n_1,add_3_0_i_16__1_n_1,add_3_0_i_17__1_n_1,add_3_0_i_18__1_n_1,add_3_0_i_19__1_n_1,add_3_0_i_20__1_n_1,add_3_0_i_21__1_n_1,add_3_0_i_22__1_n_1,add_3_0_i_23__1_n_1,add_3_0_i_24__1_n_1,add_3_0_i_25__1_n_1,add_3_0_i_26__1_n_1,add_3_0_i_27__1_n_1,add_3_0_i_28__1_n_1,add_3_0_i_29__1_n_1}),
        .B({add_3_0_i_30__1_n_1,add_3_0_i_31__1_n_1,add_3_0_i_32__1_n_1,add_3_0_i_33__1_n_1,add_3_0_i_34__1_n_1,add_3_0_i_35__1_n_1,add_3_0_i_36__1_n_1,add_3_0_i_37__1_n_1,add_3_0_i_38__1_n_1,add_3_0_i_39__1_n_1,add_3_0_i_40__1_n_1,add_3_0_i_41__1_n_1,add_3_0_i_42__1_n_1,add_3_0_i_43__1_n_1,add_3_0_i_44__1_n_1,add_3_0_i_45__1_n_1,add_3_0_i_46__1_n_1,add_3_0_i_47__1_n_1,add_3_0_i_48__1_n_1,add_3_0_i_49__1_n_1,add_3_0_i_50__1_n_1,add_3_0_i_51__1_n_1,add_3_0_i_52__1_n_1,add_3_0_i_53__1_n_1,add_3_0_i_54__1_n_1,add_3_0_i_55__1_n_1,add_3_0_i_56__1_n_1,add_3_0_i_57__1_n_1,add_3_0_i_58__1_n_1}),
        .CLK(CLK),
        .S(\L3Sw[0]_89 ));
  (* SOFT_HLUTNM = "soft_lutpair955" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [19]),
        .O(add_3_0_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair955" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [18]),
        .O(add_3_0_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair954" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [17]),
        .O(add_3_0_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair954" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [16]),
        .O(add_3_0_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair953" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [15]),
        .O(add_3_0_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair953" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [14]),
        .O(add_3_0_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair952" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [13]),
        .O(add_3_0_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair952" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [12]),
        .O(add_3_0_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair951" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [11]),
        .O(add_3_0_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair951" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [10]),
        .O(add_3_0_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair960" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [28]),
        .O(add_3_0_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair950" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [9]),
        .O(add_3_0_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair950" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [8]),
        .O(add_3_0_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair949" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [7]),
        .O(add_3_0_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair949" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [6]),
        .O(add_3_0_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair948" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [5]),
        .O(add_3_0_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair948" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [4]),
        .O(add_3_0_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair947" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [3]),
        .O(add_3_0_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair947" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [2]),
        .O(add_3_0_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair946" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [1]),
        .O(add_3_0_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair946" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [0]),
        .O(add_3_0_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair959" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [27]),
        .O(add_3_0_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair974" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [28]),
        .O(add_3_0_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair974" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [27]),
        .O(add_3_0_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair973" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [26]),
        .O(add_3_0_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair973" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [25]),
        .O(add_3_0_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair972" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [24]),
        .O(add_3_0_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair972" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [23]),
        .O(add_3_0_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair971" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [22]),
        .O(add_3_0_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair971" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [21]),
        .O(add_3_0_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair970" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [20]),
        .O(add_3_0_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair970" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [19]),
        .O(add_3_0_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair959" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [26]),
        .O(add_3_0_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair969" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [18]),
        .O(add_3_0_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair969" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [17]),
        .O(add_3_0_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair968" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [16]),
        .O(add_3_0_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair968" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [15]),
        .O(add_3_0_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair967" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [14]),
        .O(add_3_0_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair967" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [13]),
        .O(add_3_0_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair966" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [12]),
        .O(add_3_0_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair966" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [11]),
        .O(add_3_0_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair965" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [10]),
        .O(add_3_0_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair965" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [9]),
        .O(add_3_0_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair958" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [25]),
        .O(add_3_0_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair964" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [8]),
        .O(add_3_0_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair964" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [7]),
        .O(add_3_0_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair963" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [6]),
        .O(add_3_0_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair963" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [5]),
        .O(add_3_0_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair962" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [4]),
        .O(add_3_0_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair962" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [3]),
        .O(add_3_0_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair961" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [2]),
        .O(add_3_0_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair961" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_57__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [1]),
        .O(add_3_0_i_57__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair960" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_58__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_86 [0]),
        .O(add_3_0_i_58__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair958" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [24]),
        .O(add_3_0_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair957" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [23]),
        .O(add_3_0_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair957" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [22]),
        .O(add_3_0_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair956" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [21]),
        .O(add_3_0_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair956" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_85 [20]),
        .O(add_3_0_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_29/add_29.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_29 add_3_1
       (.A({add_3_1_i_1__1_n_1,add_3_1_i_2__1_n_1,add_3_1_i_3__1_n_1,add_3_1_i_4__1_n_1,add_3_1_i_5__1_n_1,add_3_1_i_6__1_n_1,add_3_1_i_7__1_n_1,add_3_1_i_8__1_n_1,add_3_1_i_9__1_n_1,add_3_1_i_10__1_n_1,add_3_1_i_11__1_n_1,add_3_1_i_12__1_n_1,add_3_1_i_13__1_n_1,add_3_1_i_14__1_n_1,add_3_1_i_15__1_n_1,add_3_1_i_16__1_n_1,add_3_1_i_17__1_n_1,add_3_1_i_18__1_n_1,add_3_1_i_19__1_n_1,add_3_1_i_20__1_n_1,add_3_1_i_21__1_n_1,add_3_1_i_22__1_n_1,add_3_1_i_23__1_n_1,add_3_1_i_24__1_n_1,add_3_1_i_25__1_n_1,add_3_1_i_26__1_n_1,add_3_1_i_27__1_n_1,add_3_1_i_28__1_n_1,add_3_1_i_29__1_n_1}),
        .B({add_3_1_i_30__1_n_1,add_3_1_i_31__1_n_1,add_3_1_i_32__1_n_1,add_3_1_i_33__1_n_1,add_3_1_i_34__1_n_1,add_3_1_i_35__1_n_1,add_3_1_i_36__1_n_1,add_3_1_i_37__1_n_1,add_3_1_i_38__1_n_1,add_3_1_i_39__1_n_1,add_3_1_i_40__1_n_1,add_3_1_i_41__1_n_1,add_3_1_i_42__1_n_1,add_3_1_i_43__1_n_1,add_3_1_i_44__1_n_1,add_3_1_i_45__1_n_1,add_3_1_i_46__1_n_1,add_3_1_i_47__1_n_1,add_3_1_i_48__1_n_1,add_3_1_i_49__1_n_1,add_3_1_i_50__1_n_1,add_3_1_i_51__1_n_1,add_3_1_i_52__1_n_1,add_3_1_i_53__1_n_1,add_3_1_i_54__1_n_1,add_3_1_i_55__1_n_1,add_3_1_i_56__1_n_1,add_3_1_i_57__1_n_1,add_3_1_i_58__1_n_1}),
        .CLK(CLK),
        .S(\L3Sw[1]_90 ));
  (* SOFT_HLUTNM = "soft_lutpair984" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [19]),
        .O(add_3_1_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair984" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [18]),
        .O(add_3_1_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair983" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [17]),
        .O(add_3_1_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair983" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [16]),
        .O(add_3_1_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair982" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [15]),
        .O(add_3_1_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair982" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [14]),
        .O(add_3_1_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair981" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [13]),
        .O(add_3_1_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair981" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [12]),
        .O(add_3_1_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair980" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [11]),
        .O(add_3_1_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair980" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [10]),
        .O(add_3_1_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair989" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [28]),
        .O(add_3_1_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair979" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [9]),
        .O(add_3_1_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair979" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [8]),
        .O(add_3_1_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair978" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [7]),
        .O(add_3_1_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair978" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [6]),
        .O(add_3_1_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair977" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [5]),
        .O(add_3_1_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair977" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [4]),
        .O(add_3_1_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair976" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [3]),
        .O(add_3_1_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair976" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [2]),
        .O(add_3_1_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair975" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [1]),
        .O(add_3_1_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair975" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [0]),
        .O(add_3_1_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair988" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [27]),
        .O(add_3_1_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1003" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [28]),
        .O(add_3_1_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1003" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [27]),
        .O(add_3_1_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1002" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [26]),
        .O(add_3_1_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1002" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [25]),
        .O(add_3_1_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1001" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [24]),
        .O(add_3_1_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1001" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [23]),
        .O(add_3_1_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1000" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [22]),
        .O(add_3_1_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1000" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [21]),
        .O(add_3_1_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair999" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [20]),
        .O(add_3_1_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair999" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [19]),
        .O(add_3_1_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair988" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [26]),
        .O(add_3_1_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair998" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [18]),
        .O(add_3_1_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair998" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [17]),
        .O(add_3_1_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair997" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [16]),
        .O(add_3_1_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair997" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [15]),
        .O(add_3_1_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair996" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [14]),
        .O(add_3_1_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair996" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [13]),
        .O(add_3_1_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair995" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [12]),
        .O(add_3_1_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair995" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [11]),
        .O(add_3_1_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair994" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [10]),
        .O(add_3_1_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair994" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [9]),
        .O(add_3_1_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair987" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [25]),
        .O(add_3_1_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair993" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [8]),
        .O(add_3_1_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair993" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [7]),
        .O(add_3_1_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair992" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [6]),
        .O(add_3_1_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair992" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [5]),
        .O(add_3_1_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair991" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [4]),
        .O(add_3_1_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair991" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [3]),
        .O(add_3_1_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair990" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [2]),
        .O(add_3_1_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair990" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_57__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [1]),
        .O(add_3_1_i_57__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair989" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_58__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_88 [0]),
        .O(add_3_1_i_58__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair987" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [24]),
        .O(add_3_1_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair986" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [23]),
        .O(add_3_1_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair986" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [22]),
        .O(add_3_1_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair985" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [21]),
        .O(add_3_1_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair985" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_87 [20]),
        .O(add_3_1_i_9__1_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_30/add_30.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_30 add_4
       (.A({add_4_i_1__1_n_1,add_4_i_2__1_n_1,add_4_i_3__1_n_1,add_4_i_4__1_n_1,add_4_i_5__1_n_1,add_4_i_6__1_n_1,add_4_i_7__1_n_1,add_4_i_8__1_n_1,add_4_i_9__1_n_1,add_4_i_10__1_n_1,add_4_i_11__1_n_1,add_4_i_12__1_n_1,add_4_i_13__1_n_1,add_4_i_14__1_n_1,add_4_i_15__1_n_1,add_4_i_16__1_n_1,add_4_i_17__1_n_1,add_4_i_18__1_n_1,add_4_i_19__1_n_1,add_4_i_20__1_n_1,add_4_i_21__1_n_1,add_4_i_22__1_n_1,add_4_i_23__1_n_1,add_4_i_24__1_n_1,add_4_i_25__1_n_1,add_4_i_26__1_n_1,add_4_i_27__1_n_1,add_4_i_28__1_n_1,add_4_i_29__1_n_1,add_4_i_30__1_n_1}),
        .B({add_4_i_31__1_n_1,add_4_i_32__1_n_1,add_4_i_33__1_n_1,add_4_i_34__1_n_1,add_4_i_35__1_n_1,add_4_i_36__1_n_1,add_4_i_37__1_n_1,add_4_i_38__1_n_1,add_4_i_39__1_n_1,add_4_i_40__1_n_1,add_4_i_41__1_n_1,add_4_i_42__1_n_1,add_4_i_43__1_n_1,add_4_i_44__1_n_1,add_4_i_45__1_n_1,add_4_i_46__1_n_1,add_4_i_47__1_n_1,add_4_i_48__1_n_1,add_4_i_49__1_n_1,add_4_i_50__1_n_1,add_4_i_51__1_n_1,add_4_i_52__1_n_1,add_4_i_53__1_n_1,add_4_i_54__1_n_1,add_4_i_55__1_n_1,add_4_i_56__1_n_1,add_4_i_57__1_n_1,add_4_i_58__1_n_1,add_4_i_59__1_n_1,add_4_i_60__1_n_1}),
        .CLK(CLK),
        .S(dst_data_30w));
  (* SOFT_HLUTNM = "soft_lutpair926" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_10__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [20]),
        .O(add_4_i_10__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair925" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_11__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [19]),
        .O(add_4_i_11__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair925" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_12__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [18]),
        .O(add_4_i_12__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair924" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_13__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [17]),
        .O(add_4_i_13__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair924" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_14__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [16]),
        .O(add_4_i_14__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair923" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_15__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [15]),
        .O(add_4_i_15__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair923" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_16__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [14]),
        .O(add_4_i_16__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair922" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_17__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [13]),
        .O(add_4_i_17__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair922" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_18__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [12]),
        .O(add_4_i_18__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair921" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_19__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [11]),
        .O(add_4_i_19__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair930" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_1__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [29]),
        .O(add_4_i_1__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair921" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_20__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [10]),
        .O(add_4_i_20__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair920" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_21__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [9]),
        .O(add_4_i_21__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair920" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_22__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [8]),
        .O(add_4_i_22__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair919" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_23__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [7]),
        .O(add_4_i_23__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair919" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_24__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [6]),
        .O(add_4_i_24__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair918" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_25__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [5]),
        .O(add_4_i_25__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair918" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_26__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [4]),
        .O(add_4_i_26__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair917" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_27__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [3]),
        .O(add_4_i_27__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair916" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_28__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [2]),
        .O(add_4_i_28__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair917" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_29__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [1]),
        .O(add_4_i_29__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair930" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_2__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [28]),
        .O(add_4_i_2__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair916" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_30__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [0]),
        .O(add_4_i_30__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair945" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_31__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [29]),
        .O(add_4_i_31__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair945" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_32__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [28]),
        .O(add_4_i_32__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair944" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_33__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [27]),
        .O(add_4_i_33__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair944" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_34__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [26]),
        .O(add_4_i_34__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair943" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_35__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [25]),
        .O(add_4_i_35__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair943" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_36__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [24]),
        .O(add_4_i_36__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair942" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_37__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [23]),
        .O(add_4_i_37__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair942" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_38__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [22]),
        .O(add_4_i_38__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair941" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_39__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [21]),
        .O(add_4_i_39__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair929" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_3__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [27]),
        .O(add_4_i_3__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair941" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_40__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [20]),
        .O(add_4_i_40__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair940" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_41__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [19]),
        .O(add_4_i_41__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair940" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_42__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [18]),
        .O(add_4_i_42__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair939" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_43__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [17]),
        .O(add_4_i_43__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair939" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_44__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [16]),
        .O(add_4_i_44__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair938" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_45__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [15]),
        .O(add_4_i_45__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair938" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_46__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [14]),
        .O(add_4_i_46__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair937" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_47__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [13]),
        .O(add_4_i_47__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair937" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_48__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [12]),
        .O(add_4_i_48__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair936" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_49__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [11]),
        .O(add_4_i_49__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair929" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_4__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [26]),
        .O(add_4_i_4__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair936" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_50__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [10]),
        .O(add_4_i_50__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair935" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_51__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [9]),
        .O(add_4_i_51__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair935" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_52__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [8]),
        .O(add_4_i_52__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair934" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_53__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [7]),
        .O(add_4_i_53__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair934" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_54__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [6]),
        .O(add_4_i_54__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair933" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_55__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [5]),
        .O(add_4_i_55__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair933" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_56__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [4]),
        .O(add_4_i_56__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair932" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_57__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [3]),
        .O(add_4_i_57__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair932" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_58__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [2]),
        .O(add_4_i_58__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair931" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_59__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [1]),
        .O(add_4_i_59__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair928" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_5__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [25]),
        .O(add_4_i_5__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair931" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_60__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_90 [0]),
        .O(add_4_i_60__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair928" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_6__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [24]),
        .O(add_4_i_6__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair927" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_7__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [23]),
        .O(add_4_i_7__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair927" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_8__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [22]),
        .O(add_4_i_8__1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair926" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_9__1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_89 [21]),
        .O(add_4_i_9__1_n_1));
  LUT3 #(
    .INIT(8'hD7)) 
    \ch0_win_data_reg[127]_i_1 
       (.I0(rst_n_i_IBUF),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(ch2_win_data__0));
  (* SOFT_HLUTNM = "soft_lutpair906" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_1
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[25]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[7]));
  CARRY4 line0_i_103
       (.CI(1'b0),
        .CO({line0_i_103_n_1,line0_i_103_n_2,line0_i_103_n_3,line0_i_103_n_4}),
        .CYINIT(1'b1),
        .DI({line0_i_157_n_1,line0_i_158_n_1,line0_i_159_n_1,line0_i_160_n_1}),
        .O(NLW_line0_i_103_O_UNCONNECTED[3:0]),
        .S({line0_i_161_n_1,line0_i_162_n_1,line0_i_163_n_1,line0_i_164_n_1}));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_104
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_104_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_105
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_105_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_106
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_106_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_107
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_107_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_108
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_108_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_109
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_109_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_110
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_110_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_111
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_111_n_1));
  CARRY4 line0_i_112
       (.CI(1'b0),
        .CO({line0_i_112_n_1,line0_i_112_n_2,line0_i_112_n_3,line0_i_112_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_165_n_1,line0_i_166_n_1,line0_i_167_n_1,line0_i_168_n_1}),
        .O(NLW_line0_i_112_O_UNCONNECTED[3:0]),
        .S({line0_i_169_n_1,line0_i_170_n_1,line0_i_171_n_1,line0_i_172_n_1}));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_113
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_113_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_114
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_114_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_115
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_115_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_116
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_116_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_117
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_117_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_118
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_118_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_119
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_119_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_120
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_120_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_157
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_157_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_158
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_158_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_159
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_159_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_160
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_160_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_161
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_161_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_162
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_162_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_163
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_163_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_164
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_164_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_165
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_165_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_166
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_166_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_167
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_167_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_168
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_168_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_169
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_169_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_170
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_170_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_171
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_171_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_172
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_172_n_1));
  (* SOFT_HLUTNM = "soft_lutpair907" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_2
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[24]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[6]));
  CARRY4 line0_i_27
       (.CI(line0_i_34_n_1),
        .CO({NLW_line0_i_27_CO_UNCONNECTED[3],out_data2,line0_i_27_n_3,line0_i_27_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,line0_i_35_n_1,line0_i_36_n_1,1'b0}),
        .O(NLW_line0_i_27_O_UNCONNECTED[3:0]),
        .S({1'b0,line0_i_37_n_1,line0_i_38_n_1,line0_i_39_n_1}));
  CARRY4 line0_i_28
       (.CI(line0_i_40_n_1),
        .CO({NLW_line0_i_28_CO_UNCONNECTED[3],out_data1,line0_i_28_n_3,line0_i_28_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,dst_data_30,1'b0,1'b0}),
        .O(NLW_line0_i_28_O_UNCONNECTED[3:0]),
        .S({1'b0,line0_i_42_n_1,line0_i_43_n_1,line0_i_44_n_1}));
  (* SOFT_HLUTNM = "soft_lutpair910" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_3
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[23]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[5]));
  CARRY4 line0_i_34
       (.CI(line0_i_67_n_1),
        .CO({line0_i_34_n_1,line0_i_34_n_2,line0_i_34_n_3,line0_i_34_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,line0_i_68_n_1}),
        .O(NLW_line0_i_34_O_UNCONNECTED[3:0]),
        .S({line0_i_69_n_1,line0_i_70_n_1,line0_i_71_n_1,line0_i_72_n_1}));
  LUT3 #(
    .INIT(8'h20)) 
    line0_i_35
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_35_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_36
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_36_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_37
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_37_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_38
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_38_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_39
       (.I0(dst_data_30w[24]),
        .I1(dst_data_30w[25]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair910" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_4
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[22]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[4]));
  CARRY4 line0_i_40
       (.CI(line0_i_73_n_1),
        .CO({line0_i_40_n_1,line0_i_40_n_2,line0_i_40_n_3,line0_i_40_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,line0_i_74_n_1}),
        .O(NLW_line0_i_40_O_UNCONNECTED[3:0]),
        .S({line0_i_75_n_1,line0_i_76_n_1,line0_i_77_n_1,line0_i_78_n_1}));
  LUT2 #(
    .INIT(4'h8)) 
    line0_i_41
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[29]),
        .O(dst_data_30));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_42
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_42_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_43
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_43_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_44
       (.I0(dst_data_30w[24]),
        .I1(dst_data_30w[25]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair908" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_5
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[21]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[3]));
  (* SOFT_HLUTNM = "soft_lutpair908" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_6
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[20]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[2]));
  CARRY4 line0_i_67
       (.CI(line0_i_103_n_1),
        .CO({line0_i_67_n_1,line0_i_67_n_2,line0_i_67_n_3,line0_i_67_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_104_n_1,line0_i_105_n_1,line0_i_106_n_1,line0_i_107_n_1}),
        .O(NLW_line0_i_67_O_UNCONNECTED[3:0]),
        .S({line0_i_108_n_1,line0_i_109_n_1,line0_i_110_n_1,line0_i_111_n_1}));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_68
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_68_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_69
       (.I0(dst_data_30w[22]),
        .I1(dst_data_30w[23]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_69_n_1));
  (* SOFT_HLUTNM = "soft_lutpair907" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_7
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[19]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[1]));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_70
       (.I0(dst_data_30w[20]),
        .I1(dst_data_30w[21]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_70_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_71
       (.I0(dst_data_30w[18]),
        .I1(dst_data_30w[19]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_71_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_72
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_72_n_1));
  CARRY4 line0_i_73
       (.CI(line0_i_112_n_1),
        .CO({line0_i_73_n_1,line0_i_73_n_2,line0_i_73_n_3,line0_i_73_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_113_n_1,line0_i_114_n_1,line0_i_115_n_1,line0_i_116_n_1}),
        .O(NLW_line0_i_73_O_UNCONNECTED[3:0]),
        .S({line0_i_117_n_1,line0_i_118_n_1,line0_i_119_n_1,line0_i_120_n_1}));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_74
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_74_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_75
       (.I0(dst_data_30w[22]),
        .I1(dst_data_30w[23]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_75_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_76
       (.I0(dst_data_30w[20]),
        .I1(dst_data_30w[21]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_76_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_77
       (.I0(dst_data_30w[18]),
        .I1(dst_data_30w[19]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_77_n_1));
  LUT3 #(
    .INIT(8'h20)) 
    line0_i_78
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_78_n_1));
  (* SOFT_HLUTNM = "soft_lutpair906" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_8
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[18]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u0
       (.A(add_1_0_i_27__1_0[127:120]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\win_cnt_reg[0] [5],coef0[4],\win_cnt_reg[0] [4],coef0[3],\win_cnt_reg[0] [3],coef0[2:1],\win_cnt_reg[0] [2:0],B[0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[0]_61 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    u0_i_1
       (.I0(u7_i_5_2),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_1),
        .I4(u7_i_5_0),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[0] [5]));
  LUT6 #(
    .INIT(64'h04C044CC4CCC0CC0)) 
    u0_i_10
       (.I0(u7_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_3),
        .I3(u7_i_5_1),
        .I4(u7_i_5_2),
        .I5(u2_i_5_0),
        .O(\win_cnt_reg[0] [0]));
  (* SOFT_HLUTNM = "soft_lutpair914" *) 
  LUT3 #(
    .INIT(8'h60)) 
    u0_i_11
       (.I0(u7_i_5_1),
        .I1(u2_i_5_0),
        .I2(B[11]),
        .O(B[0]));
  LUT2 #(
    .INIT(4'h1)) 
    u0_i_13
       (.I0(u7_i_5_0),
        .I1(ch2_win_data__0),
        .O(B[11]));
  (* SOFT_HLUTNM = "soft_lutpair888" *) 
  LUT5 #(
    .INIT(32'hFFFFC196)) 
    u0_i_14
       (.I0(u2_i_5_0),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u7_i_5_1),
        .I4(u7_i_5_0),
        .O(u0_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair900" *) 
  LUT5 #(
    .INIT(32'hFFFF26C1)) 
    u0_i_15
       (.I0(u7_i_5_3),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_0),
        .O(u0_i_15_n_1));
  LUT6 #(
    .INIT(64'h0000000600000072)) 
    u0_i_3
       (.I0(u7_i_5_2),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(ch2_win_data__0),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(\win_cnt_reg[0] [4]));
  (* SOFT_HLUTNM = "soft_lutpair904" *) 
  LUT4 #(
    .INIT(16'h0028)) 
    u0_i_5
       (.I0(rst_n_i_IBUF),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(u0_i_14_n_1),
        .O(\win_cnt_reg[0] [3]));
  LUT6 #(
    .INIT(64'h404C0C00C0C0C00C)) 
    u0_i_8
       (.I0(u7_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(\win_cnt_reg[0] [2]));
  (* SOFT_HLUTNM = "soft_lutpair905" *) 
  LUT4 #(
    .INIT(16'h0028)) 
    u0_i_9
       (.I0(rst_n_i_IBUF),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(u0_i_15_n_1),
        .O(\win_cnt_reg[0] [1]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u1
       (.A(add_1_0_i_27__1_0[119:112]),
        .B({B[11],B[11],B[11],\win_cnt_reg[2] [9],coef1[2],\win_cnt_reg[2] [8:5],coef1[1:0],\win_cnt_reg[2] [4],coef0[1],\win_cnt_reg[2] [3:2],B[1],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[1]_62 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u10
       (.A(add_1_0_i_27__1_0[47:40]),
        .B({1'b0,coef10[12:5],coef10[7],coef10[4:0],\win_cnt_reg[0] [0],B[0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[10]_71 ));
  LUT6 #(
    .INIT(64'h0000008000800000)) 
    u10_i_1
       (.I0(rst_n_i_IBUF),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(coef10[12]));
  LUT6 #(
    .INIT(64'hF43F3F3F00000000)) 
    u10_i_10
       (.I0(u7_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(B[11]),
        .O(coef10[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFFFAAEA)) 
    u10_i_11
       (.I0(coef10[12]),
        .I1(u10_i_14_n_1),
        .I2(u7_i_5_2),
        .I3(u1_i_19_n_1),
        .I4(u10_i_15_n_1),
        .I5(ch2_win_data__0),
        .O(coef10[2]));
  (* SOFT_HLUTNM = "soft_lutpair893" *) 
  LUT5 #(
    .INIT(32'h86007500)) 
    u10_i_12
       (.I0(u7_i_5_1),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(B[11]),
        .I4(u2_i_5_0),
        .O(coef10[1]));
  (* SOFT_HLUTNM = "soft_lutpair886" *) 
  LUT5 #(
    .INIT(32'h2A8288A2)) 
    u10_i_13
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .O(coef10[0]));
  (* SOFT_HLUTNM = "soft_lutpair912" *) 
  LUT2 #(
    .INIT(4'h6)) 
    u10_i_14
       (.I0(u7_i_5_3),
        .I1(u2_i_5_0),
        .O(u10_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair888" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    u10_i_15
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .O(u10_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair893" *) 
  LUT5 #(
    .INIT(32'hA8082000)) 
    u10_i_2
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .O(coef10[11]));
  (* SOFT_HLUTNM = "soft_lutpair892" *) 
  LUT5 #(
    .INIT(32'hA888A080)) 
    u10_i_3
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .O(coef10[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFF20000000)) 
    u10_i_4
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(u7_i_5_0),
        .I2(u2_i_5_0),
        .I3(u7_i_5_1),
        .I4(rst_n_i_IBUF),
        .I5(\win_cnt_reg[0] [0]),
        .O(coef10[9]));
  (* SOFT_HLUTNM = "soft_lutpair891" *) 
  LUT5 #(
    .INIT(32'h0808AA08)) 
    u10_i_5
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .O(coef10[8]));
  (* SOFT_HLUTNM = "soft_lutpair890" *) 
  LUT5 #(
    .INIT(32'h02808002)) 
    u10_i_6
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .O(coef10[7]));
  (* SOFT_HLUTNM = "soft_lutpair889" *) 
  LUT5 #(
    .INIT(32'h6FF80000)) 
    u10_i_7
       (.I0(u7_i_5_2),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_1),
        .I4(B[11]),
        .O(coef10[6]));
  (* SOFT_HLUTNM = "soft_lutpair896" *) 
  LUT5 #(
    .INIT(32'hAA828088)) 
    u10_i_8
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .O(coef10[5]));
  (* SOFT_HLUTNM = "soft_lutpair887" *) 
  LUT5 #(
    .INIT(32'h022A2AAA)) 
    u10_i_9
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .O(coef10[4]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u11
       (.A(add_1_0_i_27__1_0[39:32]),
        .B({B[11],B[11],B[11],\win_cnt_reg[2]_0 [8:4],coef11,\win_cnt_reg[2]_0 [3:2],coef10[2],\win_cnt_reg[2]_0 [1:0],B[1],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[11]_72 ));
  LUT6 #(
    .INIT(64'h2A2AAA2AAAAAAAAA)) 
    u11_i_1
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(\win_cnt_reg[2]_0 [8]));
  LUT6 #(
    .INIT(64'h08A28A0028A28A00)) 
    u11_i_10
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(\win_cnt_reg[2]_0 [1]));
  LUT6 #(
    .INIT(64'h433003CC00000000)) 
    u11_i_11
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_3),
        .I5(B[11]),
        .O(\win_cnt_reg[2]_0 [0]));
  LUT6 #(
    .INIT(64'h080A280A2A2A2A2A)) 
    u11_i_2
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u7_i_5_0),
        .I5(u2_i_5_0),
        .O(\win_cnt_reg[2]_0 [7]));
  LUT6 #(
    .INIT(64'h7070F03000F0F0F0)) 
    u11_i_3
       (.I0(u7_i_5_0),
        .I1(u2_i_5_0),
        .I2(B[11]),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .I5(u7_i_5_1),
        .O(\win_cnt_reg[2]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair887" *) 
  LUT5 #(
    .INIT(32'h202AA8AA)) 
    u11_i_4
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .O(\win_cnt_reg[2]_0 [5]));
  LUT6 #(
    .INIT(64'h200A280A280A280A)) 
    u11_i_5
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_1),
        .I4(u7_i_5_0),
        .I5(u7_i_5_3),
        .O(\win_cnt_reg[2]_0 [4]));
  LUT6 #(
    .INIT(64'h0000000000000116)) 
    u11_i_8
       (.I0(u2_i_5_0),
        .I1(u7_i_5_2),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u7_i_5_0),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[2]_0 [3]));
  LUT6 #(
    .INIT(64'h4C0C0000C00CCC00)) 
    u11_i_9
       (.I0(u7_i_5_0),
        .I1(B[11]),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(u7_i_5_1),
        .O(\win_cnt_reg[2]_0 [2]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u12
       (.A(add_1_0_i_27__1_0[31:24]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\win_cnt_reg[0]_0 [7:3],coef12,\win_cnt_reg[0]_0 [2:0],\win_cnt_reg[0] [0],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[12]_73 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    u12_i_1
       (.I0(u7_i_5_2),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_1),
        .I4(u7_i_5_0),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[0]_0 [7]));
  LUT6 #(
    .INIT(64'h00000022000000F2)) 
    u12_i_2
       (.I0(u7_i_5_3),
        .I1(u2_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_0),
        .I4(ch2_win_data__0),
        .I5(u7_i_5_2),
        .O(\win_cnt_reg[0]_0 [6]));
  LUT6 #(
    .INIT(64'h000A2800082A2800)) 
    u12_i_3
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(\win_cnt_reg[0]_0 [5]));
  LUT6 #(
    .INIT(64'h0004001000410004)) 
    u12_i_4
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u7_i_5_0),
        .I4(u7_i_5_1),
        .I5(u2_i_5_0),
        .O(\win_cnt_reg[0]_0 [4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAFAEF)) 
    u12_i_5
       (.I0(u12_i_7_n_1),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u1_i_19_n_1),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[0]_0 [3]));
  LUT6 #(
    .INIT(64'h0080002000208080)) 
    u12_i_7
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_1),
        .I3(u7_i_5_0),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(u12_i_7_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u13
       (.A(add_1_0_i_27__1_0[23:16]),
        .B({B[11],B[11],B[11],coef13[2],\win_cnt_reg[0]_1 [5],coef13[1],\win_cnt_reg[0]_1 [4:2],coef13[0],\win_cnt_reg[0]_1 [1:0],\win_cnt_reg[0]_0 [2],add_1_4_i_27__1_0[1:0],B[1:0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[13]_74 ));
  LUT6 #(
    .INIT(64'h000000000F000B07)) 
    u13_i_2
       (.I0(u7_i_5_2),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u2_i_5_0),
        .I4(u7_i_5_3),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[0]_1 [5]));
  LUT6 #(
    .INIT(64'hAAAA88A0AAAAAAA2)) 
    u13_i_4
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(\win_cnt_reg[0]_1 [4]));
  (* SOFT_HLUTNM = "soft_lutpair902" *) 
  LUT4 #(
    .INIT(16'h02A8)) 
    u13_i_5
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .O(\win_cnt_reg[0]_1 [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF02022280)) 
    u13_i_6
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u13_i_8_n_1),
        .O(\win_cnt_reg[0]_1 [2]));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    u13_i_8
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_2),
        .O(u13_i_8_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u14
       (.A(add_1_0_i_27__1_0[15:8]),
        .B({B[11],B[11],B[11],coef14,\win_cnt_reg[2]_0 [3:2],coef10[2],\win_cnt_reg[2]_0 [1:0],B[1],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[14]_75 ));
  LUT6 #(
    .INIT(64'h02AAAAAAA2AAAAAA)) 
    u14_i_1
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef14[6]));
  LUT6 #(
    .INIT(64'h00000000000B0F07)) 
    u14_i_2
       (.I0(u7_i_5_2),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(ch2_win_data__0),
        .O(coef14[5]));
  LUT6 #(
    .INIT(64'h7F0F75FF00000000)) 
    u14_i_3
       (.I0(u7_i_5_1),
        .I1(u7_i_5_0),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .I5(B[11]),
        .O(coef14[4]));
  LUT6 #(
    .INIT(64'h0200AAA00AAAAAAA)) 
    u14_i_4
       (.I0(B[11]),
        .I1(u7_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_1),
        .O(coef14[3]));
  (* SOFT_HLUTNM = "soft_lutpair902" *) 
  LUT4 #(
    .INIT(16'h208A)) 
    u14_i_5
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .O(coef14[2]));
  LUT6 #(
    .INIT(64'h08200A0208208A02)) 
    u14_i_6
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .I5(u7_i_5_0),
        .O(coef14[1]));
  LUT6 #(
    .INIT(64'h0B30BABB0A00AAAA)) 
    u14_i_7
       (.I0(u8_i_16_n_1),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .I5(B[11]),
        .O(coef14[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u15
       (.A(add_1_0_i_27__1_0[7:0]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,coef15,coef10[2:0],\win_cnt_reg[0] [0],B[0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[15]_76 ));
  (* SOFT_HLUTNM = "soft_lutpair885" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    u15_i_1
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_1),
        .I4(u7_i_5_2),
        .O(coef15[5]));
  LUT6 #(
    .INIT(64'hAAA8A8A8AAA0A0A0)) 
    u15_i_2
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_2),
        .O(coef15[4]));
  LUT6 #(
    .INIT(64'h88AAA8A88A88A888)) 
    u15_i_3
       (.I0(B[11]),
        .I1(u7_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .I5(u2_i_5_0),
        .O(coef15[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAA08822008)) 
    u15_i_4
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef15[2]));
  LUT6 #(
    .INIT(64'h2050507050A0F000)) 
    u15_i_5
       (.I0(u7_i_5_1),
        .I1(u7_i_5_0),
        .I2(B[11]),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(coef15[1]));
  LUT6 #(
    .INIT(64'hAFAAAAEAAAAAAAAA)) 
    u15_i_6
       (.I0(u13_i_8_n_1),
        .I1(u2_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(B[11]),
        .O(coef15[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA2)) 
    u1_i_1
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(\win_cnt_reg[2] [9]));
  LUT6 #(
    .INIT(64'h4565000016360000)) 
    u1_i_10
       (.I0(u7_i_5_1),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_0),
        .I4(B[11]),
        .I5(u7_i_5_2),
        .O(\win_cnt_reg[2] [3]));
  LUT6 #(
    .INIT(64'h080820020828A002)) 
    u1_i_11
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .I5(u7_i_5_0),
        .O(\win_cnt_reg[2] [2]));
  LUT6 #(
    .INIT(64'h0200000282000082)) 
    u1_i_12
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .I5(u7_i_5_0),
        .O(B[1]));
  LUT6 #(
    .INIT(64'h0C00000500000005)) 
    u1_i_13
       (.I0(ch2_win_data__0),
        .I1(\FSM_sequential_state_reg[1] ),
        .I2(u7_i_5_0),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(rst_n_i_IBUF),
        .O(\win_cnt_reg[2] [1]));
  (* SOFT_HLUTNM = "soft_lutpair909" *) 
  LUT4 #(
    .INIT(16'h0041)) 
    u1_i_14
       (.I0(u7_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(ch2_win_data__0),
        .O(\win_cnt_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair901" *) 
  LUT4 #(
    .INIT(16'hFF40)) 
    u1_i_15
       (.I0(u2_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u7_i_5_1),
        .O(u1_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair913" *) 
  LUT3 #(
    .INIT(8'h04)) 
    u1_i_16
       (.I0(u7_i_5_2),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .O(u1_i_16_n_1));
  LUT2 #(
    .INIT(4'h2)) 
    u1_i_17
       (.I0(u7_i_5_1),
        .I1(u7_i_5_0),
        .O(u1_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair898" *) 
  LUT5 #(
    .INIT(32'hF3FFF7FF)) 
    u1_i_18
       (.I0(u7_i_5_2),
        .I1(u7_i_5_3),
        .I2(u7_i_5_0),
        .I3(u7_i_5_1),
        .I4(u2_i_5_0),
        .O(u1_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair914" *) 
  LUT2 #(
    .INIT(4'hE)) 
    u1_i_19
       (.I0(u7_i_5_1),
        .I1(u7_i_5_0),
        .O(u1_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair892" *) 
  LUT5 #(
    .INIT(32'h88888880)) 
    u1_i_20
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .O(u1_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair905" *) 
  LUT2 #(
    .INIT(4'h6)) 
    u1_i_21
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\FSM_sequential_state_reg[1] ));
  LUT6 #(
    .INIT(64'h020202020F02FFFF)) 
    u1_i_3
       (.I0(B[11]),
        .I1(u1_i_15_n_1),
        .I2(u1_i_16_n_1),
        .I3(u1_i_17_n_1),
        .I4(u1_i_18_n_1),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[2] [8]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00050404)) 
    u1_i_4
       (.I0(ch2_win_data__0),
        .I1(u2_i_5_0),
        .I2(u1_i_19_n_1),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(u1_i_20_n_1),
        .O(\win_cnt_reg[2] [7]));
  (* SOFT_HLUTNM = "soft_lutpair899" *) 
  LUT5 #(
    .INIT(32'h0000090C)) 
    u1_i_5
       (.I0(u2_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_0),
        .I3(u7_i_5_1),
        .I4(ch2_win_data__0),
        .O(\win_cnt_reg[2] [6]));
  LUT6 #(
    .INIT(64'h1000001011010100)) 
    u1_i_6
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .I5(u2_i_5_0),
        .O(\win_cnt_reg[2] [5]));
  LUT6 #(
    .INIT(64'hAAAAAAAABEAAAAAA)) 
    u1_i_9
       (.I0(\win_cnt_reg[3] [4]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u1_i_17_n_1),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[2] [4]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u2
       (.A(add_1_0_i_27__1_0[111:104]),
        .B({B[11],B[11],B[11:8],coef2[2],B[7],coef2[1],B[6:4],coef2[0],B[3:0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[2]_63 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA2AAA)) 
    u2_i_1
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(B[10]));
  LUT6 #(
    .INIT(64'hFFFF01FF01010101)) 
    u2_i_11
       (.I0(u2_i_14_n_1),
        .I1(u2_i_15_n_1),
        .I2(ch2_win_data__0),
        .I3(u2_i_16_n_1),
        .I4(u2_i_17_n_1),
        .I5(B[11]),
        .O(B[3]));
  LUT6 #(
    .INIT(64'hAABBBEEAAAAAAAAA)) 
    u2_i_12
       (.I0(u2_i_18_n_1),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_3),
        .I5(B[11]),
        .O(B[2]));
  (* SOFT_HLUTNM = "soft_lutpair903" *) 
  LUT4 #(
    .INIT(16'hFF93)) 
    u2_i_13
       (.I0(u2_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_1),
        .I3(u7_i_5_0),
        .O(u2_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair915" *) 
  LUT3 #(
    .INIT(8'h60)) 
    u2_i_14
       (.I0(u2_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .O(u2_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair901" *) 
  LUT5 #(
    .INIT(32'hFFFFBAAA)) 
    u2_i_15
       (.I0(u7_i_5_0),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .O(u2_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair899" *) 
  LUT4 #(
    .INIT(16'hF7FF)) 
    u2_i_16
       (.I0(u2_i_5_0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u7_i_5_3),
        .O(u2_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair898" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    u2_i_17
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .O(u2_i_17_n_1));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    u2_i_18
       (.I0(u2_i_5_0),
        .I1(u7_i_5_2),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u7_i_5_0),
        .I5(ch2_win_data__0),
        .O(u2_i_18_n_1));
  LUT6 #(
    .INIT(64'h0000000051415111)) 
    u2_i_2
       (.I0(ch2_win_data__0),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_1),
        .I4(u7_i_5_2),
        .I5(u7_i_5_0),
        .O(B[9]));
  LUT6 #(
    .INIT(64'h0AAA088802A2AAAA)) 
    u2_i_3
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_0),
        .I4(u7_i_5_3),
        .I5(u7_i_5_2),
        .O(B[8]));
  (* SOFT_HLUTNM = "soft_lutpair904" *) 
  LUT4 #(
    .INIT(16'h0028)) 
    u2_i_5
       (.I0(rst_n_i_IBUF),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(u2_i_13_n_1),
        .O(B[7]));
  LUT6 #(
    .INIT(64'h022280AA822A80AA)) 
    u2_i_7
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(B[6]));
  LUT6 #(
    .INIT(64'h0000000010410010)) 
    u2_i_8
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(B[5]));
  LUT6 #(
    .INIT(64'h077500AA00000000)) 
    u2_i_9
       (.I0(u7_i_5_1),
        .I1(u7_i_5_0),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(B[11]),
        .O(B[4]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u3
       (.A(add_1_0_i_27__1_0[103:96]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,add_1_1_i_54__1_0,coef3[6:2],coef2[0],coef3[1:0],\win_cnt_reg[0] [0],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[3]_64 ));
  LUT6 #(
    .INIT(64'h0000000000004F44)) 
    u3_i_2
       (.I0(u7_i_5_3),
        .I1(u2_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u7_i_5_0),
        .I5(ch2_win_data__0),
        .O(coef3[6]));
  LUT6 #(
    .INIT(64'h0000000011100450)) 
    u3_i_3
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .I5(ch2_win_data__0),
        .O(coef3[5]));
  LUT6 #(
    .INIT(64'h0000000000004294)) 
    u3_i_4
       (.I0(u7_i_5_2),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_1),
        .I4(u7_i_5_0),
        .I5(ch2_win_data__0),
        .O(coef3[4]));
  LUT6 #(
    .INIT(64'h0000415100001441)) 
    u3_i_5
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(coef3[3]));
  (* SOFT_HLUTNM = "soft_lutpair897" *) 
  LUT5 #(
    .INIT(32'h00C00840)) 
    u3_i_6
       (.I0(u2_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .O(coef3[2]));
  (* SOFT_HLUTNM = "soft_lutpair895" *) 
  LUT5 #(
    .INIT(32'h0A2A2880)) 
    u3_i_7
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .O(coef3[1]));
  LUT6 #(
    .INIT(64'h4CC000CCC00CCC0C)) 
    u3_i_8
       (.I0(u7_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .I5(u7_i_5_1),
        .O(coef3[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u4
       (.A(add_1_0_i_27__1_0[95:88]),
        .B({B[11],B[11],B[11],coef4,coef1[0],\win_cnt_reg[2] [4],coef0[1],\win_cnt_reg[2] [3:2],B[1],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[4]_65 ));
  LUT6 #(
    .INIT(64'h000AAAA2AAAAAAA2)) 
    u4_i_1
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef4[6]));
  (* SOFT_HLUTNM = "soft_lutpair1332" *) 
  LUT2 #(
    .INIT(4'h6)) 
    u4_i_10
       (.I0(u2_i_5_0),
        .I1(u7_i_5_2),
        .O(u4_i_10_n_1));
  LUT6 #(
    .INIT(64'h0000445400000000)) 
    u4_i_11
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(u4_i_11_n_1));
  LUT6 #(
    .INIT(64'h00028088AAA28088)) 
    u4_i_2
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef4[5]));
  LUT6 #(
    .INIT(64'h222202A2AAA28AA2)) 
    u4_i_3
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_0),
        .O(coef4[4]));
  LUT6 #(
    .INIT(64'h0055005400150010)) 
    u4_i_4
       (.I0(ch2_win_data__0),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u7_i_5_0),
        .I4(u7_i_5_1),
        .I5(u2_i_5_0),
        .O(coef4[3]));
  LUT6 #(
    .INIT(64'hFF0E0E0E0E0E0E0E)) 
    u4_i_5
       (.I0(u2_i_17_n_1),
        .I1(u4_i_8_n_1),
        .I2(ch2_win_data__0),
        .I3(u4_i_9_n_1),
        .I4(u4_i_10_n_1),
        .I5(B[11]),
        .O(coef4[2]));
  LUT6 #(
    .INIT(64'h00008A0880208A08)) 
    u4_i_6
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef4[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFF02022280)) 
    u4_i_7
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u4_i_11_n_1),
        .O(coef4[0]));
  (* SOFT_HLUTNM = "soft_lutpair911" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    u4_i_8
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .O(u4_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair912" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    u4_i_9
       (.I0(u2_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_1),
        .O(u4_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u5
       (.A(add_1_0_i_27__1_0[87:80]),
        .B({1'b0,coef5[4],\win_cnt_reg[3] [4],coef5[3:2],\win_cnt_reg[3] [3:2],coef5[1],\win_cnt_reg[3] [1],\win_cnt_reg[3] [2],\win_cnt_reg[3] [0],coef5[0],coef0[1],\win_cnt_reg[0] [2:0],B[0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[5]_66 ));
  (* SOFT_HLUTNM = "soft_lutpair890" *) 
  LUT5 #(
    .INIT(32'h101B0000)) 
    u5_i_2
       (.I0(u7_i_5_1),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(B[11]),
        .O(\win_cnt_reg[3] [4]));
  (* SOFT_HLUTNM = "soft_lutpair891" *) 
  LUT5 #(
    .INIT(32'h08AA0808)) 
    u5_i_5
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_1),
        .I4(u7_i_5_3),
        .O(\win_cnt_reg[3] [3]));
  (* SOFT_HLUTNM = "soft_lutpair897" *) 
  LUT5 #(
    .INIT(32'h80101080)) 
    u5_i_6
       (.I0(u7_i_5_1),
        .I1(u2_i_5_0),
        .I2(B[11]),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .O(\win_cnt_reg[3] [2]));
  LUT6 #(
    .INIT(64'h00AA200A000AAAAA)) 
    u5_i_8
       (.I0(B[11]),
        .I1(u7_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_1),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(\win_cnt_reg[3] [1]));
  LUT6 #(
    .INIT(64'h0000000055545440)) 
    u5_i_9
       (.I0(u7_i_5_0),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[3] [0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u6
       (.A(add_1_0_i_27__1_0[79:72]),
        .B({1'b0,coef6[8:3],add_1_3_i_27__1_0,coef6[2],coef6[3],coef6[1:0],coef2[0],coef3[1:0],\win_cnt_reg[0] [0],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[6]_67 ));
  (* SOFT_HLUTNM = "soft_lutpair903" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    u6_i_1
       (.I0(u2_i_5_0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(ch2_win_data__0),
        .O(coef6[8]));
  LUT6 #(
    .INIT(64'h202AA82AA0AAA82A)) 
    u6_i_10
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef6[0]));
  (* SOFT_HLUTNM = "soft_lutpair894" *) 
  LUT5 #(
    .INIT(32'h02A20080)) 
    u6_i_2
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .O(coef6[7]));
  LUT6 #(
    .INIT(64'h000000C4000000D5)) 
    u6_i_3
       (.I0(u7_i_5_3),
        .I1(u7_i_5_2),
        .I2(u2_i_5_0),
        .I3(ch2_win_data__0),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(coef6[6]));
  LUT6 #(
    .INIT(64'h2A22AAA82AA2AAA8)) 
    u6_i_4
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef6[5]));
  LUT6 #(
    .INIT(64'h0100010005050100)) 
    u6_i_5
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(ch2_win_data__0),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_2),
        .O(coef6[4]));
  (* SOFT_HLUTNM = "soft_lutpair885" *) 
  LUT5 #(
    .INIT(32'h08202008)) 
    u6_i_6
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_2),
        .I4(u7_i_5_3),
        .O(coef6[3]));
  LUT6 #(
    .INIT(64'h08AA0A0828AA0A08)) 
    u6_i_8
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_0),
        .O(coef6[2]));
  LUT6 #(
    .INIT(64'h4000CCC04CC0CCCC)) 
    u6_i_9
       (.I0(u7_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_2),
        .O(coef6[1]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u7
       (.A(add_1_0_i_27__1_0[71:64]),
        .B({B[11],B[11],B[11],coef7,B[5:4],coef2[0],B[3:0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[7]_68 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAA8AAAA)) 
    u7_i_1
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(coef7[6]));
  (* SOFT_HLUTNM = "soft_lutpair889" *) 
  LUT5 #(
    .INIT(32'hAA00A200)) 
    u7_i_10
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u7_i_5_1),
        .I4(u2_i_5_0),
        .O(u7_i_10_n_1));
  LUT6 #(
    .INIT(64'h000A0222A8AA0222)) 
    u7_i_2
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef7[5]));
  LUT6 #(
    .INIT(64'hAAAA8A8AA8AAAAAA)) 
    u7_i_3
       (.I0(B[11]),
        .I1(u7_i_5_0),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_3),
        .I5(u7_i_5_1),
        .O(coef7[4]));
  LUT6 #(
    .INIT(64'h000000000F0C050D)) 
    u7_i_4
       (.I0(u2_i_5_0),
        .I1(u7_i_5_1),
        .I2(u7_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(ch2_win_data__0),
        .O(coef7[3]));
  LUT6 #(
    .INIT(64'hFFFFFF0404040404)) 
    u7_i_5
       (.I0(ch2_win_data__0),
        .I1(u4_i_10_n_1),
        .I2(u1_i_19_n_1),
        .I3(u7_i_8_n_1),
        .I4(u7_i_9_n_1),
        .I5(u7_i_10_n_1),
        .O(coef7[2]));
  LUT6 #(
    .INIT(64'h0A000A0A00A02A00)) 
    u7_i_6
       (.I0(B[11]),
        .I1(u7_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(u2_i_5_0),
        .O(coef7[1]));
  LUT6 #(
    .INIT(64'h02200822AAA80822)) 
    u7_i_7
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef7[0]));
  (* SOFT_HLUTNM = "soft_lutpair1332" *) 
  LUT2 #(
    .INIT(4'h1)) 
    u7_i_8
       (.I0(u7_i_5_3),
        .I1(u7_i_5_2),
        .O(u7_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair909" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    u7_i_9
       (.I0(u7_i_5_1),
        .I1(u7_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .O(u7_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u8
       (.A(add_1_0_i_27__1_0[63:56]),
        .B({B[11],B[11],B[11],add_1_4_i_27__1_0[3],coef8,add_1_4_i_27__1_0[2],\win_cnt_reg[0]_1 [1:0],\win_cnt_reg[0]_0 [2],add_1_4_i_27__1_0[1:0],B[1:0],coef0[0],B[11]}),
        .CLK(CLK),
        .P(\Pw[8]_69 ));
  LUT6 #(
    .INIT(64'h00220802A2220802)) 
    u8_i_10
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(\win_cnt_reg[0]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair915" *) 
  LUT3 #(
    .INIT(8'h10)) 
    u8_i_13
       (.I0(u2_i_5_0),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .O(u8_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair913" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    u8_i_14
       (.I0(u7_i_5_3),
        .I1(u2_i_5_0),
        .I2(u7_i_5_2),
        .O(u8_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair900" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    u8_i_15
       (.I0(u7_i_5_3),
        .I1(u2_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_0),
        .I4(u7_i_5_1),
        .O(u8_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair911" *) 
  LUT3 #(
    .INIT(8'h04)) 
    u8_i_16
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(ch2_win_data__0),
        .O(u8_i_16_n_1));
  LUT6 #(
    .INIT(64'h0800AA2A8880AA2A)) 
    u8_i_2
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef8[4]));
  LUT6 #(
    .INIT(64'hAAAAAA8AAAA2AA8A)) 
    u8_i_3
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_3),
        .I3(u7_i_5_0),
        .I4(u7_i_5_1),
        .I5(u2_i_5_0),
        .O(coef8[3]));
  LUT6 #(
    .INIT(64'hFFFF10FF10101010)) 
    u8_i_4
       (.I0(u7_i_5_1),
        .I1(u8_i_13_n_1),
        .I2(B[11]),
        .I3(u8_i_14_n_1),
        .I4(u8_i_15_n_1),
        .I5(u8_i_16_n_1),
        .O(coef8[2]));
  LUT6 #(
    .INIT(64'h0828088828288888)) 
    u8_i_5
       (.I0(B[11]),
        .I1(u7_i_5_2),
        .I2(u7_i_5_1),
        .I3(u7_i_5_0),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(coef8[1]));
  LUT6 #(
    .INIT(64'h02A0008802A08088)) 
    u8_i_6
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_0),
        .O(coef8[0]));
  (* SOFT_HLUTNM = "soft_lutpair896" *) 
  LUT5 #(
    .INIT(32'h00808048)) 
    u8_i_8
       (.I0(u2_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .O(\win_cnt_reg[0]_1 [1]));
  LUT6 #(
    .INIT(64'h0000000011004550)) 
    u8_i_9
       (.I0(u7_i_5_0),
        .I1(u7_i_5_1),
        .I2(u2_i_5_0),
        .I3(u7_i_5_3),
        .I4(u7_i_5_2),
        .I5(ch2_win_data__0),
        .O(\win_cnt_reg[0]_1 [0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u9
       (.A(add_1_0_i_27__1_0[55:48]),
        .B({1'b0,add_1_4_i_54__1_0[2],coef9[6],add_1_4_i_54__1_0[1],coef9[5:1],coef9[3],add_1_4_i_54__1_0[0],coef9[0],\win_cnt_reg[0]_0 [2:0],\win_cnt_reg[0] [0],\win_cnt_reg[2] [1:0],B[11]}),
        .CLK(CLK),
        .P(\Pw[9]_70 ));
  LUT6 #(
    .INIT(64'h282AA82AAAAAAA22)) 
    u9_i_10
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u2_i_5_0),
        .I3(u7_i_5_2),
        .I4(u7_i_5_0),
        .I5(u7_i_5_1),
        .O(coef9[0]));
  (* SOFT_HLUTNM = "soft_lutpair886" *) 
  LUT5 #(
    .INIT(32'h0228AA80)) 
    u9_i_11
       (.I0(B[11]),
        .I1(u7_i_5_3),
        .I2(u7_i_5_2),
        .I3(u2_i_5_0),
        .I4(u7_i_5_1),
        .O(\win_cnt_reg[0]_0 [1]));
  LUT6 #(
    .INIT(64'hBBAEABBFAAAAAAAA)) 
    u9_i_12
       (.I0(u9_i_13_n_1),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u2_i_5_0),
        .I4(u7_i_5_2),
        .I5(B[11]),
        .O(\win_cnt_reg[0]_0 [0]));
  LUT6 #(
    .INIT(64'h0050000000400000)) 
    u9_i_13
       (.I0(ch2_win_data__0),
        .I1(u2_i_5_0),
        .I2(u7_i_5_1),
        .I3(u7_i_5_0),
        .I4(u7_i_5_3),
        .I5(u7_i_5_2),
        .O(u9_i_13_n_1));
  LUT6 #(
    .INIT(64'h0100010301000000)) 
    u9_i_2
       (.I0(u7_i_5_2),
        .I1(ch2_win_data__0),
        .I2(u7_i_5_0),
        .I3(u7_i_5_1),
        .I4(u2_i_5_0),
        .I5(u7_i_5_3),
        .O(coef9[6]));
  LUT6 #(
    .INIT(64'h22AAAA282AAAAA28)) 
    u9_i_4
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u7_i_5_1),
        .I5(u7_i_5_0),
        .O(coef9[5]));
  (* SOFT_HLUTNM = "soft_lutpair895" *) 
  LUT5 #(
    .INIT(32'h0808AA08)) 
    u9_i_5
       (.I0(B[11]),
        .I1(u7_i_5_1),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u2_i_5_0),
        .O(coef9[4]));
  (* SOFT_HLUTNM = "soft_lutpair894" *) 
  LUT5 #(
    .INIT(32'h20020880)) 
    u9_i_6
       (.I0(B[11]),
        .I1(u2_i_5_0),
        .I2(u7_i_5_3),
        .I3(u7_i_5_2),
        .I4(u7_i_5_1),
        .O(coef9[3]));
  LUT6 #(
    .INIT(64'h44CCC00C0C00CCCC)) 
    u9_i_7
       (.I0(u7_i_5_0),
        .I1(B[11]),
        .I2(u7_i_5_2),
        .I3(u7_i_5_3),
        .I4(u2_i_5_0),
        .I5(u7_i_5_1),
        .O(coef9[2]));
  LUT6 #(
    .INIT(64'h00000000006F0032)) 
    u9_i_8
       (.I0(u7_i_5_3),
        .I1(u2_i_5_0),
        .I2(u7_i_5_2),
        .I3(u7_i_5_0),
        .I4(u7_i_5_1),
        .I5(ch2_win_data__0),
        .O(coef9[1]));
endmodule

(* ORIG_REF_NAME = "Bic_CAL" *) 
module Bic_CAL__xdcDup__1
   (coef0,
    din,
    rst_n_i_IBUF,
    ch2_win_data__0,
    u5_0,
    u5_1,
    u5_2,
    u5_3,
    u5_4,
    CLK,
    Q,
    add_1_0_i_27_0,
    coef1,
    coef2,
    coef3,
    coef4,
    coef5,
    coef6,
    coef7,
    coef8,
    coef9,
    coef10,
    coef11,
    coef12,
    coef13,
    coef14,
    coef15);
  output [3:0]coef0;
  output [7:0]din;
  input rst_n_i_IBUF;
  input ch2_win_data__0;
  input u5_0;
  input u5_1;
  input u5_2;
  input u5_3;
  input u5_4;
  input CLK;
  input [127:0]Q;
  input [8:0]add_1_0_i_27_0;
  input [13:0]coef1;
  input [11:0]coef2;
  input [7:0]coef3;
  input [6:0]coef4;
  input [9:0]coef5;
  input [9:0]coef6;
  input [6:0]coef7;
  input [11:0]coef8;
  input [11:0]coef9;
  input [12:0]coef10;
  input [10:0]coef11;
  input [5:0]coef12;
  input [6:0]coef13;
  input [6:0]coef14;
  input [5:0]coef15;

  wire CLK;
  wire [27:0]\L1Sw[0]_17 ;
  wire [27:0]\L1Sw[1]_18 ;
  wire [27:0]\L1Sw[2]_19 ;
  wire [27:0]\L1Sw[3]_20 ;
  wire [27:0]\L1Sw[4]_21 ;
  wire [27:0]\L1Sw[5]_22 ;
  wire [27:0]\L1Sw[6]_23 ;
  wire [27:0]\L1Sw[7]_24 ;
  wire [28:0]\L2Sw[0]_25 ;
  wire [28:0]\L2Sw[1]_26 ;
  wire [28:0]\L2Sw[2]_27 ;
  wire [28:0]\L2Sw[3]_28 ;
  wire [29:0]\L3Sw[0]_29 ;
  wire [29:0]\L3Sw[1]_30 ;
  wire [26:0]\Pw[0]_1 ;
  wire [26:0]\Pw[10]_11 ;
  wire [26:0]\Pw[11]_12 ;
  wire [26:0]\Pw[12]_13 ;
  wire [26:0]\Pw[13]_14 ;
  wire [26:0]\Pw[14]_15 ;
  wire [26:0]\Pw[15]_16 ;
  wire [26:0]\Pw[1]_2 ;
  wire [26:0]\Pw[2]_3 ;
  wire [26:0]\Pw[3]_4 ;
  wire [26:0]\Pw[4]_5 ;
  wire [26:0]\Pw[5]_6 ;
  wire [26:0]\Pw[6]_7 ;
  wire [26:0]\Pw[7]_8 ;
  wire [26:0]\Pw[8]_9 ;
  wire [26:0]\Pw[9]_10 ;
  wire [127:0]Q;
  wire add_1_0_i_10_n_1;
  wire add_1_0_i_11_n_1;
  wire add_1_0_i_12_n_1;
  wire add_1_0_i_13_n_1;
  wire add_1_0_i_14_n_1;
  wire add_1_0_i_15_n_1;
  wire add_1_0_i_16_n_1;
  wire add_1_0_i_17_n_1;
  wire add_1_0_i_18_n_1;
  wire add_1_0_i_19_n_1;
  wire add_1_0_i_1_n_1;
  wire add_1_0_i_20_n_1;
  wire add_1_0_i_21_n_1;
  wire add_1_0_i_22_n_1;
  wire add_1_0_i_23_n_1;
  wire add_1_0_i_24_n_1;
  wire add_1_0_i_25_n_1;
  wire add_1_0_i_26_n_1;
  wire [8:0]add_1_0_i_27_0;
  wire add_1_0_i_27_n_1;
  wire add_1_0_i_28_n_1;
  wire add_1_0_i_29_n_1;
  wire add_1_0_i_2_n_1;
  wire add_1_0_i_30_n_1;
  wire add_1_0_i_31_n_1;
  wire add_1_0_i_32_n_1;
  wire add_1_0_i_33_n_1;
  wire add_1_0_i_34_n_1;
  wire add_1_0_i_35_n_1;
  wire add_1_0_i_36_n_1;
  wire add_1_0_i_37_n_1;
  wire add_1_0_i_38_n_1;
  wire add_1_0_i_39_n_1;
  wire add_1_0_i_3_n_1;
  wire add_1_0_i_40_n_1;
  wire add_1_0_i_41_n_1;
  wire add_1_0_i_42_n_1;
  wire add_1_0_i_43_n_1;
  wire add_1_0_i_44_n_1;
  wire add_1_0_i_45_n_1;
  wire add_1_0_i_46_n_1;
  wire add_1_0_i_47_n_1;
  wire add_1_0_i_48_n_1;
  wire add_1_0_i_49_n_1;
  wire add_1_0_i_4_n_1;
  wire add_1_0_i_50_n_1;
  wire add_1_0_i_51_n_1;
  wire add_1_0_i_52_n_1;
  wire add_1_0_i_53_n_1;
  wire add_1_0_i_54_n_1;
  wire add_1_0_i_5_n_1;
  wire add_1_0_i_6_n_1;
  wire add_1_0_i_7_n_1;
  wire add_1_0_i_8_n_1;
  wire add_1_0_i_9_n_1;
  wire add_1_1_i_10_n_1;
  wire add_1_1_i_11_n_1;
  wire add_1_1_i_12_n_1;
  wire add_1_1_i_13_n_1;
  wire add_1_1_i_14_n_1;
  wire add_1_1_i_15_n_1;
  wire add_1_1_i_16_n_1;
  wire add_1_1_i_17_n_1;
  wire add_1_1_i_18_n_1;
  wire add_1_1_i_19_n_1;
  wire add_1_1_i_1_n_1;
  wire add_1_1_i_20_n_1;
  wire add_1_1_i_21_n_1;
  wire add_1_1_i_22_n_1;
  wire add_1_1_i_23_n_1;
  wire add_1_1_i_24_n_1;
  wire add_1_1_i_25_n_1;
  wire add_1_1_i_26_n_1;
  wire add_1_1_i_27_n_1;
  wire add_1_1_i_28_n_1;
  wire add_1_1_i_29_n_1;
  wire add_1_1_i_2_n_1;
  wire add_1_1_i_30_n_1;
  wire add_1_1_i_31_n_1;
  wire add_1_1_i_32_n_1;
  wire add_1_1_i_33_n_1;
  wire add_1_1_i_34_n_1;
  wire add_1_1_i_35_n_1;
  wire add_1_1_i_36_n_1;
  wire add_1_1_i_37_n_1;
  wire add_1_1_i_38_n_1;
  wire add_1_1_i_39_n_1;
  wire add_1_1_i_3_n_1;
  wire add_1_1_i_40_n_1;
  wire add_1_1_i_41_n_1;
  wire add_1_1_i_42_n_1;
  wire add_1_1_i_43_n_1;
  wire add_1_1_i_44_n_1;
  wire add_1_1_i_45_n_1;
  wire add_1_1_i_46_n_1;
  wire add_1_1_i_47_n_1;
  wire add_1_1_i_48_n_1;
  wire add_1_1_i_49_n_1;
  wire add_1_1_i_4_n_1;
  wire add_1_1_i_50_n_1;
  wire add_1_1_i_51_n_1;
  wire add_1_1_i_52_n_1;
  wire add_1_1_i_53_n_1;
  wire add_1_1_i_54_n_1;
  wire add_1_1_i_5_n_1;
  wire add_1_1_i_6_n_1;
  wire add_1_1_i_7_n_1;
  wire add_1_1_i_8_n_1;
  wire add_1_1_i_9_n_1;
  wire add_1_2_i_10_n_1;
  wire add_1_2_i_11_n_1;
  wire add_1_2_i_12_n_1;
  wire add_1_2_i_13_n_1;
  wire add_1_2_i_14_n_1;
  wire add_1_2_i_15_n_1;
  wire add_1_2_i_16_n_1;
  wire add_1_2_i_17_n_1;
  wire add_1_2_i_18_n_1;
  wire add_1_2_i_19_n_1;
  wire add_1_2_i_1_n_1;
  wire add_1_2_i_20_n_1;
  wire add_1_2_i_21_n_1;
  wire add_1_2_i_22_n_1;
  wire add_1_2_i_23_n_1;
  wire add_1_2_i_24_n_1;
  wire add_1_2_i_25_n_1;
  wire add_1_2_i_26_n_1;
  wire add_1_2_i_27_n_1;
  wire add_1_2_i_28_n_1;
  wire add_1_2_i_29_n_1;
  wire add_1_2_i_2_n_1;
  wire add_1_2_i_30_n_1;
  wire add_1_2_i_31_n_1;
  wire add_1_2_i_32_n_1;
  wire add_1_2_i_33_n_1;
  wire add_1_2_i_34_n_1;
  wire add_1_2_i_35_n_1;
  wire add_1_2_i_36_n_1;
  wire add_1_2_i_37_n_1;
  wire add_1_2_i_38_n_1;
  wire add_1_2_i_39_n_1;
  wire add_1_2_i_3_n_1;
  wire add_1_2_i_40_n_1;
  wire add_1_2_i_41_n_1;
  wire add_1_2_i_42_n_1;
  wire add_1_2_i_43_n_1;
  wire add_1_2_i_44_n_1;
  wire add_1_2_i_45_n_1;
  wire add_1_2_i_46_n_1;
  wire add_1_2_i_47_n_1;
  wire add_1_2_i_48_n_1;
  wire add_1_2_i_49_n_1;
  wire add_1_2_i_4_n_1;
  wire add_1_2_i_50_n_1;
  wire add_1_2_i_51_n_1;
  wire add_1_2_i_52_n_1;
  wire add_1_2_i_53_n_1;
  wire add_1_2_i_54_n_1;
  wire add_1_2_i_5_n_1;
  wire add_1_2_i_6_n_1;
  wire add_1_2_i_7_n_1;
  wire add_1_2_i_8_n_1;
  wire add_1_2_i_9_n_1;
  wire add_1_3_i_10_n_1;
  wire add_1_3_i_11_n_1;
  wire add_1_3_i_12_n_1;
  wire add_1_3_i_13_n_1;
  wire add_1_3_i_14_n_1;
  wire add_1_3_i_15_n_1;
  wire add_1_3_i_16_n_1;
  wire add_1_3_i_17_n_1;
  wire add_1_3_i_18_n_1;
  wire add_1_3_i_19_n_1;
  wire add_1_3_i_1_n_1;
  wire add_1_3_i_20_n_1;
  wire add_1_3_i_21_n_1;
  wire add_1_3_i_22_n_1;
  wire add_1_3_i_23_n_1;
  wire add_1_3_i_24_n_1;
  wire add_1_3_i_25_n_1;
  wire add_1_3_i_26_n_1;
  wire add_1_3_i_27_n_1;
  wire add_1_3_i_28_n_1;
  wire add_1_3_i_29_n_1;
  wire add_1_3_i_2_n_1;
  wire add_1_3_i_30_n_1;
  wire add_1_3_i_31_n_1;
  wire add_1_3_i_32_n_1;
  wire add_1_3_i_33_n_1;
  wire add_1_3_i_34_n_1;
  wire add_1_3_i_35_n_1;
  wire add_1_3_i_36_n_1;
  wire add_1_3_i_37_n_1;
  wire add_1_3_i_38_n_1;
  wire add_1_3_i_39_n_1;
  wire add_1_3_i_3_n_1;
  wire add_1_3_i_40_n_1;
  wire add_1_3_i_41_n_1;
  wire add_1_3_i_42_n_1;
  wire add_1_3_i_43_n_1;
  wire add_1_3_i_44_n_1;
  wire add_1_3_i_45_n_1;
  wire add_1_3_i_46_n_1;
  wire add_1_3_i_47_n_1;
  wire add_1_3_i_48_n_1;
  wire add_1_3_i_49_n_1;
  wire add_1_3_i_4_n_1;
  wire add_1_3_i_50_n_1;
  wire add_1_3_i_51_n_1;
  wire add_1_3_i_52_n_1;
  wire add_1_3_i_53_n_1;
  wire add_1_3_i_54_n_1;
  wire add_1_3_i_5_n_1;
  wire add_1_3_i_6_n_1;
  wire add_1_3_i_7_n_1;
  wire add_1_3_i_8_n_1;
  wire add_1_3_i_9_n_1;
  wire add_1_4_i_10_n_1;
  wire add_1_4_i_11_n_1;
  wire add_1_4_i_12_n_1;
  wire add_1_4_i_13_n_1;
  wire add_1_4_i_14_n_1;
  wire add_1_4_i_15_n_1;
  wire add_1_4_i_16_n_1;
  wire add_1_4_i_17_n_1;
  wire add_1_4_i_18_n_1;
  wire add_1_4_i_19_n_1;
  wire add_1_4_i_1_n_1;
  wire add_1_4_i_20_n_1;
  wire add_1_4_i_21_n_1;
  wire add_1_4_i_22_n_1;
  wire add_1_4_i_23_n_1;
  wire add_1_4_i_24_n_1;
  wire add_1_4_i_25_n_1;
  wire add_1_4_i_26_n_1;
  wire add_1_4_i_27_n_1;
  wire add_1_4_i_28_n_1;
  wire add_1_4_i_29_n_1;
  wire add_1_4_i_2_n_1;
  wire add_1_4_i_30_n_1;
  wire add_1_4_i_31_n_1;
  wire add_1_4_i_32_n_1;
  wire add_1_4_i_33_n_1;
  wire add_1_4_i_34_n_1;
  wire add_1_4_i_35_n_1;
  wire add_1_4_i_36_n_1;
  wire add_1_4_i_37_n_1;
  wire add_1_4_i_38_n_1;
  wire add_1_4_i_39_n_1;
  wire add_1_4_i_3_n_1;
  wire add_1_4_i_40_n_1;
  wire add_1_4_i_41_n_1;
  wire add_1_4_i_42_n_1;
  wire add_1_4_i_43_n_1;
  wire add_1_4_i_44_n_1;
  wire add_1_4_i_45_n_1;
  wire add_1_4_i_46_n_1;
  wire add_1_4_i_47_n_1;
  wire add_1_4_i_48_n_1;
  wire add_1_4_i_49_n_1;
  wire add_1_4_i_4_n_1;
  wire add_1_4_i_50_n_1;
  wire add_1_4_i_51_n_1;
  wire add_1_4_i_52_n_1;
  wire add_1_4_i_53_n_1;
  wire add_1_4_i_54_n_1;
  wire add_1_4_i_5_n_1;
  wire add_1_4_i_6_n_1;
  wire add_1_4_i_7_n_1;
  wire add_1_4_i_8_n_1;
  wire add_1_4_i_9_n_1;
  wire add_1_5_i_10_n_1;
  wire add_1_5_i_11_n_1;
  wire add_1_5_i_12_n_1;
  wire add_1_5_i_13_n_1;
  wire add_1_5_i_14_n_1;
  wire add_1_5_i_15_n_1;
  wire add_1_5_i_16_n_1;
  wire add_1_5_i_17_n_1;
  wire add_1_5_i_18_n_1;
  wire add_1_5_i_19_n_1;
  wire add_1_5_i_1_n_1;
  wire add_1_5_i_20_n_1;
  wire add_1_5_i_21_n_1;
  wire add_1_5_i_22_n_1;
  wire add_1_5_i_23_n_1;
  wire add_1_5_i_24_n_1;
  wire add_1_5_i_25_n_1;
  wire add_1_5_i_26_n_1;
  wire add_1_5_i_27_n_1;
  wire add_1_5_i_28_n_1;
  wire add_1_5_i_29_n_1;
  wire add_1_5_i_2_n_1;
  wire add_1_5_i_30_n_1;
  wire add_1_5_i_31_n_1;
  wire add_1_5_i_32_n_1;
  wire add_1_5_i_33_n_1;
  wire add_1_5_i_34_n_1;
  wire add_1_5_i_35_n_1;
  wire add_1_5_i_36_n_1;
  wire add_1_5_i_37_n_1;
  wire add_1_5_i_38_n_1;
  wire add_1_5_i_39_n_1;
  wire add_1_5_i_3_n_1;
  wire add_1_5_i_40_n_1;
  wire add_1_5_i_41_n_1;
  wire add_1_5_i_42_n_1;
  wire add_1_5_i_43_n_1;
  wire add_1_5_i_44_n_1;
  wire add_1_5_i_45_n_1;
  wire add_1_5_i_46_n_1;
  wire add_1_5_i_47_n_1;
  wire add_1_5_i_48_n_1;
  wire add_1_5_i_49_n_1;
  wire add_1_5_i_4_n_1;
  wire add_1_5_i_50_n_1;
  wire add_1_5_i_51_n_1;
  wire add_1_5_i_52_n_1;
  wire add_1_5_i_53_n_1;
  wire add_1_5_i_54_n_1;
  wire add_1_5_i_5_n_1;
  wire add_1_5_i_6_n_1;
  wire add_1_5_i_7_n_1;
  wire add_1_5_i_8_n_1;
  wire add_1_5_i_9_n_1;
  wire add_1_6_i_10_n_1;
  wire add_1_6_i_11_n_1;
  wire add_1_6_i_12_n_1;
  wire add_1_6_i_13_n_1;
  wire add_1_6_i_14_n_1;
  wire add_1_6_i_15_n_1;
  wire add_1_6_i_16_n_1;
  wire add_1_6_i_17_n_1;
  wire add_1_6_i_18_n_1;
  wire add_1_6_i_19_n_1;
  wire add_1_6_i_1_n_1;
  wire add_1_6_i_20_n_1;
  wire add_1_6_i_21_n_1;
  wire add_1_6_i_22_n_1;
  wire add_1_6_i_23_n_1;
  wire add_1_6_i_24_n_1;
  wire add_1_6_i_25_n_1;
  wire add_1_6_i_26_n_1;
  wire add_1_6_i_27_n_1;
  wire add_1_6_i_28_n_1;
  wire add_1_6_i_29_n_1;
  wire add_1_6_i_2_n_1;
  wire add_1_6_i_30_n_1;
  wire add_1_6_i_31_n_1;
  wire add_1_6_i_32_n_1;
  wire add_1_6_i_33_n_1;
  wire add_1_6_i_34_n_1;
  wire add_1_6_i_35_n_1;
  wire add_1_6_i_36_n_1;
  wire add_1_6_i_37_n_1;
  wire add_1_6_i_38_n_1;
  wire add_1_6_i_39_n_1;
  wire add_1_6_i_3_n_1;
  wire add_1_6_i_40_n_1;
  wire add_1_6_i_41_n_1;
  wire add_1_6_i_42_n_1;
  wire add_1_6_i_43_n_1;
  wire add_1_6_i_44_n_1;
  wire add_1_6_i_45_n_1;
  wire add_1_6_i_46_n_1;
  wire add_1_6_i_47_n_1;
  wire add_1_6_i_48_n_1;
  wire add_1_6_i_49_n_1;
  wire add_1_6_i_4_n_1;
  wire add_1_6_i_50_n_1;
  wire add_1_6_i_51_n_1;
  wire add_1_6_i_52_n_1;
  wire add_1_6_i_53_n_1;
  wire add_1_6_i_54_n_1;
  wire add_1_6_i_5_n_1;
  wire add_1_6_i_6_n_1;
  wire add_1_6_i_7_n_1;
  wire add_1_6_i_8_n_1;
  wire add_1_6_i_9_n_1;
  wire add_1_7_i_10_n_1;
  wire add_1_7_i_11_n_1;
  wire add_1_7_i_12_n_1;
  wire add_1_7_i_13_n_1;
  wire add_1_7_i_14_n_1;
  wire add_1_7_i_15_n_1;
  wire add_1_7_i_16_n_1;
  wire add_1_7_i_17_n_1;
  wire add_1_7_i_18_n_1;
  wire add_1_7_i_19_n_1;
  wire add_1_7_i_1_n_1;
  wire add_1_7_i_20_n_1;
  wire add_1_7_i_21_n_1;
  wire add_1_7_i_22_n_1;
  wire add_1_7_i_23_n_1;
  wire add_1_7_i_24_n_1;
  wire add_1_7_i_25_n_1;
  wire add_1_7_i_26_n_1;
  wire add_1_7_i_27_n_1;
  wire add_1_7_i_28_n_1;
  wire add_1_7_i_29_n_1;
  wire add_1_7_i_2_n_1;
  wire add_1_7_i_30_n_1;
  wire add_1_7_i_31_n_1;
  wire add_1_7_i_32_n_1;
  wire add_1_7_i_33_n_1;
  wire add_1_7_i_34_n_1;
  wire add_1_7_i_35_n_1;
  wire add_1_7_i_36_n_1;
  wire add_1_7_i_37_n_1;
  wire add_1_7_i_38_n_1;
  wire add_1_7_i_39_n_1;
  wire add_1_7_i_3_n_1;
  wire add_1_7_i_40_n_1;
  wire add_1_7_i_41_n_1;
  wire add_1_7_i_42_n_1;
  wire add_1_7_i_43_n_1;
  wire add_1_7_i_44_n_1;
  wire add_1_7_i_45_n_1;
  wire add_1_7_i_46_n_1;
  wire add_1_7_i_47_n_1;
  wire add_1_7_i_48_n_1;
  wire add_1_7_i_49_n_1;
  wire add_1_7_i_4_n_1;
  wire add_1_7_i_50_n_1;
  wire add_1_7_i_51_n_1;
  wire add_1_7_i_52_n_1;
  wire add_1_7_i_53_n_1;
  wire add_1_7_i_54_n_1;
  wire add_1_7_i_5_n_1;
  wire add_1_7_i_6_n_1;
  wire add_1_7_i_7_n_1;
  wire add_1_7_i_8_n_1;
  wire add_1_7_i_9_n_1;
  wire add_2_0_i_10_n_1;
  wire add_2_0_i_11_n_1;
  wire add_2_0_i_12_n_1;
  wire add_2_0_i_13_n_1;
  wire add_2_0_i_14_n_1;
  wire add_2_0_i_15_n_1;
  wire add_2_0_i_16_n_1;
  wire add_2_0_i_17_n_1;
  wire add_2_0_i_18_n_1;
  wire add_2_0_i_19_n_1;
  wire add_2_0_i_1_n_1;
  wire add_2_0_i_20_n_1;
  wire add_2_0_i_21_n_1;
  wire add_2_0_i_22_n_1;
  wire add_2_0_i_23_n_1;
  wire add_2_0_i_24_n_1;
  wire add_2_0_i_25_n_1;
  wire add_2_0_i_26_n_1;
  wire add_2_0_i_27_n_1;
  wire add_2_0_i_28_n_1;
  wire add_2_0_i_29_n_1;
  wire add_2_0_i_2_n_1;
  wire add_2_0_i_30_n_1;
  wire add_2_0_i_31_n_1;
  wire add_2_0_i_32_n_1;
  wire add_2_0_i_33_n_1;
  wire add_2_0_i_34_n_1;
  wire add_2_0_i_35_n_1;
  wire add_2_0_i_36_n_1;
  wire add_2_0_i_37_n_1;
  wire add_2_0_i_38_n_1;
  wire add_2_0_i_39_n_1;
  wire add_2_0_i_3_n_1;
  wire add_2_0_i_40_n_1;
  wire add_2_0_i_41_n_1;
  wire add_2_0_i_42_n_1;
  wire add_2_0_i_43_n_1;
  wire add_2_0_i_44_n_1;
  wire add_2_0_i_45_n_1;
  wire add_2_0_i_46_n_1;
  wire add_2_0_i_47_n_1;
  wire add_2_0_i_48_n_1;
  wire add_2_0_i_49_n_1;
  wire add_2_0_i_4_n_1;
  wire add_2_0_i_50_n_1;
  wire add_2_0_i_51_n_1;
  wire add_2_0_i_52_n_1;
  wire add_2_0_i_53_n_1;
  wire add_2_0_i_54_n_1;
  wire add_2_0_i_55_n_1;
  wire add_2_0_i_56_n_1;
  wire add_2_0_i_5_n_1;
  wire add_2_0_i_6_n_1;
  wire add_2_0_i_7_n_1;
  wire add_2_0_i_8_n_1;
  wire add_2_0_i_9_n_1;
  wire add_2_1_i_10_n_1;
  wire add_2_1_i_11_n_1;
  wire add_2_1_i_12_n_1;
  wire add_2_1_i_13_n_1;
  wire add_2_1_i_14_n_1;
  wire add_2_1_i_15_n_1;
  wire add_2_1_i_16_n_1;
  wire add_2_1_i_17_n_1;
  wire add_2_1_i_18_n_1;
  wire add_2_1_i_19_n_1;
  wire add_2_1_i_1_n_1;
  wire add_2_1_i_20_n_1;
  wire add_2_1_i_21_n_1;
  wire add_2_1_i_22_n_1;
  wire add_2_1_i_23_n_1;
  wire add_2_1_i_24_n_1;
  wire add_2_1_i_25_n_1;
  wire add_2_1_i_26_n_1;
  wire add_2_1_i_27_n_1;
  wire add_2_1_i_28_n_1;
  wire add_2_1_i_29_n_1;
  wire add_2_1_i_2_n_1;
  wire add_2_1_i_30_n_1;
  wire add_2_1_i_31_n_1;
  wire add_2_1_i_32_n_1;
  wire add_2_1_i_33_n_1;
  wire add_2_1_i_34_n_1;
  wire add_2_1_i_35_n_1;
  wire add_2_1_i_36_n_1;
  wire add_2_1_i_37_n_1;
  wire add_2_1_i_38_n_1;
  wire add_2_1_i_39_n_1;
  wire add_2_1_i_3_n_1;
  wire add_2_1_i_40_n_1;
  wire add_2_1_i_41_n_1;
  wire add_2_1_i_42_n_1;
  wire add_2_1_i_43_n_1;
  wire add_2_1_i_44_n_1;
  wire add_2_1_i_45_n_1;
  wire add_2_1_i_46_n_1;
  wire add_2_1_i_47_n_1;
  wire add_2_1_i_48_n_1;
  wire add_2_1_i_49_n_1;
  wire add_2_1_i_4_n_1;
  wire add_2_1_i_50_n_1;
  wire add_2_1_i_51_n_1;
  wire add_2_1_i_52_n_1;
  wire add_2_1_i_53_n_1;
  wire add_2_1_i_54_n_1;
  wire add_2_1_i_55_n_1;
  wire add_2_1_i_56_n_1;
  wire add_2_1_i_5_n_1;
  wire add_2_1_i_6_n_1;
  wire add_2_1_i_7_n_1;
  wire add_2_1_i_8_n_1;
  wire add_2_1_i_9_n_1;
  wire add_2_2_i_10_n_1;
  wire add_2_2_i_11_n_1;
  wire add_2_2_i_12_n_1;
  wire add_2_2_i_13_n_1;
  wire add_2_2_i_14_n_1;
  wire add_2_2_i_15_n_1;
  wire add_2_2_i_16_n_1;
  wire add_2_2_i_17_n_1;
  wire add_2_2_i_18_n_1;
  wire add_2_2_i_19_n_1;
  wire add_2_2_i_1_n_1;
  wire add_2_2_i_20_n_1;
  wire add_2_2_i_21_n_1;
  wire add_2_2_i_22_n_1;
  wire add_2_2_i_23_n_1;
  wire add_2_2_i_24_n_1;
  wire add_2_2_i_25_n_1;
  wire add_2_2_i_26_n_1;
  wire add_2_2_i_27_n_1;
  wire add_2_2_i_28_n_1;
  wire add_2_2_i_29_n_1;
  wire add_2_2_i_2_n_1;
  wire add_2_2_i_30_n_1;
  wire add_2_2_i_31_n_1;
  wire add_2_2_i_32_n_1;
  wire add_2_2_i_33_n_1;
  wire add_2_2_i_34_n_1;
  wire add_2_2_i_35_n_1;
  wire add_2_2_i_36_n_1;
  wire add_2_2_i_37_n_1;
  wire add_2_2_i_38_n_1;
  wire add_2_2_i_39_n_1;
  wire add_2_2_i_3_n_1;
  wire add_2_2_i_40_n_1;
  wire add_2_2_i_41_n_1;
  wire add_2_2_i_42_n_1;
  wire add_2_2_i_43_n_1;
  wire add_2_2_i_44_n_1;
  wire add_2_2_i_45_n_1;
  wire add_2_2_i_46_n_1;
  wire add_2_2_i_47_n_1;
  wire add_2_2_i_48_n_1;
  wire add_2_2_i_49_n_1;
  wire add_2_2_i_4_n_1;
  wire add_2_2_i_50_n_1;
  wire add_2_2_i_51_n_1;
  wire add_2_2_i_52_n_1;
  wire add_2_2_i_53_n_1;
  wire add_2_2_i_54_n_1;
  wire add_2_2_i_55_n_1;
  wire add_2_2_i_56_n_1;
  wire add_2_2_i_5_n_1;
  wire add_2_2_i_6_n_1;
  wire add_2_2_i_7_n_1;
  wire add_2_2_i_8_n_1;
  wire add_2_2_i_9_n_1;
  wire add_2_3_i_10_n_1;
  wire add_2_3_i_11_n_1;
  wire add_2_3_i_12_n_1;
  wire add_2_3_i_13_n_1;
  wire add_2_3_i_14_n_1;
  wire add_2_3_i_15_n_1;
  wire add_2_3_i_16_n_1;
  wire add_2_3_i_17_n_1;
  wire add_2_3_i_18_n_1;
  wire add_2_3_i_19_n_1;
  wire add_2_3_i_1_n_1;
  wire add_2_3_i_20_n_1;
  wire add_2_3_i_21_n_1;
  wire add_2_3_i_22_n_1;
  wire add_2_3_i_23_n_1;
  wire add_2_3_i_24_n_1;
  wire add_2_3_i_25_n_1;
  wire add_2_3_i_26_n_1;
  wire add_2_3_i_27_n_1;
  wire add_2_3_i_28_n_1;
  wire add_2_3_i_29_n_1;
  wire add_2_3_i_2_n_1;
  wire add_2_3_i_30_n_1;
  wire add_2_3_i_31_n_1;
  wire add_2_3_i_32_n_1;
  wire add_2_3_i_33_n_1;
  wire add_2_3_i_34_n_1;
  wire add_2_3_i_35_n_1;
  wire add_2_3_i_36_n_1;
  wire add_2_3_i_37_n_1;
  wire add_2_3_i_38_n_1;
  wire add_2_3_i_39_n_1;
  wire add_2_3_i_3_n_1;
  wire add_2_3_i_40_n_1;
  wire add_2_3_i_41_n_1;
  wire add_2_3_i_42_n_1;
  wire add_2_3_i_43_n_1;
  wire add_2_3_i_44_n_1;
  wire add_2_3_i_45_n_1;
  wire add_2_3_i_46_n_1;
  wire add_2_3_i_47_n_1;
  wire add_2_3_i_48_n_1;
  wire add_2_3_i_49_n_1;
  wire add_2_3_i_4_n_1;
  wire add_2_3_i_50_n_1;
  wire add_2_3_i_51_n_1;
  wire add_2_3_i_52_n_1;
  wire add_2_3_i_53_n_1;
  wire add_2_3_i_54_n_1;
  wire add_2_3_i_55_n_1;
  wire add_2_3_i_56_n_1;
  wire add_2_3_i_5_n_1;
  wire add_2_3_i_6_n_1;
  wire add_2_3_i_7_n_1;
  wire add_2_3_i_8_n_1;
  wire add_2_3_i_9_n_1;
  wire add_3_0_i_10_n_1;
  wire add_3_0_i_11_n_1;
  wire add_3_0_i_12_n_1;
  wire add_3_0_i_13_n_1;
  wire add_3_0_i_14_n_1;
  wire add_3_0_i_15_n_1;
  wire add_3_0_i_16_n_1;
  wire add_3_0_i_17_n_1;
  wire add_3_0_i_18_n_1;
  wire add_3_0_i_19_n_1;
  wire add_3_0_i_1_n_1;
  wire add_3_0_i_20_n_1;
  wire add_3_0_i_21_n_1;
  wire add_3_0_i_22_n_1;
  wire add_3_0_i_23_n_1;
  wire add_3_0_i_24_n_1;
  wire add_3_0_i_25_n_1;
  wire add_3_0_i_26_n_1;
  wire add_3_0_i_27_n_1;
  wire add_3_0_i_28_n_1;
  wire add_3_0_i_29_n_1;
  wire add_3_0_i_2_n_1;
  wire add_3_0_i_30_n_1;
  wire add_3_0_i_31_n_1;
  wire add_3_0_i_32_n_1;
  wire add_3_0_i_33_n_1;
  wire add_3_0_i_34_n_1;
  wire add_3_0_i_35_n_1;
  wire add_3_0_i_36_n_1;
  wire add_3_0_i_37_n_1;
  wire add_3_0_i_38_n_1;
  wire add_3_0_i_39_n_1;
  wire add_3_0_i_3_n_1;
  wire add_3_0_i_40_n_1;
  wire add_3_0_i_41_n_1;
  wire add_3_0_i_42_n_1;
  wire add_3_0_i_43_n_1;
  wire add_3_0_i_44_n_1;
  wire add_3_0_i_45_n_1;
  wire add_3_0_i_46_n_1;
  wire add_3_0_i_47_n_1;
  wire add_3_0_i_48_n_1;
  wire add_3_0_i_49_n_1;
  wire add_3_0_i_4_n_1;
  wire add_3_0_i_50_n_1;
  wire add_3_0_i_51_n_1;
  wire add_3_0_i_52_n_1;
  wire add_3_0_i_53_n_1;
  wire add_3_0_i_54_n_1;
  wire add_3_0_i_55_n_1;
  wire add_3_0_i_56_n_1;
  wire add_3_0_i_57_n_1;
  wire add_3_0_i_58_n_1;
  wire add_3_0_i_5_n_1;
  wire add_3_0_i_6_n_1;
  wire add_3_0_i_7_n_1;
  wire add_3_0_i_8_n_1;
  wire add_3_0_i_9_n_1;
  wire add_3_1_i_10_n_1;
  wire add_3_1_i_11_n_1;
  wire add_3_1_i_12_n_1;
  wire add_3_1_i_13_n_1;
  wire add_3_1_i_14_n_1;
  wire add_3_1_i_15_n_1;
  wire add_3_1_i_16_n_1;
  wire add_3_1_i_17_n_1;
  wire add_3_1_i_18_n_1;
  wire add_3_1_i_19_n_1;
  wire add_3_1_i_1_n_1;
  wire add_3_1_i_20_n_1;
  wire add_3_1_i_21_n_1;
  wire add_3_1_i_22_n_1;
  wire add_3_1_i_23_n_1;
  wire add_3_1_i_24_n_1;
  wire add_3_1_i_25_n_1;
  wire add_3_1_i_26_n_1;
  wire add_3_1_i_27_n_1;
  wire add_3_1_i_28_n_1;
  wire add_3_1_i_29_n_1;
  wire add_3_1_i_2_n_1;
  wire add_3_1_i_30_n_1;
  wire add_3_1_i_31_n_1;
  wire add_3_1_i_32_n_1;
  wire add_3_1_i_33_n_1;
  wire add_3_1_i_34_n_1;
  wire add_3_1_i_35_n_1;
  wire add_3_1_i_36_n_1;
  wire add_3_1_i_37_n_1;
  wire add_3_1_i_38_n_1;
  wire add_3_1_i_39_n_1;
  wire add_3_1_i_3_n_1;
  wire add_3_1_i_40_n_1;
  wire add_3_1_i_41_n_1;
  wire add_3_1_i_42_n_1;
  wire add_3_1_i_43_n_1;
  wire add_3_1_i_44_n_1;
  wire add_3_1_i_45_n_1;
  wire add_3_1_i_46_n_1;
  wire add_3_1_i_47_n_1;
  wire add_3_1_i_48_n_1;
  wire add_3_1_i_49_n_1;
  wire add_3_1_i_4_n_1;
  wire add_3_1_i_50_n_1;
  wire add_3_1_i_51_n_1;
  wire add_3_1_i_52_n_1;
  wire add_3_1_i_53_n_1;
  wire add_3_1_i_54_n_1;
  wire add_3_1_i_55_n_1;
  wire add_3_1_i_56_n_1;
  wire add_3_1_i_57_n_1;
  wire add_3_1_i_58_n_1;
  wire add_3_1_i_5_n_1;
  wire add_3_1_i_6_n_1;
  wire add_3_1_i_7_n_1;
  wire add_3_1_i_8_n_1;
  wire add_3_1_i_9_n_1;
  wire add_4_i_10_n_1;
  wire add_4_i_11_n_1;
  wire add_4_i_12_n_1;
  wire add_4_i_13_n_1;
  wire add_4_i_14_n_1;
  wire add_4_i_15_n_1;
  wire add_4_i_16_n_1;
  wire add_4_i_17_n_1;
  wire add_4_i_18_n_1;
  wire add_4_i_19_n_1;
  wire add_4_i_1_n_1;
  wire add_4_i_20_n_1;
  wire add_4_i_21_n_1;
  wire add_4_i_22_n_1;
  wire add_4_i_23_n_1;
  wire add_4_i_24_n_1;
  wire add_4_i_25_n_1;
  wire add_4_i_26_n_1;
  wire add_4_i_27_n_1;
  wire add_4_i_28_n_1;
  wire add_4_i_29_n_1;
  wire add_4_i_2_n_1;
  wire add_4_i_30_n_1;
  wire add_4_i_31_n_1;
  wire add_4_i_32_n_1;
  wire add_4_i_33_n_1;
  wire add_4_i_34_n_1;
  wire add_4_i_35_n_1;
  wire add_4_i_36_n_1;
  wire add_4_i_37_n_1;
  wire add_4_i_38_n_1;
  wire add_4_i_39_n_1;
  wire add_4_i_3_n_1;
  wire add_4_i_40_n_1;
  wire add_4_i_41_n_1;
  wire add_4_i_42_n_1;
  wire add_4_i_43_n_1;
  wire add_4_i_44_n_1;
  wire add_4_i_45_n_1;
  wire add_4_i_46_n_1;
  wire add_4_i_47_n_1;
  wire add_4_i_48_n_1;
  wire add_4_i_49_n_1;
  wire add_4_i_4_n_1;
  wire add_4_i_50_n_1;
  wire add_4_i_51_n_1;
  wire add_4_i_52_n_1;
  wire add_4_i_53_n_1;
  wire add_4_i_54_n_1;
  wire add_4_i_55_n_1;
  wire add_4_i_56_n_1;
  wire add_4_i_57_n_1;
  wire add_4_i_58_n_1;
  wire add_4_i_59_n_1;
  wire add_4_i_5_n_1;
  wire add_4_i_60_n_1;
  wire add_4_i_6_n_1;
  wire add_4_i_7_n_1;
  wire add_4_i_8_n_1;
  wire add_4_i_9_n_1;
  wire ch2_win_data__0;
  wire [3:0]coef0;
  wire [13:0]coef1;
  wire [12:0]coef10;
  wire [10:0]coef11;
  wire [5:0]coef12;
  wire [6:0]coef13;
  wire [6:0]coef14;
  wire [5:0]coef15;
  wire [11:0]coef2;
  wire [7:0]coef3;
  wire [6:0]coef4;
  wire [9:0]coef5;
  wire [9:0]coef6;
  wire [6:0]coef7;
  wire [11:0]coef8;
  wire [11:0]coef9;
  wire [7:0]din;
  wire [29:29]dst_data_30;
  wire [29:0]dst_data_30w;
  wire line0_i_100_n_1;
  wire line0_i_101_n_1;
  wire line0_i_102_n_1;
  wire line0_i_139_n_1;
  wire line0_i_139_n_2;
  wire line0_i_139_n_3;
  wire line0_i_139_n_4;
  wire line0_i_140_n_1;
  wire line0_i_141_n_1;
  wire line0_i_142_n_1;
  wire line0_i_143_n_1;
  wire line0_i_144_n_1;
  wire line0_i_145_n_1;
  wire line0_i_146_n_1;
  wire line0_i_147_n_1;
  wire line0_i_148_n_1;
  wire line0_i_148_n_2;
  wire line0_i_148_n_3;
  wire line0_i_148_n_4;
  wire line0_i_149_n_1;
  wire line0_i_150_n_1;
  wire line0_i_151_n_1;
  wire line0_i_152_n_1;
  wire line0_i_153_n_1;
  wire line0_i_154_n_1;
  wire line0_i_155_n_1;
  wire line0_i_156_n_1;
  wire line0_i_189_n_1;
  wire line0_i_190_n_1;
  wire line0_i_191_n_1;
  wire line0_i_192_n_1;
  wire line0_i_193_n_1;
  wire line0_i_194_n_1;
  wire line0_i_195_n_1;
  wire line0_i_196_n_1;
  wire line0_i_197_n_1;
  wire line0_i_198_n_1;
  wire line0_i_199_n_1;
  wire line0_i_200_n_1;
  wire line0_i_201_n_1;
  wire line0_i_202_n_1;
  wire line0_i_203_n_1;
  wire line0_i_204_n_1;
  wire line0_i_31_n_3;
  wire line0_i_31_n_4;
  wire line0_i_32_n_3;
  wire line0_i_32_n_4;
  wire line0_i_56_n_1;
  wire line0_i_56_n_2;
  wire line0_i_56_n_3;
  wire line0_i_56_n_4;
  wire line0_i_57_n_1;
  wire line0_i_58_n_1;
  wire line0_i_59_n_1;
  wire line0_i_60_n_1;
  wire line0_i_61_n_1;
  wire line0_i_62_n_1;
  wire line0_i_62_n_2;
  wire line0_i_62_n_3;
  wire line0_i_62_n_4;
  wire line0_i_64_n_1;
  wire line0_i_65_n_1;
  wire line0_i_66_n_1;
  wire line0_i_91_n_1;
  wire line0_i_91_n_2;
  wire line0_i_91_n_3;
  wire line0_i_91_n_4;
  wire line0_i_92_n_1;
  wire line0_i_93_n_1;
  wire line0_i_94_n_1;
  wire line0_i_95_n_1;
  wire line0_i_96_n_1;
  wire line0_i_97_n_1;
  wire line0_i_97_n_2;
  wire line0_i_97_n_3;
  wire line0_i_97_n_4;
  wire line0_i_98_n_1;
  wire line0_i_99_n_1;
  wire out_data1;
  wire out_data2;
  wire rst_n_i_IBUF;
  wire u5_0;
  wire u5_1;
  wire u5_2;
  wire u5_3;
  wire u5_4;
  wire [3:0]NLW_line0_i_139_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_148_O_UNCONNECTED;
  wire [3:3]NLW_line0_i_31_CO_UNCONNECTED;
  wire [3:0]NLW_line0_i_31_O_UNCONNECTED;
  wire [3:3]NLW_line0_i_32_CO_UNCONNECTED;
  wire [3:0]NLW_line0_i_32_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_56_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_62_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_91_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_97_O_UNCONNECTED;

  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_0
       (.A({add_1_0_i_1_n_1,add_1_0_i_2_n_1,add_1_0_i_3_n_1,add_1_0_i_4_n_1,add_1_0_i_5_n_1,add_1_0_i_6_n_1,add_1_0_i_7_n_1,add_1_0_i_8_n_1,add_1_0_i_9_n_1,add_1_0_i_10_n_1,add_1_0_i_11_n_1,add_1_0_i_12_n_1,add_1_0_i_13_n_1,add_1_0_i_14_n_1,add_1_0_i_15_n_1,add_1_0_i_16_n_1,add_1_0_i_17_n_1,add_1_0_i_18_n_1,add_1_0_i_19_n_1,add_1_0_i_20_n_1,add_1_0_i_21_n_1,add_1_0_i_22_n_1,add_1_0_i_23_n_1,add_1_0_i_24_n_1,add_1_0_i_25_n_1,add_1_0_i_26_n_1,add_1_0_i_27_n_1}),
        .B({add_1_0_i_28_n_1,add_1_0_i_29_n_1,add_1_0_i_30_n_1,add_1_0_i_31_n_1,add_1_0_i_32_n_1,add_1_0_i_33_n_1,add_1_0_i_34_n_1,add_1_0_i_35_n_1,add_1_0_i_36_n_1,add_1_0_i_37_n_1,add_1_0_i_38_n_1,add_1_0_i_39_n_1,add_1_0_i_40_n_1,add_1_0_i_41_n_1,add_1_0_i_42_n_1,add_1_0_i_43_n_1,add_1_0_i_44_n_1,add_1_0_i_45_n_1,add_1_0_i_46_n_1,add_1_0_i_47_n_1,add_1_0_i_48_n_1,add_1_0_i_49_n_1,add_1_0_i_50_n_1,add_1_0_i_51_n_1,add_1_0_i_52_n_1,add_1_0_i_53_n_1,add_1_0_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[0]_17 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [26]),
        .O(add_1_0_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [17]),
        .O(add_1_0_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [16]),
        .O(add_1_0_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [15]),
        .O(add_1_0_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [14]),
        .O(add_1_0_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [13]),
        .O(add_1_0_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [12]),
        .O(add_1_0_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [11]),
        .O(add_1_0_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [10]),
        .O(add_1_0_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [9]),
        .O(add_1_0_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [8]),
        .O(add_1_0_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [25]),
        .O(add_1_0_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [7]),
        .O(add_1_0_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [6]),
        .O(add_1_0_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [5]),
        .O(add_1_0_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [4]),
        .O(add_1_0_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [3]),
        .O(add_1_0_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [2]),
        .O(add_1_0_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [1]),
        .O(add_1_0_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [0]),
        .O(add_1_0_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [26]),
        .O(add_1_0_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [25]),
        .O(add_1_0_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [24]),
        .O(add_1_0_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [24]),
        .O(add_1_0_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [23]),
        .O(add_1_0_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [22]),
        .O(add_1_0_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [21]),
        .O(add_1_0_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [20]),
        .O(add_1_0_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [19]),
        .O(add_1_0_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [18]),
        .O(add_1_0_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [17]),
        .O(add_1_0_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [16]),
        .O(add_1_0_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [15]),
        .O(add_1_0_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [23]),
        .O(add_1_0_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [14]),
        .O(add_1_0_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [13]),
        .O(add_1_0_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [12]),
        .O(add_1_0_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [11]),
        .O(add_1_0_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [10]),
        .O(add_1_0_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [9]),
        .O(add_1_0_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [8]),
        .O(add_1_0_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [7]),
        .O(add_1_0_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [6]),
        .O(add_1_0_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [5]),
        .O(add_1_0_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [22]),
        .O(add_1_0_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [4]),
        .O(add_1_0_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [3]),
        .O(add_1_0_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [2]),
        .O(add_1_0_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [1]),
        .O(add_1_0_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_2 [0]),
        .O(add_1_0_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [21]),
        .O(add_1_0_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [20]),
        .O(add_1_0_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [19]),
        .O(add_1_0_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_1 [18]),
        .O(add_1_0_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_1
       (.A({add_1_1_i_1_n_1,add_1_1_i_2_n_1,add_1_1_i_3_n_1,add_1_1_i_4_n_1,add_1_1_i_5_n_1,add_1_1_i_6_n_1,add_1_1_i_7_n_1,add_1_1_i_8_n_1,add_1_1_i_9_n_1,add_1_1_i_10_n_1,add_1_1_i_11_n_1,add_1_1_i_12_n_1,add_1_1_i_13_n_1,add_1_1_i_14_n_1,add_1_1_i_15_n_1,add_1_1_i_16_n_1,add_1_1_i_17_n_1,add_1_1_i_18_n_1,add_1_1_i_19_n_1,add_1_1_i_20_n_1,add_1_1_i_21_n_1,add_1_1_i_22_n_1,add_1_1_i_23_n_1,add_1_1_i_24_n_1,add_1_1_i_25_n_1,add_1_1_i_26_n_1,add_1_1_i_27_n_1}),
        .B({add_1_1_i_28_n_1,add_1_1_i_29_n_1,add_1_1_i_30_n_1,add_1_1_i_31_n_1,add_1_1_i_32_n_1,add_1_1_i_33_n_1,add_1_1_i_34_n_1,add_1_1_i_35_n_1,add_1_1_i_36_n_1,add_1_1_i_37_n_1,add_1_1_i_38_n_1,add_1_1_i_39_n_1,add_1_1_i_40_n_1,add_1_1_i_41_n_1,add_1_1_i_42_n_1,add_1_1_i_43_n_1,add_1_1_i_44_n_1,add_1_1_i_45_n_1,add_1_1_i_46_n_1,add_1_1_i_47_n_1,add_1_1_i_48_n_1,add_1_1_i_49_n_1,add_1_1_i_50_n_1,add_1_1_i_51_n_1,add_1_1_i_52_n_1,add_1_1_i_53_n_1,add_1_1_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[1]_18 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [26]),
        .O(add_1_1_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [17]),
        .O(add_1_1_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [16]),
        .O(add_1_1_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [15]),
        .O(add_1_1_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [14]),
        .O(add_1_1_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [13]),
        .O(add_1_1_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [12]),
        .O(add_1_1_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [11]),
        .O(add_1_1_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [10]),
        .O(add_1_1_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [9]),
        .O(add_1_1_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [8]),
        .O(add_1_1_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [25]),
        .O(add_1_1_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [7]),
        .O(add_1_1_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [6]),
        .O(add_1_1_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [5]),
        .O(add_1_1_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [4]),
        .O(add_1_1_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [3]),
        .O(add_1_1_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [2]),
        .O(add_1_1_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [1]),
        .O(add_1_1_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [0]),
        .O(add_1_1_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [26]),
        .O(add_1_1_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [25]),
        .O(add_1_1_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [24]),
        .O(add_1_1_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [24]),
        .O(add_1_1_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [23]),
        .O(add_1_1_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [22]),
        .O(add_1_1_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [21]),
        .O(add_1_1_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [20]),
        .O(add_1_1_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [19]),
        .O(add_1_1_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [18]),
        .O(add_1_1_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [17]),
        .O(add_1_1_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [16]),
        .O(add_1_1_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [15]),
        .O(add_1_1_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [23]),
        .O(add_1_1_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [14]),
        .O(add_1_1_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [13]),
        .O(add_1_1_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [12]),
        .O(add_1_1_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [11]),
        .O(add_1_1_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [10]),
        .O(add_1_1_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [9]),
        .O(add_1_1_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [8]),
        .O(add_1_1_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [7]),
        .O(add_1_1_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [6]),
        .O(add_1_1_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [5]),
        .O(add_1_1_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [22]),
        .O(add_1_1_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [4]),
        .O(add_1_1_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [3]),
        .O(add_1_1_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [2]),
        .O(add_1_1_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [1]),
        .O(add_1_1_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_4 [0]),
        .O(add_1_1_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [21]),
        .O(add_1_1_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [20]),
        .O(add_1_1_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [19]),
        .O(add_1_1_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_3 [18]),
        .O(add_1_1_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_2
       (.A({add_1_2_i_1_n_1,add_1_2_i_2_n_1,add_1_2_i_3_n_1,add_1_2_i_4_n_1,add_1_2_i_5_n_1,add_1_2_i_6_n_1,add_1_2_i_7_n_1,add_1_2_i_8_n_1,add_1_2_i_9_n_1,add_1_2_i_10_n_1,add_1_2_i_11_n_1,add_1_2_i_12_n_1,add_1_2_i_13_n_1,add_1_2_i_14_n_1,add_1_2_i_15_n_1,add_1_2_i_16_n_1,add_1_2_i_17_n_1,add_1_2_i_18_n_1,add_1_2_i_19_n_1,add_1_2_i_20_n_1,add_1_2_i_21_n_1,add_1_2_i_22_n_1,add_1_2_i_23_n_1,add_1_2_i_24_n_1,add_1_2_i_25_n_1,add_1_2_i_26_n_1,add_1_2_i_27_n_1}),
        .B({add_1_2_i_28_n_1,add_1_2_i_29_n_1,add_1_2_i_30_n_1,add_1_2_i_31_n_1,add_1_2_i_32_n_1,add_1_2_i_33_n_1,add_1_2_i_34_n_1,add_1_2_i_35_n_1,add_1_2_i_36_n_1,add_1_2_i_37_n_1,add_1_2_i_38_n_1,add_1_2_i_39_n_1,add_1_2_i_40_n_1,add_1_2_i_41_n_1,add_1_2_i_42_n_1,add_1_2_i_43_n_1,add_1_2_i_44_n_1,add_1_2_i_45_n_1,add_1_2_i_46_n_1,add_1_2_i_47_n_1,add_1_2_i_48_n_1,add_1_2_i_49_n_1,add_1_2_i_50_n_1,add_1_2_i_51_n_1,add_1_2_i_52_n_1,add_1_2_i_53_n_1,add_1_2_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[2]_19 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [26]),
        .O(add_1_2_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [17]),
        .O(add_1_2_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [16]),
        .O(add_1_2_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [15]),
        .O(add_1_2_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [14]),
        .O(add_1_2_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [13]),
        .O(add_1_2_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [12]),
        .O(add_1_2_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [11]),
        .O(add_1_2_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [10]),
        .O(add_1_2_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [9]),
        .O(add_1_2_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [8]),
        .O(add_1_2_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [25]),
        .O(add_1_2_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [7]),
        .O(add_1_2_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [6]),
        .O(add_1_2_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [5]),
        .O(add_1_2_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [4]),
        .O(add_1_2_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [3]),
        .O(add_1_2_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [2]),
        .O(add_1_2_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [1]),
        .O(add_1_2_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [0]),
        .O(add_1_2_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [26]),
        .O(add_1_2_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [25]),
        .O(add_1_2_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [24]),
        .O(add_1_2_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [24]),
        .O(add_1_2_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [23]),
        .O(add_1_2_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [22]),
        .O(add_1_2_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [21]),
        .O(add_1_2_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [20]),
        .O(add_1_2_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [19]),
        .O(add_1_2_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [18]),
        .O(add_1_2_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [17]),
        .O(add_1_2_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [16]),
        .O(add_1_2_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [15]),
        .O(add_1_2_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [23]),
        .O(add_1_2_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [14]),
        .O(add_1_2_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [13]),
        .O(add_1_2_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [12]),
        .O(add_1_2_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [11]),
        .O(add_1_2_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [10]),
        .O(add_1_2_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [9]),
        .O(add_1_2_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [8]),
        .O(add_1_2_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [7]),
        .O(add_1_2_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [6]),
        .O(add_1_2_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [5]),
        .O(add_1_2_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [22]),
        .O(add_1_2_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [4]),
        .O(add_1_2_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [3]),
        .O(add_1_2_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [2]),
        .O(add_1_2_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [1]),
        .O(add_1_2_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_6 [0]),
        .O(add_1_2_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [21]),
        .O(add_1_2_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [20]),
        .O(add_1_2_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [19]),
        .O(add_1_2_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_5 [18]),
        .O(add_1_2_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_3
       (.A({add_1_3_i_1_n_1,add_1_3_i_2_n_1,add_1_3_i_3_n_1,add_1_3_i_4_n_1,add_1_3_i_5_n_1,add_1_3_i_6_n_1,add_1_3_i_7_n_1,add_1_3_i_8_n_1,add_1_3_i_9_n_1,add_1_3_i_10_n_1,add_1_3_i_11_n_1,add_1_3_i_12_n_1,add_1_3_i_13_n_1,add_1_3_i_14_n_1,add_1_3_i_15_n_1,add_1_3_i_16_n_1,add_1_3_i_17_n_1,add_1_3_i_18_n_1,add_1_3_i_19_n_1,add_1_3_i_20_n_1,add_1_3_i_21_n_1,add_1_3_i_22_n_1,add_1_3_i_23_n_1,add_1_3_i_24_n_1,add_1_3_i_25_n_1,add_1_3_i_26_n_1,add_1_3_i_27_n_1}),
        .B({add_1_3_i_28_n_1,add_1_3_i_29_n_1,add_1_3_i_30_n_1,add_1_3_i_31_n_1,add_1_3_i_32_n_1,add_1_3_i_33_n_1,add_1_3_i_34_n_1,add_1_3_i_35_n_1,add_1_3_i_36_n_1,add_1_3_i_37_n_1,add_1_3_i_38_n_1,add_1_3_i_39_n_1,add_1_3_i_40_n_1,add_1_3_i_41_n_1,add_1_3_i_42_n_1,add_1_3_i_43_n_1,add_1_3_i_44_n_1,add_1_3_i_45_n_1,add_1_3_i_46_n_1,add_1_3_i_47_n_1,add_1_3_i_48_n_1,add_1_3_i_49_n_1,add_1_3_i_50_n_1,add_1_3_i_51_n_1,add_1_3_i_52_n_1,add_1_3_i_53_n_1,add_1_3_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[3]_20 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [26]),
        .O(add_1_3_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [17]),
        .O(add_1_3_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [16]),
        .O(add_1_3_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [15]),
        .O(add_1_3_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [14]),
        .O(add_1_3_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [13]),
        .O(add_1_3_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [12]),
        .O(add_1_3_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [11]),
        .O(add_1_3_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [10]),
        .O(add_1_3_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [9]),
        .O(add_1_3_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [8]),
        .O(add_1_3_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [25]),
        .O(add_1_3_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [7]),
        .O(add_1_3_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [6]),
        .O(add_1_3_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [5]),
        .O(add_1_3_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [4]),
        .O(add_1_3_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [3]),
        .O(add_1_3_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [2]),
        .O(add_1_3_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [1]),
        .O(add_1_3_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [0]),
        .O(add_1_3_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [26]),
        .O(add_1_3_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [25]),
        .O(add_1_3_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [24]),
        .O(add_1_3_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [24]),
        .O(add_1_3_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [23]),
        .O(add_1_3_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [22]),
        .O(add_1_3_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [21]),
        .O(add_1_3_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [20]),
        .O(add_1_3_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [19]),
        .O(add_1_3_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [18]),
        .O(add_1_3_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [17]),
        .O(add_1_3_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [16]),
        .O(add_1_3_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [15]),
        .O(add_1_3_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [23]),
        .O(add_1_3_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [14]),
        .O(add_1_3_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [13]),
        .O(add_1_3_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [12]),
        .O(add_1_3_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [11]),
        .O(add_1_3_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [10]),
        .O(add_1_3_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [9]),
        .O(add_1_3_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [8]),
        .O(add_1_3_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [7]),
        .O(add_1_3_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [6]),
        .O(add_1_3_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [5]),
        .O(add_1_3_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [22]),
        .O(add_1_3_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [4]),
        .O(add_1_3_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [3]),
        .O(add_1_3_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [2]),
        .O(add_1_3_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [1]),
        .O(add_1_3_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_8 [0]),
        .O(add_1_3_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [21]),
        .O(add_1_3_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [20]),
        .O(add_1_3_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [19]),
        .O(add_1_3_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_7 [18]),
        .O(add_1_3_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_4
       (.A({add_1_4_i_1_n_1,add_1_4_i_2_n_1,add_1_4_i_3_n_1,add_1_4_i_4_n_1,add_1_4_i_5_n_1,add_1_4_i_6_n_1,add_1_4_i_7_n_1,add_1_4_i_8_n_1,add_1_4_i_9_n_1,add_1_4_i_10_n_1,add_1_4_i_11_n_1,add_1_4_i_12_n_1,add_1_4_i_13_n_1,add_1_4_i_14_n_1,add_1_4_i_15_n_1,add_1_4_i_16_n_1,add_1_4_i_17_n_1,add_1_4_i_18_n_1,add_1_4_i_19_n_1,add_1_4_i_20_n_1,add_1_4_i_21_n_1,add_1_4_i_22_n_1,add_1_4_i_23_n_1,add_1_4_i_24_n_1,add_1_4_i_25_n_1,add_1_4_i_26_n_1,add_1_4_i_27_n_1}),
        .B({add_1_4_i_28_n_1,add_1_4_i_29_n_1,add_1_4_i_30_n_1,add_1_4_i_31_n_1,add_1_4_i_32_n_1,add_1_4_i_33_n_1,add_1_4_i_34_n_1,add_1_4_i_35_n_1,add_1_4_i_36_n_1,add_1_4_i_37_n_1,add_1_4_i_38_n_1,add_1_4_i_39_n_1,add_1_4_i_40_n_1,add_1_4_i_41_n_1,add_1_4_i_42_n_1,add_1_4_i_43_n_1,add_1_4_i_44_n_1,add_1_4_i_45_n_1,add_1_4_i_46_n_1,add_1_4_i_47_n_1,add_1_4_i_48_n_1,add_1_4_i_49_n_1,add_1_4_i_50_n_1,add_1_4_i_51_n_1,add_1_4_i_52_n_1,add_1_4_i_53_n_1,add_1_4_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[4]_21 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [26]),
        .O(add_1_4_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [17]),
        .O(add_1_4_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [16]),
        .O(add_1_4_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [15]),
        .O(add_1_4_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [14]),
        .O(add_1_4_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [13]),
        .O(add_1_4_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [12]),
        .O(add_1_4_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [11]),
        .O(add_1_4_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [10]),
        .O(add_1_4_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [9]),
        .O(add_1_4_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [8]),
        .O(add_1_4_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [25]),
        .O(add_1_4_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [7]),
        .O(add_1_4_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [6]),
        .O(add_1_4_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [5]),
        .O(add_1_4_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [4]),
        .O(add_1_4_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [3]),
        .O(add_1_4_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [2]),
        .O(add_1_4_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [1]),
        .O(add_1_4_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [0]),
        .O(add_1_4_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [26]),
        .O(add_1_4_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [25]),
        .O(add_1_4_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [24]),
        .O(add_1_4_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [24]),
        .O(add_1_4_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [23]),
        .O(add_1_4_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [22]),
        .O(add_1_4_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [21]),
        .O(add_1_4_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [20]),
        .O(add_1_4_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [19]),
        .O(add_1_4_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [18]),
        .O(add_1_4_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [17]),
        .O(add_1_4_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [16]),
        .O(add_1_4_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [15]),
        .O(add_1_4_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [23]),
        .O(add_1_4_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [14]),
        .O(add_1_4_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [13]),
        .O(add_1_4_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [12]),
        .O(add_1_4_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [11]),
        .O(add_1_4_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [10]),
        .O(add_1_4_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [9]),
        .O(add_1_4_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [8]),
        .O(add_1_4_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [7]),
        .O(add_1_4_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [6]),
        .O(add_1_4_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [5]),
        .O(add_1_4_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [22]),
        .O(add_1_4_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [4]),
        .O(add_1_4_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [3]),
        .O(add_1_4_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [2]),
        .O(add_1_4_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [1]),
        .O(add_1_4_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_10 [0]),
        .O(add_1_4_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [21]),
        .O(add_1_4_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [20]),
        .O(add_1_4_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [19]),
        .O(add_1_4_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_9 [18]),
        .O(add_1_4_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_5
       (.A({add_1_5_i_1_n_1,add_1_5_i_2_n_1,add_1_5_i_3_n_1,add_1_5_i_4_n_1,add_1_5_i_5_n_1,add_1_5_i_6_n_1,add_1_5_i_7_n_1,add_1_5_i_8_n_1,add_1_5_i_9_n_1,add_1_5_i_10_n_1,add_1_5_i_11_n_1,add_1_5_i_12_n_1,add_1_5_i_13_n_1,add_1_5_i_14_n_1,add_1_5_i_15_n_1,add_1_5_i_16_n_1,add_1_5_i_17_n_1,add_1_5_i_18_n_1,add_1_5_i_19_n_1,add_1_5_i_20_n_1,add_1_5_i_21_n_1,add_1_5_i_22_n_1,add_1_5_i_23_n_1,add_1_5_i_24_n_1,add_1_5_i_25_n_1,add_1_5_i_26_n_1,add_1_5_i_27_n_1}),
        .B({add_1_5_i_28_n_1,add_1_5_i_29_n_1,add_1_5_i_30_n_1,add_1_5_i_31_n_1,add_1_5_i_32_n_1,add_1_5_i_33_n_1,add_1_5_i_34_n_1,add_1_5_i_35_n_1,add_1_5_i_36_n_1,add_1_5_i_37_n_1,add_1_5_i_38_n_1,add_1_5_i_39_n_1,add_1_5_i_40_n_1,add_1_5_i_41_n_1,add_1_5_i_42_n_1,add_1_5_i_43_n_1,add_1_5_i_44_n_1,add_1_5_i_45_n_1,add_1_5_i_46_n_1,add_1_5_i_47_n_1,add_1_5_i_48_n_1,add_1_5_i_49_n_1,add_1_5_i_50_n_1,add_1_5_i_51_n_1,add_1_5_i_52_n_1,add_1_5_i_53_n_1,add_1_5_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[5]_22 ));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [26]),
        .O(add_1_5_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [17]),
        .O(add_1_5_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [16]),
        .O(add_1_5_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [15]),
        .O(add_1_5_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [14]),
        .O(add_1_5_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [13]),
        .O(add_1_5_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [12]),
        .O(add_1_5_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [11]),
        .O(add_1_5_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [10]),
        .O(add_1_5_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [9]),
        .O(add_1_5_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [8]),
        .O(add_1_5_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [25]),
        .O(add_1_5_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [7]),
        .O(add_1_5_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [6]),
        .O(add_1_5_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [5]),
        .O(add_1_5_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [4]),
        .O(add_1_5_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [3]),
        .O(add_1_5_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [2]),
        .O(add_1_5_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [1]),
        .O(add_1_5_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [0]),
        .O(add_1_5_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [26]),
        .O(add_1_5_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [25]),
        .O(add_1_5_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [24]),
        .O(add_1_5_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [24]),
        .O(add_1_5_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [23]),
        .O(add_1_5_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [22]),
        .O(add_1_5_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [21]),
        .O(add_1_5_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [20]),
        .O(add_1_5_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [19]),
        .O(add_1_5_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [18]),
        .O(add_1_5_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [17]),
        .O(add_1_5_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [16]),
        .O(add_1_5_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [15]),
        .O(add_1_5_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [23]),
        .O(add_1_5_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [14]),
        .O(add_1_5_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [13]),
        .O(add_1_5_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [12]),
        .O(add_1_5_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [11]),
        .O(add_1_5_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [10]),
        .O(add_1_5_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [9]),
        .O(add_1_5_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [8]),
        .O(add_1_5_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [7]),
        .O(add_1_5_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [6]),
        .O(add_1_5_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [5]),
        .O(add_1_5_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [22]),
        .O(add_1_5_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [4]),
        .O(add_1_5_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [3]),
        .O(add_1_5_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [2]),
        .O(add_1_5_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [1]),
        .O(add_1_5_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_12 [0]),
        .O(add_1_5_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [21]),
        .O(add_1_5_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [20]),
        .O(add_1_5_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [19]),
        .O(add_1_5_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_11 [18]),
        .O(add_1_5_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_6
       (.A({add_1_6_i_1_n_1,add_1_6_i_2_n_1,add_1_6_i_3_n_1,add_1_6_i_4_n_1,add_1_6_i_5_n_1,add_1_6_i_6_n_1,add_1_6_i_7_n_1,add_1_6_i_8_n_1,add_1_6_i_9_n_1,add_1_6_i_10_n_1,add_1_6_i_11_n_1,add_1_6_i_12_n_1,add_1_6_i_13_n_1,add_1_6_i_14_n_1,add_1_6_i_15_n_1,add_1_6_i_16_n_1,add_1_6_i_17_n_1,add_1_6_i_18_n_1,add_1_6_i_19_n_1,add_1_6_i_20_n_1,add_1_6_i_21_n_1,add_1_6_i_22_n_1,add_1_6_i_23_n_1,add_1_6_i_24_n_1,add_1_6_i_25_n_1,add_1_6_i_26_n_1,add_1_6_i_27_n_1}),
        .B({add_1_6_i_28_n_1,add_1_6_i_29_n_1,add_1_6_i_30_n_1,add_1_6_i_31_n_1,add_1_6_i_32_n_1,add_1_6_i_33_n_1,add_1_6_i_34_n_1,add_1_6_i_35_n_1,add_1_6_i_36_n_1,add_1_6_i_37_n_1,add_1_6_i_38_n_1,add_1_6_i_39_n_1,add_1_6_i_40_n_1,add_1_6_i_41_n_1,add_1_6_i_42_n_1,add_1_6_i_43_n_1,add_1_6_i_44_n_1,add_1_6_i_45_n_1,add_1_6_i_46_n_1,add_1_6_i_47_n_1,add_1_6_i_48_n_1,add_1_6_i_49_n_1,add_1_6_i_50_n_1,add_1_6_i_51_n_1,add_1_6_i_52_n_1,add_1_6_i_53_n_1,add_1_6_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[6]_23 ));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [26]),
        .O(add_1_6_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [17]),
        .O(add_1_6_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [16]),
        .O(add_1_6_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [15]),
        .O(add_1_6_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [14]),
        .O(add_1_6_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [13]),
        .O(add_1_6_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [12]),
        .O(add_1_6_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [11]),
        .O(add_1_6_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [10]),
        .O(add_1_6_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [9]),
        .O(add_1_6_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [8]),
        .O(add_1_6_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [25]),
        .O(add_1_6_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [7]),
        .O(add_1_6_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [6]),
        .O(add_1_6_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [5]),
        .O(add_1_6_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [4]),
        .O(add_1_6_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [3]),
        .O(add_1_6_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [2]),
        .O(add_1_6_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [1]),
        .O(add_1_6_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [0]),
        .O(add_1_6_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [26]),
        .O(add_1_6_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [25]),
        .O(add_1_6_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [24]),
        .O(add_1_6_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [24]),
        .O(add_1_6_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [23]),
        .O(add_1_6_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [22]),
        .O(add_1_6_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [21]),
        .O(add_1_6_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [20]),
        .O(add_1_6_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [19]),
        .O(add_1_6_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [18]),
        .O(add_1_6_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [17]),
        .O(add_1_6_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [16]),
        .O(add_1_6_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [15]),
        .O(add_1_6_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [23]),
        .O(add_1_6_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [14]),
        .O(add_1_6_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [13]),
        .O(add_1_6_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [12]),
        .O(add_1_6_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [11]),
        .O(add_1_6_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [10]),
        .O(add_1_6_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [9]),
        .O(add_1_6_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [8]),
        .O(add_1_6_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [7]),
        .O(add_1_6_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [6]),
        .O(add_1_6_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [5]),
        .O(add_1_6_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [22]),
        .O(add_1_6_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [4]),
        .O(add_1_6_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [3]),
        .O(add_1_6_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [2]),
        .O(add_1_6_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [1]),
        .O(add_1_6_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_14 [0]),
        .O(add_1_6_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [21]),
        .O(add_1_6_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [20]),
        .O(add_1_6_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [19]),
        .O(add_1_6_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_13 [18]),
        .O(add_1_6_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_7
       (.A({add_1_7_i_1_n_1,add_1_7_i_2_n_1,add_1_7_i_3_n_1,add_1_7_i_4_n_1,add_1_7_i_5_n_1,add_1_7_i_6_n_1,add_1_7_i_7_n_1,add_1_7_i_8_n_1,add_1_7_i_9_n_1,add_1_7_i_10_n_1,add_1_7_i_11_n_1,add_1_7_i_12_n_1,add_1_7_i_13_n_1,add_1_7_i_14_n_1,add_1_7_i_15_n_1,add_1_7_i_16_n_1,add_1_7_i_17_n_1,add_1_7_i_18_n_1,add_1_7_i_19_n_1,add_1_7_i_20_n_1,add_1_7_i_21_n_1,add_1_7_i_22_n_1,add_1_7_i_23_n_1,add_1_7_i_24_n_1,add_1_7_i_25_n_1,add_1_7_i_26_n_1,add_1_7_i_27_n_1}),
        .B({add_1_7_i_28_n_1,add_1_7_i_29_n_1,add_1_7_i_30_n_1,add_1_7_i_31_n_1,add_1_7_i_32_n_1,add_1_7_i_33_n_1,add_1_7_i_34_n_1,add_1_7_i_35_n_1,add_1_7_i_36_n_1,add_1_7_i_37_n_1,add_1_7_i_38_n_1,add_1_7_i_39_n_1,add_1_7_i_40_n_1,add_1_7_i_41_n_1,add_1_7_i_42_n_1,add_1_7_i_43_n_1,add_1_7_i_44_n_1,add_1_7_i_45_n_1,add_1_7_i_46_n_1,add_1_7_i_47_n_1,add_1_7_i_48_n_1,add_1_7_i_49_n_1,add_1_7_i_50_n_1,add_1_7_i_51_n_1,add_1_7_i_52_n_1,add_1_7_i_53_n_1,add_1_7_i_54_n_1}),
        .CLK(CLK),
        .S(\L1Sw[7]_24 ));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [26]),
        .O(add_1_7_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [17]),
        .O(add_1_7_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [16]),
        .O(add_1_7_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [15]),
        .O(add_1_7_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [14]),
        .O(add_1_7_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [13]),
        .O(add_1_7_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [12]),
        .O(add_1_7_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [11]),
        .O(add_1_7_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [10]),
        .O(add_1_7_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [9]),
        .O(add_1_7_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [8]),
        .O(add_1_7_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [25]),
        .O(add_1_7_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [7]),
        .O(add_1_7_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [6]),
        .O(add_1_7_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [5]),
        .O(add_1_7_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [4]),
        .O(add_1_7_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [3]),
        .O(add_1_7_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [2]),
        .O(add_1_7_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [1]),
        .O(add_1_7_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [0]),
        .O(add_1_7_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [26]),
        .O(add_1_7_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [25]),
        .O(add_1_7_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [24]),
        .O(add_1_7_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [24]),
        .O(add_1_7_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [23]),
        .O(add_1_7_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [22]),
        .O(add_1_7_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [21]),
        .O(add_1_7_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [20]),
        .O(add_1_7_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [19]),
        .O(add_1_7_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [18]),
        .O(add_1_7_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [17]),
        .O(add_1_7_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [16]),
        .O(add_1_7_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [15]),
        .O(add_1_7_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [23]),
        .O(add_1_7_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [14]),
        .O(add_1_7_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [13]),
        .O(add_1_7_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [12]),
        .O(add_1_7_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [11]),
        .O(add_1_7_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [10]),
        .O(add_1_7_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [9]),
        .O(add_1_7_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [8]),
        .O(add_1_7_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [7]),
        .O(add_1_7_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [6]),
        .O(add_1_7_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [5]),
        .O(add_1_7_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [22]),
        .O(add_1_7_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [4]),
        .O(add_1_7_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [3]),
        .O(add_1_7_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [2]),
        .O(add_1_7_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [1]),
        .O(add_1_7_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_16 [0]),
        .O(add_1_7_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [21]),
        .O(add_1_7_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [20]),
        .O(add_1_7_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [19]),
        .O(add_1_7_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_15 [18]),
        .O(add_1_7_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_0
       (.A({add_2_0_i_1_n_1,add_2_0_i_2_n_1,add_2_0_i_3_n_1,add_2_0_i_4_n_1,add_2_0_i_5_n_1,add_2_0_i_6_n_1,add_2_0_i_7_n_1,add_2_0_i_8_n_1,add_2_0_i_9_n_1,add_2_0_i_10_n_1,add_2_0_i_11_n_1,add_2_0_i_12_n_1,add_2_0_i_13_n_1,add_2_0_i_14_n_1,add_2_0_i_15_n_1,add_2_0_i_16_n_1,add_2_0_i_17_n_1,add_2_0_i_18_n_1,add_2_0_i_19_n_1,add_2_0_i_20_n_1,add_2_0_i_21_n_1,add_2_0_i_22_n_1,add_2_0_i_23_n_1,add_2_0_i_24_n_1,add_2_0_i_25_n_1,add_2_0_i_26_n_1,add_2_0_i_27_n_1,add_2_0_i_28_n_1}),
        .B({add_2_0_i_29_n_1,add_2_0_i_30_n_1,add_2_0_i_31_n_1,add_2_0_i_32_n_1,add_2_0_i_33_n_1,add_2_0_i_34_n_1,add_2_0_i_35_n_1,add_2_0_i_36_n_1,add_2_0_i_37_n_1,add_2_0_i_38_n_1,add_2_0_i_39_n_1,add_2_0_i_40_n_1,add_2_0_i_41_n_1,add_2_0_i_42_n_1,add_2_0_i_43_n_1,add_2_0_i_44_n_1,add_2_0_i_45_n_1,add_2_0_i_46_n_1,add_2_0_i_47_n_1,add_2_0_i_48_n_1,add_2_0_i_49_n_1,add_2_0_i_50_n_1,add_2_0_i_51_n_1,add_2_0_i_52_n_1,add_2_0_i_53_n_1,add_2_0_i_54_n_1,add_2_0_i_55_n_1,add_2_0_i_56_n_1}),
        .CLK(CLK),
        .S(\L2Sw[0]_25 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [27]),
        .O(add_2_0_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [18]),
        .O(add_2_0_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [17]),
        .O(add_2_0_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [16]),
        .O(add_2_0_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [15]),
        .O(add_2_0_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [14]),
        .O(add_2_0_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [13]),
        .O(add_2_0_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [12]),
        .O(add_2_0_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [11]),
        .O(add_2_0_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [10]),
        .O(add_2_0_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [9]),
        .O(add_2_0_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [26]),
        .O(add_2_0_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [8]),
        .O(add_2_0_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [7]),
        .O(add_2_0_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [6]),
        .O(add_2_0_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [5]),
        .O(add_2_0_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [4]),
        .O(add_2_0_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [3]),
        .O(add_2_0_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [2]),
        .O(add_2_0_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [1]),
        .O(add_2_0_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [0]),
        .O(add_2_0_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [27]),
        .O(add_2_0_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [25]),
        .O(add_2_0_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [26]),
        .O(add_2_0_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [25]),
        .O(add_2_0_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [24]),
        .O(add_2_0_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [23]),
        .O(add_2_0_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [22]),
        .O(add_2_0_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [21]),
        .O(add_2_0_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [20]),
        .O(add_2_0_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [19]),
        .O(add_2_0_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [18]),
        .O(add_2_0_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [17]),
        .O(add_2_0_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [24]),
        .O(add_2_0_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [16]),
        .O(add_2_0_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [15]),
        .O(add_2_0_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [14]),
        .O(add_2_0_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [13]),
        .O(add_2_0_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [12]),
        .O(add_2_0_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [11]),
        .O(add_2_0_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [10]),
        .O(add_2_0_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [9]),
        .O(add_2_0_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [8]),
        .O(add_2_0_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [7]),
        .O(add_2_0_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [23]),
        .O(add_2_0_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [6]),
        .O(add_2_0_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [5]),
        .O(add_2_0_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [4]),
        .O(add_2_0_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [3]),
        .O(add_2_0_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [2]),
        .O(add_2_0_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [1]),
        .O(add_2_0_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_18 [0]),
        .O(add_2_0_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [22]),
        .O(add_2_0_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [21]),
        .O(add_2_0_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [20]),
        .O(add_2_0_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_17 [19]),
        .O(add_2_0_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_1
       (.A({add_2_1_i_1_n_1,add_2_1_i_2_n_1,add_2_1_i_3_n_1,add_2_1_i_4_n_1,add_2_1_i_5_n_1,add_2_1_i_6_n_1,add_2_1_i_7_n_1,add_2_1_i_8_n_1,add_2_1_i_9_n_1,add_2_1_i_10_n_1,add_2_1_i_11_n_1,add_2_1_i_12_n_1,add_2_1_i_13_n_1,add_2_1_i_14_n_1,add_2_1_i_15_n_1,add_2_1_i_16_n_1,add_2_1_i_17_n_1,add_2_1_i_18_n_1,add_2_1_i_19_n_1,add_2_1_i_20_n_1,add_2_1_i_21_n_1,add_2_1_i_22_n_1,add_2_1_i_23_n_1,add_2_1_i_24_n_1,add_2_1_i_25_n_1,add_2_1_i_26_n_1,add_2_1_i_27_n_1,add_2_1_i_28_n_1}),
        .B({add_2_1_i_29_n_1,add_2_1_i_30_n_1,add_2_1_i_31_n_1,add_2_1_i_32_n_1,add_2_1_i_33_n_1,add_2_1_i_34_n_1,add_2_1_i_35_n_1,add_2_1_i_36_n_1,add_2_1_i_37_n_1,add_2_1_i_38_n_1,add_2_1_i_39_n_1,add_2_1_i_40_n_1,add_2_1_i_41_n_1,add_2_1_i_42_n_1,add_2_1_i_43_n_1,add_2_1_i_44_n_1,add_2_1_i_45_n_1,add_2_1_i_46_n_1,add_2_1_i_47_n_1,add_2_1_i_48_n_1,add_2_1_i_49_n_1,add_2_1_i_50_n_1,add_2_1_i_51_n_1,add_2_1_i_52_n_1,add_2_1_i_53_n_1,add_2_1_i_54_n_1,add_2_1_i_55_n_1,add_2_1_i_56_n_1}),
        .CLK(CLK),
        .S(\L2Sw[1]_26 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [27]),
        .O(add_2_1_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [18]),
        .O(add_2_1_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [17]),
        .O(add_2_1_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [16]),
        .O(add_2_1_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [15]),
        .O(add_2_1_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [14]),
        .O(add_2_1_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [13]),
        .O(add_2_1_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [12]),
        .O(add_2_1_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [11]),
        .O(add_2_1_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [10]),
        .O(add_2_1_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [9]),
        .O(add_2_1_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [26]),
        .O(add_2_1_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [8]),
        .O(add_2_1_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [7]),
        .O(add_2_1_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [6]),
        .O(add_2_1_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [5]),
        .O(add_2_1_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [4]),
        .O(add_2_1_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [3]),
        .O(add_2_1_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [2]),
        .O(add_2_1_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [1]),
        .O(add_2_1_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [0]),
        .O(add_2_1_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [27]),
        .O(add_2_1_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [25]),
        .O(add_2_1_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [26]),
        .O(add_2_1_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [25]),
        .O(add_2_1_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [24]),
        .O(add_2_1_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [23]),
        .O(add_2_1_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [22]),
        .O(add_2_1_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [21]),
        .O(add_2_1_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [20]),
        .O(add_2_1_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [19]),
        .O(add_2_1_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [18]),
        .O(add_2_1_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [17]),
        .O(add_2_1_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [24]),
        .O(add_2_1_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [16]),
        .O(add_2_1_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [15]),
        .O(add_2_1_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [14]),
        .O(add_2_1_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [13]),
        .O(add_2_1_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [12]),
        .O(add_2_1_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [11]),
        .O(add_2_1_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [10]),
        .O(add_2_1_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [9]),
        .O(add_2_1_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [8]),
        .O(add_2_1_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [7]),
        .O(add_2_1_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [23]),
        .O(add_2_1_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [6]),
        .O(add_2_1_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [5]),
        .O(add_2_1_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [4]),
        .O(add_2_1_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [3]),
        .O(add_2_1_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [2]),
        .O(add_2_1_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [1]),
        .O(add_2_1_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_20 [0]),
        .O(add_2_1_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [22]),
        .O(add_2_1_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [21]),
        .O(add_2_1_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [20]),
        .O(add_2_1_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_19 [19]),
        .O(add_2_1_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_2
       (.A({add_2_2_i_1_n_1,add_2_2_i_2_n_1,add_2_2_i_3_n_1,add_2_2_i_4_n_1,add_2_2_i_5_n_1,add_2_2_i_6_n_1,add_2_2_i_7_n_1,add_2_2_i_8_n_1,add_2_2_i_9_n_1,add_2_2_i_10_n_1,add_2_2_i_11_n_1,add_2_2_i_12_n_1,add_2_2_i_13_n_1,add_2_2_i_14_n_1,add_2_2_i_15_n_1,add_2_2_i_16_n_1,add_2_2_i_17_n_1,add_2_2_i_18_n_1,add_2_2_i_19_n_1,add_2_2_i_20_n_1,add_2_2_i_21_n_1,add_2_2_i_22_n_1,add_2_2_i_23_n_1,add_2_2_i_24_n_1,add_2_2_i_25_n_1,add_2_2_i_26_n_1,add_2_2_i_27_n_1,add_2_2_i_28_n_1}),
        .B({add_2_2_i_29_n_1,add_2_2_i_30_n_1,add_2_2_i_31_n_1,add_2_2_i_32_n_1,add_2_2_i_33_n_1,add_2_2_i_34_n_1,add_2_2_i_35_n_1,add_2_2_i_36_n_1,add_2_2_i_37_n_1,add_2_2_i_38_n_1,add_2_2_i_39_n_1,add_2_2_i_40_n_1,add_2_2_i_41_n_1,add_2_2_i_42_n_1,add_2_2_i_43_n_1,add_2_2_i_44_n_1,add_2_2_i_45_n_1,add_2_2_i_46_n_1,add_2_2_i_47_n_1,add_2_2_i_48_n_1,add_2_2_i_49_n_1,add_2_2_i_50_n_1,add_2_2_i_51_n_1,add_2_2_i_52_n_1,add_2_2_i_53_n_1,add_2_2_i_54_n_1,add_2_2_i_55_n_1,add_2_2_i_56_n_1}),
        .CLK(CLK),
        .S(\L2Sw[2]_27 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [27]),
        .O(add_2_2_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [18]),
        .O(add_2_2_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [17]),
        .O(add_2_2_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [16]),
        .O(add_2_2_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [15]),
        .O(add_2_2_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [14]),
        .O(add_2_2_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [13]),
        .O(add_2_2_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [12]),
        .O(add_2_2_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [11]),
        .O(add_2_2_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [10]),
        .O(add_2_2_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [9]),
        .O(add_2_2_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [26]),
        .O(add_2_2_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [8]),
        .O(add_2_2_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [7]),
        .O(add_2_2_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [6]),
        .O(add_2_2_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [5]),
        .O(add_2_2_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [4]),
        .O(add_2_2_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [3]),
        .O(add_2_2_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [2]),
        .O(add_2_2_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [1]),
        .O(add_2_2_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [0]),
        .O(add_2_2_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [27]),
        .O(add_2_2_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [25]),
        .O(add_2_2_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [26]),
        .O(add_2_2_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [25]),
        .O(add_2_2_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [24]),
        .O(add_2_2_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [23]),
        .O(add_2_2_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [22]),
        .O(add_2_2_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [21]),
        .O(add_2_2_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [20]),
        .O(add_2_2_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [19]),
        .O(add_2_2_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [18]),
        .O(add_2_2_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [17]),
        .O(add_2_2_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [24]),
        .O(add_2_2_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [16]),
        .O(add_2_2_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [15]),
        .O(add_2_2_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [14]),
        .O(add_2_2_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [13]),
        .O(add_2_2_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [12]),
        .O(add_2_2_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [11]),
        .O(add_2_2_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [10]),
        .O(add_2_2_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [9]),
        .O(add_2_2_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [8]),
        .O(add_2_2_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [7]),
        .O(add_2_2_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [23]),
        .O(add_2_2_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [6]),
        .O(add_2_2_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [5]),
        .O(add_2_2_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [4]),
        .O(add_2_2_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [3]),
        .O(add_2_2_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [2]),
        .O(add_2_2_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [1]),
        .O(add_2_2_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_22 [0]),
        .O(add_2_2_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [22]),
        .O(add_2_2_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [21]),
        .O(add_2_2_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [20]),
        .O(add_2_2_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_21 [19]),
        .O(add_2_2_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_3
       (.A({add_2_3_i_1_n_1,add_2_3_i_2_n_1,add_2_3_i_3_n_1,add_2_3_i_4_n_1,add_2_3_i_5_n_1,add_2_3_i_6_n_1,add_2_3_i_7_n_1,add_2_3_i_8_n_1,add_2_3_i_9_n_1,add_2_3_i_10_n_1,add_2_3_i_11_n_1,add_2_3_i_12_n_1,add_2_3_i_13_n_1,add_2_3_i_14_n_1,add_2_3_i_15_n_1,add_2_3_i_16_n_1,add_2_3_i_17_n_1,add_2_3_i_18_n_1,add_2_3_i_19_n_1,add_2_3_i_20_n_1,add_2_3_i_21_n_1,add_2_3_i_22_n_1,add_2_3_i_23_n_1,add_2_3_i_24_n_1,add_2_3_i_25_n_1,add_2_3_i_26_n_1,add_2_3_i_27_n_1,add_2_3_i_28_n_1}),
        .B({add_2_3_i_29_n_1,add_2_3_i_30_n_1,add_2_3_i_31_n_1,add_2_3_i_32_n_1,add_2_3_i_33_n_1,add_2_3_i_34_n_1,add_2_3_i_35_n_1,add_2_3_i_36_n_1,add_2_3_i_37_n_1,add_2_3_i_38_n_1,add_2_3_i_39_n_1,add_2_3_i_40_n_1,add_2_3_i_41_n_1,add_2_3_i_42_n_1,add_2_3_i_43_n_1,add_2_3_i_44_n_1,add_2_3_i_45_n_1,add_2_3_i_46_n_1,add_2_3_i_47_n_1,add_2_3_i_48_n_1,add_2_3_i_49_n_1,add_2_3_i_50_n_1,add_2_3_i_51_n_1,add_2_3_i_52_n_1,add_2_3_i_53_n_1,add_2_3_i_54_n_1,add_2_3_i_55_n_1,add_2_3_i_56_n_1}),
        .CLK(CLK),
        .S(\L2Sw[3]_28 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [27]),
        .O(add_2_3_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [18]),
        .O(add_2_3_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [17]),
        .O(add_2_3_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [16]),
        .O(add_2_3_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [15]),
        .O(add_2_3_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [14]),
        .O(add_2_3_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [13]),
        .O(add_2_3_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [12]),
        .O(add_2_3_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [11]),
        .O(add_2_3_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [10]),
        .O(add_2_3_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [9]),
        .O(add_2_3_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [26]),
        .O(add_2_3_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [8]),
        .O(add_2_3_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [7]),
        .O(add_2_3_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [6]),
        .O(add_2_3_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [5]),
        .O(add_2_3_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [4]),
        .O(add_2_3_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [3]),
        .O(add_2_3_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [2]),
        .O(add_2_3_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [1]),
        .O(add_2_3_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [0]),
        .O(add_2_3_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [27]),
        .O(add_2_3_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [25]),
        .O(add_2_3_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [26]),
        .O(add_2_3_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [25]),
        .O(add_2_3_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [24]),
        .O(add_2_3_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [23]),
        .O(add_2_3_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [22]),
        .O(add_2_3_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [21]),
        .O(add_2_3_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [20]),
        .O(add_2_3_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [19]),
        .O(add_2_3_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [18]),
        .O(add_2_3_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [17]),
        .O(add_2_3_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [24]),
        .O(add_2_3_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [16]),
        .O(add_2_3_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [15]),
        .O(add_2_3_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [14]),
        .O(add_2_3_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [13]),
        .O(add_2_3_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [12]),
        .O(add_2_3_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [11]),
        .O(add_2_3_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [10]),
        .O(add_2_3_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [9]),
        .O(add_2_3_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [8]),
        .O(add_2_3_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [7]),
        .O(add_2_3_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [23]),
        .O(add_2_3_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [6]),
        .O(add_2_3_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [5]),
        .O(add_2_3_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [4]),
        .O(add_2_3_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [3]),
        .O(add_2_3_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [2]),
        .O(add_2_3_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [1]),
        .O(add_2_3_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_24 [0]),
        .O(add_2_3_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [22]),
        .O(add_2_3_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [21]),
        .O(add_2_3_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [20]),
        .O(add_2_3_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_23 [19]),
        .O(add_2_3_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_29/add_29.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_29 add_3_0
       (.A({add_3_0_i_1_n_1,add_3_0_i_2_n_1,add_3_0_i_3_n_1,add_3_0_i_4_n_1,add_3_0_i_5_n_1,add_3_0_i_6_n_1,add_3_0_i_7_n_1,add_3_0_i_8_n_1,add_3_0_i_9_n_1,add_3_0_i_10_n_1,add_3_0_i_11_n_1,add_3_0_i_12_n_1,add_3_0_i_13_n_1,add_3_0_i_14_n_1,add_3_0_i_15_n_1,add_3_0_i_16_n_1,add_3_0_i_17_n_1,add_3_0_i_18_n_1,add_3_0_i_19_n_1,add_3_0_i_20_n_1,add_3_0_i_21_n_1,add_3_0_i_22_n_1,add_3_0_i_23_n_1,add_3_0_i_24_n_1,add_3_0_i_25_n_1,add_3_0_i_26_n_1,add_3_0_i_27_n_1,add_3_0_i_28_n_1,add_3_0_i_29_n_1}),
        .B({add_3_0_i_30_n_1,add_3_0_i_31_n_1,add_3_0_i_32_n_1,add_3_0_i_33_n_1,add_3_0_i_34_n_1,add_3_0_i_35_n_1,add_3_0_i_36_n_1,add_3_0_i_37_n_1,add_3_0_i_38_n_1,add_3_0_i_39_n_1,add_3_0_i_40_n_1,add_3_0_i_41_n_1,add_3_0_i_42_n_1,add_3_0_i_43_n_1,add_3_0_i_44_n_1,add_3_0_i_45_n_1,add_3_0_i_46_n_1,add_3_0_i_47_n_1,add_3_0_i_48_n_1,add_3_0_i_49_n_1,add_3_0_i_50_n_1,add_3_0_i_51_n_1,add_3_0_i_52_n_1,add_3_0_i_53_n_1,add_3_0_i_54_n_1,add_3_0_i_55_n_1,add_3_0_i_56_n_1,add_3_0_i_57_n_1,add_3_0_i_58_n_1}),
        .CLK(CLK),
        .S(\L3Sw[0]_29 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [28]),
        .O(add_3_0_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [19]),
        .O(add_3_0_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [18]),
        .O(add_3_0_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [17]),
        .O(add_3_0_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [16]),
        .O(add_3_0_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [15]),
        .O(add_3_0_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [14]),
        .O(add_3_0_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [13]),
        .O(add_3_0_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [12]),
        .O(add_3_0_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [11]),
        .O(add_3_0_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [10]),
        .O(add_3_0_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [27]),
        .O(add_3_0_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [9]),
        .O(add_3_0_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [8]),
        .O(add_3_0_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [7]),
        .O(add_3_0_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [6]),
        .O(add_3_0_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [5]),
        .O(add_3_0_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [4]),
        .O(add_3_0_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [3]),
        .O(add_3_0_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [2]),
        .O(add_3_0_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [1]),
        .O(add_3_0_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [0]),
        .O(add_3_0_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [26]),
        .O(add_3_0_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [28]),
        .O(add_3_0_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [27]),
        .O(add_3_0_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [26]),
        .O(add_3_0_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [25]),
        .O(add_3_0_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [24]),
        .O(add_3_0_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [23]),
        .O(add_3_0_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [22]),
        .O(add_3_0_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [21]),
        .O(add_3_0_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [20]),
        .O(add_3_0_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [19]),
        .O(add_3_0_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [25]),
        .O(add_3_0_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [18]),
        .O(add_3_0_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [17]),
        .O(add_3_0_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [16]),
        .O(add_3_0_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [15]),
        .O(add_3_0_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [14]),
        .O(add_3_0_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [13]),
        .O(add_3_0_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [12]),
        .O(add_3_0_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [11]),
        .O(add_3_0_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [10]),
        .O(add_3_0_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [9]),
        .O(add_3_0_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [24]),
        .O(add_3_0_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [8]),
        .O(add_3_0_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [7]),
        .O(add_3_0_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [6]),
        .O(add_3_0_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [5]),
        .O(add_3_0_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [4]),
        .O(add_3_0_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [3]),
        .O(add_3_0_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [2]),
        .O(add_3_0_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_57
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [1]),
        .O(add_3_0_i_57_n_1));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_58
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_26 [0]),
        .O(add_3_0_i_58_n_1));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [23]),
        .O(add_3_0_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [22]),
        .O(add_3_0_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [21]),
        .O(add_3_0_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_25 [20]),
        .O(add_3_0_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_29/add_29.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_29 add_3_1
       (.A({add_3_1_i_1_n_1,add_3_1_i_2_n_1,add_3_1_i_3_n_1,add_3_1_i_4_n_1,add_3_1_i_5_n_1,add_3_1_i_6_n_1,add_3_1_i_7_n_1,add_3_1_i_8_n_1,add_3_1_i_9_n_1,add_3_1_i_10_n_1,add_3_1_i_11_n_1,add_3_1_i_12_n_1,add_3_1_i_13_n_1,add_3_1_i_14_n_1,add_3_1_i_15_n_1,add_3_1_i_16_n_1,add_3_1_i_17_n_1,add_3_1_i_18_n_1,add_3_1_i_19_n_1,add_3_1_i_20_n_1,add_3_1_i_21_n_1,add_3_1_i_22_n_1,add_3_1_i_23_n_1,add_3_1_i_24_n_1,add_3_1_i_25_n_1,add_3_1_i_26_n_1,add_3_1_i_27_n_1,add_3_1_i_28_n_1,add_3_1_i_29_n_1}),
        .B({add_3_1_i_30_n_1,add_3_1_i_31_n_1,add_3_1_i_32_n_1,add_3_1_i_33_n_1,add_3_1_i_34_n_1,add_3_1_i_35_n_1,add_3_1_i_36_n_1,add_3_1_i_37_n_1,add_3_1_i_38_n_1,add_3_1_i_39_n_1,add_3_1_i_40_n_1,add_3_1_i_41_n_1,add_3_1_i_42_n_1,add_3_1_i_43_n_1,add_3_1_i_44_n_1,add_3_1_i_45_n_1,add_3_1_i_46_n_1,add_3_1_i_47_n_1,add_3_1_i_48_n_1,add_3_1_i_49_n_1,add_3_1_i_50_n_1,add_3_1_i_51_n_1,add_3_1_i_52_n_1,add_3_1_i_53_n_1,add_3_1_i_54_n_1,add_3_1_i_55_n_1,add_3_1_i_56_n_1,add_3_1_i_57_n_1,add_3_1_i_58_n_1}),
        .CLK(CLK),
        .S(\L3Sw[1]_30 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [28]),
        .O(add_3_1_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [19]),
        .O(add_3_1_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [18]),
        .O(add_3_1_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [17]),
        .O(add_3_1_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [16]),
        .O(add_3_1_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [15]),
        .O(add_3_1_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [14]),
        .O(add_3_1_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [13]),
        .O(add_3_1_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [12]),
        .O(add_3_1_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [11]),
        .O(add_3_1_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [10]),
        .O(add_3_1_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [27]),
        .O(add_3_1_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [9]),
        .O(add_3_1_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [8]),
        .O(add_3_1_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [7]),
        .O(add_3_1_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [6]),
        .O(add_3_1_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [5]),
        .O(add_3_1_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [4]),
        .O(add_3_1_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [3]),
        .O(add_3_1_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [2]),
        .O(add_3_1_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [1]),
        .O(add_3_1_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [0]),
        .O(add_3_1_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [26]),
        .O(add_3_1_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [28]),
        .O(add_3_1_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [27]),
        .O(add_3_1_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [26]),
        .O(add_3_1_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [25]),
        .O(add_3_1_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [24]),
        .O(add_3_1_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [23]),
        .O(add_3_1_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [22]),
        .O(add_3_1_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [21]),
        .O(add_3_1_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [20]),
        .O(add_3_1_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [19]),
        .O(add_3_1_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [25]),
        .O(add_3_1_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [18]),
        .O(add_3_1_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [17]),
        .O(add_3_1_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [16]),
        .O(add_3_1_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [15]),
        .O(add_3_1_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [14]),
        .O(add_3_1_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [13]),
        .O(add_3_1_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [12]),
        .O(add_3_1_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [11]),
        .O(add_3_1_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [10]),
        .O(add_3_1_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [9]),
        .O(add_3_1_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [24]),
        .O(add_3_1_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [8]),
        .O(add_3_1_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [7]),
        .O(add_3_1_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [6]),
        .O(add_3_1_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [5]),
        .O(add_3_1_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [4]),
        .O(add_3_1_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [3]),
        .O(add_3_1_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [2]),
        .O(add_3_1_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_57
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [1]),
        .O(add_3_1_i_57_n_1));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_58
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_28 [0]),
        .O(add_3_1_i_58_n_1));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [23]),
        .O(add_3_1_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [22]),
        .O(add_3_1_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [21]),
        .O(add_3_1_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_27 [20]),
        .O(add_3_1_i_9_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_30/add_30.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_30 add_4
       (.A({add_4_i_1_n_1,add_4_i_2_n_1,add_4_i_3_n_1,add_4_i_4_n_1,add_4_i_5_n_1,add_4_i_6_n_1,add_4_i_7_n_1,add_4_i_8_n_1,add_4_i_9_n_1,add_4_i_10_n_1,add_4_i_11_n_1,add_4_i_12_n_1,add_4_i_13_n_1,add_4_i_14_n_1,add_4_i_15_n_1,add_4_i_16_n_1,add_4_i_17_n_1,add_4_i_18_n_1,add_4_i_19_n_1,add_4_i_20_n_1,add_4_i_21_n_1,add_4_i_22_n_1,add_4_i_23_n_1,add_4_i_24_n_1,add_4_i_25_n_1,add_4_i_26_n_1,add_4_i_27_n_1,add_4_i_28_n_1,add_4_i_29_n_1,add_4_i_30_n_1}),
        .B({add_4_i_31_n_1,add_4_i_32_n_1,add_4_i_33_n_1,add_4_i_34_n_1,add_4_i_35_n_1,add_4_i_36_n_1,add_4_i_37_n_1,add_4_i_38_n_1,add_4_i_39_n_1,add_4_i_40_n_1,add_4_i_41_n_1,add_4_i_42_n_1,add_4_i_43_n_1,add_4_i_44_n_1,add_4_i_45_n_1,add_4_i_46_n_1,add_4_i_47_n_1,add_4_i_48_n_1,add_4_i_49_n_1,add_4_i_50_n_1,add_4_i_51_n_1,add_4_i_52_n_1,add_4_i_53_n_1,add_4_i_54_n_1,add_4_i_55_n_1,add_4_i_56_n_1,add_4_i_57_n_1,add_4_i_58_n_1,add_4_i_59_n_1,add_4_i_60_n_1}),
        .CLK(CLK),
        .S(dst_data_30w));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_1
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [29]),
        .O(add_4_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_10
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [20]),
        .O(add_4_i_10_n_1));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_11
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [19]),
        .O(add_4_i_11_n_1));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_12
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [18]),
        .O(add_4_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_13
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [17]),
        .O(add_4_i_13_n_1));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_14
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [16]),
        .O(add_4_i_14_n_1));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_15
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [15]),
        .O(add_4_i_15_n_1));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_16
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [14]),
        .O(add_4_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_17
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [13]),
        .O(add_4_i_17_n_1));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_18
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [12]),
        .O(add_4_i_18_n_1));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_19
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [11]),
        .O(add_4_i_19_n_1));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_2
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [28]),
        .O(add_4_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_20
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [10]),
        .O(add_4_i_20_n_1));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_21
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [9]),
        .O(add_4_i_21_n_1));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_22
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [8]),
        .O(add_4_i_22_n_1));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_23
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [7]),
        .O(add_4_i_23_n_1));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_24
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [6]),
        .O(add_4_i_24_n_1));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_25
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [5]),
        .O(add_4_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_26
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [4]),
        .O(add_4_i_26_n_1));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_27
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [3]),
        .O(add_4_i_27_n_1));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_28
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [2]),
        .O(add_4_i_28_n_1));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_29
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [1]),
        .O(add_4_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_3
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [27]),
        .O(add_4_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_30
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [0]),
        .O(add_4_i_30_n_1));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_31
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [29]),
        .O(add_4_i_31_n_1));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_32
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [28]),
        .O(add_4_i_32_n_1));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_33
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [27]),
        .O(add_4_i_33_n_1));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_34
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [26]),
        .O(add_4_i_34_n_1));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_35
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [25]),
        .O(add_4_i_35_n_1));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_36
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [24]),
        .O(add_4_i_36_n_1));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_37
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [23]),
        .O(add_4_i_37_n_1));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_38
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [22]),
        .O(add_4_i_38_n_1));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_39
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [21]),
        .O(add_4_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_4
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [26]),
        .O(add_4_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_40
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [20]),
        .O(add_4_i_40_n_1));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_41
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [19]),
        .O(add_4_i_41_n_1));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_42
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [18]),
        .O(add_4_i_42_n_1));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_43
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [17]),
        .O(add_4_i_43_n_1));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_44
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [16]),
        .O(add_4_i_44_n_1));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_45
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [15]),
        .O(add_4_i_45_n_1));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_46
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [14]),
        .O(add_4_i_46_n_1));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_47
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [13]),
        .O(add_4_i_47_n_1));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_48
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [12]),
        .O(add_4_i_48_n_1));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_49
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [11]),
        .O(add_4_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_5
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [25]),
        .O(add_4_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_50
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [10]),
        .O(add_4_i_50_n_1));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_51
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [9]),
        .O(add_4_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_52
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [8]),
        .O(add_4_i_52_n_1));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_53
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [7]),
        .O(add_4_i_53_n_1));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_54
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [6]),
        .O(add_4_i_54_n_1));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_55
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [5]),
        .O(add_4_i_55_n_1));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_56
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [4]),
        .O(add_4_i_56_n_1));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_57
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [3]),
        .O(add_4_i_57_n_1));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_58
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [2]),
        .O(add_4_i_58_n_1));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_59
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [1]),
        .O(add_4_i_59_n_1));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_6
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [24]),
        .O(add_4_i_6_n_1));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_60
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_30 [0]),
        .O(add_4_i_60_n_1));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_7
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [23]),
        .O(add_4_i_7_n_1));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_8
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [22]),
        .O(add_4_i_8_n_1));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_9
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_29 [21]),
        .O(add_4_i_9_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_100
       (.I0(dst_data_30w[20]),
        .I1(dst_data_30w[21]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_100_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_101
       (.I0(dst_data_30w[18]),
        .I1(dst_data_30w[19]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_101_n_1));
  LUT3 #(
    .INIT(8'h20)) 
    line0_i_102
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_102_n_1));
  CARRY4 line0_i_139
       (.CI(1'b0),
        .CO({line0_i_139_n_1,line0_i_139_n_2,line0_i_139_n_3,line0_i_139_n_4}),
        .CYINIT(1'b1),
        .DI({line0_i_189_n_1,line0_i_190_n_1,line0_i_191_n_1,line0_i_192_n_1}),
        .O(NLW_line0_i_139_O_UNCONNECTED[3:0]),
        .S({line0_i_193_n_1,line0_i_194_n_1,line0_i_195_n_1,line0_i_196_n_1}));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_140
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_140_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_141
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_141_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_142
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_142_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_143
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_143_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_144
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_144_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_145
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_145_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_146
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_146_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_147
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_147_n_1));
  CARRY4 line0_i_148
       (.CI(1'b0),
        .CO({line0_i_148_n_1,line0_i_148_n_2,line0_i_148_n_3,line0_i_148_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_197_n_1,line0_i_198_n_1,line0_i_199_n_1,line0_i_200_n_1}),
        .O(NLW_line0_i_148_O_UNCONNECTED[3:0]),
        .S({line0_i_201_n_1,line0_i_202_n_1,line0_i_203_n_1,line0_i_204_n_1}));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_149
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_149_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_150
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_150_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_151
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_151_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_152
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_152_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_153
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_153_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_154
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_154_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_155
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_155_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_156
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_156_n_1));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_17
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[25]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[7]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_18
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[24]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[6]));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_189
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_189_n_1));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_19
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[23]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[5]));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_190
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_190_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_191
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_191_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_192
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_192_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_193
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_193_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_194
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_194_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_195
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_195_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_196
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_196_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_197
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_197_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_198
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_198_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_199
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_199_n_1));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_20
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[22]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[4]));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_200
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_200_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_201
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_201_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_202
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_202_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_203
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_203_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_204
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_204_n_1));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_21
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[21]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[3]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_22
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[20]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[2]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_23
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[19]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[1]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_24
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[18]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[0]));
  CARRY4 line0_i_31
       (.CI(line0_i_56_n_1),
        .CO({NLW_line0_i_31_CO_UNCONNECTED[3],out_data2,line0_i_31_n_3,line0_i_31_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,line0_i_57_n_1,line0_i_58_n_1,1'b0}),
        .O(NLW_line0_i_31_O_UNCONNECTED[3:0]),
        .S({1'b0,line0_i_59_n_1,line0_i_60_n_1,line0_i_61_n_1}));
  CARRY4 line0_i_32
       (.CI(line0_i_62_n_1),
        .CO({NLW_line0_i_32_CO_UNCONNECTED[3],out_data1,line0_i_32_n_3,line0_i_32_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,dst_data_30,1'b0,1'b0}),
        .O(NLW_line0_i_32_O_UNCONNECTED[3:0]),
        .S({1'b0,line0_i_64_n_1,line0_i_65_n_1,line0_i_66_n_1}));
  CARRY4 line0_i_56
       (.CI(line0_i_91_n_1),
        .CO({line0_i_56_n_1,line0_i_56_n_2,line0_i_56_n_3,line0_i_56_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,line0_i_92_n_1}),
        .O(NLW_line0_i_56_O_UNCONNECTED[3:0]),
        .S({line0_i_93_n_1,line0_i_94_n_1,line0_i_95_n_1,line0_i_96_n_1}));
  LUT3 #(
    .INIT(8'h20)) 
    line0_i_57
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_57_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_58
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_58_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_59
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_59_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_60
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_60_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_61
       (.I0(dst_data_30w[24]),
        .I1(dst_data_30w[25]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_61_n_1));
  CARRY4 line0_i_62
       (.CI(line0_i_97_n_1),
        .CO({line0_i_62_n_1,line0_i_62_n_2,line0_i_62_n_3,line0_i_62_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,line0_i_98_n_1}),
        .O(NLW_line0_i_62_O_UNCONNECTED[3:0]),
        .S({line0_i_99_n_1,line0_i_100_n_1,line0_i_101_n_1,line0_i_102_n_1}));
  LUT2 #(
    .INIT(4'h8)) 
    line0_i_63
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[29]),
        .O(dst_data_30));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_64
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_64_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_65
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_65_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_66
       (.I0(dst_data_30w[24]),
        .I1(dst_data_30w[25]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_66_n_1));
  CARRY4 line0_i_91
       (.CI(line0_i_139_n_1),
        .CO({line0_i_91_n_1,line0_i_91_n_2,line0_i_91_n_3,line0_i_91_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_140_n_1,line0_i_141_n_1,line0_i_142_n_1,line0_i_143_n_1}),
        .O(NLW_line0_i_91_O_UNCONNECTED[3:0]),
        .S({line0_i_144_n_1,line0_i_145_n_1,line0_i_146_n_1,line0_i_147_n_1}));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_92
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_92_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_93
       (.I0(dst_data_30w[22]),
        .I1(dst_data_30w[23]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_93_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_94
       (.I0(dst_data_30w[20]),
        .I1(dst_data_30w[21]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_94_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_95
       (.I0(dst_data_30w[18]),
        .I1(dst_data_30w[19]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_95_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_96
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_96_n_1));
  CARRY4 line0_i_97
       (.CI(line0_i_148_n_1),
        .CO({line0_i_97_n_1,line0_i_97_n_2,line0_i_97_n_3,line0_i_97_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_149_n_1,line0_i_150_n_1,line0_i_151_n_1,line0_i_152_n_1}),
        .O(NLW_line0_i_97_O_UNCONNECTED[3:0]),
        .S({line0_i_153_n_1,line0_i_154_n_1,line0_i_155_n_1,line0_i_156_n_1}));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_98
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_98_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_99
       (.I0(dst_data_30w[22]),
        .I1(dst_data_30w[23]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_99_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u0
       (.A(Q[127:120]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,add_1_0_i_27_0[8],coef0[3],add_1_0_i_27_0[7],coef0[2],add_1_0_i_27_0[6],coef0[1:0],add_1_0_i_27_0[5:0]}),
        .CLK(CLK),
        .P(\Pw[0]_1 ));
  LUT6 #(
    .INIT(64'h0000000500110015)) 
    u0_i_2
       (.I0(ch2_win_data__0),
        .I1(u5_0),
        .I2(u5_1),
        .I3(u5_2),
        .I4(u5_3),
        .I5(u5_4),
        .O(coef0[3]));
  LUT6 #(
    .INIT(64'h0000014000004014)) 
    u0_i_4
       (.I0(ch2_win_data__0),
        .I1(u5_4),
        .I2(u5_3),
        .I3(u5_0),
        .I4(u5_2),
        .I5(u5_1),
        .O(coef0[2]));
  LUT6 #(
    .INIT(64'h0000000000110410)) 
    u0_i_6
       (.I0(ch2_win_data__0),
        .I1(u5_4),
        .I2(u5_0),
        .I3(u5_3),
        .I4(u5_1),
        .I5(u5_2),
        .O(coef0[1]));
  LUT6 #(
    .INIT(64'h0000010400001151)) 
    u0_i_7
       (.I0(ch2_win_data__0),
        .I1(u5_0),
        .I2(u5_3),
        .I3(u5_4),
        .I4(u5_2),
        .I5(u5_1),
        .O(coef0[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u1
       (.A(Q[119:112]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef1[13:5],coef0[0],coef1[4:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[1]_2 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u10
       (.A(Q[47:40]),
        .B({1'b0,coef10[12:5],coef10[7],coef10[4:0],add_1_0_i_27_0[3:0]}),
        .CLK(CLK),
        .P(\Pw[10]_11 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u11
       (.A(Q[39:32]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef11[10:2],coef10[2],coef11[1:0],coef1[2:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[11]_12 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u12
       (.A(Q[31:24]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,coef12,coef8[2],coef9[1:0],add_1_0_i_27_0[3],coef1[1:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[12]_13 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u13
       (.A(Q[23:16]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef13,coef8[4:0],coef1[2],add_1_0_i_27_0[2:0]}),
        .CLK(CLK),
        .P(\Pw[13]_14 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u14
       (.A(Q[15:8]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef14,coef11[3:2],coef10[2],coef11[1:0],coef1[2:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[14]_15 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u15
       (.A(Q[7:0]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,coef15,coef10[2:0],add_1_0_i_27_0[3:0]}),
        .CLK(CLK),
        .P(\Pw[15]_16 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u2
       (.A(Q[111:104]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef2,coef1[2],add_1_0_i_27_0[2:0]}),
        .CLK(CLK),
        .P(\Pw[2]_3 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u3
       (.A(Q[103:96]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,coef3[7:2],coef2[2],coef3[1:0],add_1_0_i_27_0[3],coef1[1:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[3]_4 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u4
       (.A(Q[95:88]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef4,coef1[6:5],coef0[0],coef1[4:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[4]_5 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u5
       (.A(Q[87:80]),
        .B({1'b0,coef5[9:2],coef5[4],coef5[1:0],coef0[0],add_1_0_i_27_0[5:0]}),
        .CLK(CLK),
        .P(\Pw[5]_6 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u6
       (.A(Q[79:72]),
        .B({1'b0,coef6[9:2],coef6[4],coef6[1:0],coef2[2],coef3[1:0],add_1_0_i_27_0[3],coef1[1:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[6]_7 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u7
       (.A(Q[71:64]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef7,coef2[4:0],coef1[2],add_1_0_i_27_0[2:0]}),
        .CLK(CLK),
        .P(\Pw[7]_8 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u8
       (.A(Q[63:56]),
        .B({add_1_0_i_27_0[0],add_1_0_i_27_0[0],add_1_0_i_27_0[0],coef8,coef1[2],add_1_0_i_27_0[2:0]}),
        .CLK(CLK),
        .P(\Pw[8]_9 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u9
       (.A(Q[55:48]),
        .B({1'b0,coef9[11:4],coef9[6],coef9[3:2],coef8[2],coef9[1:0],add_1_0_i_27_0[3],coef1[1:0],add_1_0_i_27_0[0]}),
        .CLK(CLK),
        .P(\Pw[9]_10 ));
endmodule

(* ORIG_REF_NAME = "Bic_CAL" *) 
module Bic_CAL__xdcDup__2
   (coef2,
    coef5,
    coef6,
    coef11,
    coef1,
    coef8,
    coef9,
    coef12,
    coef13,
    coef3,
    din,
    add_1_0_i_27__0_0,
    u11_i_7_0,
    u11_i_7_1,
    u11_i_7_2,
    u11_i_7_3,
    u11_i_7_4,
    ch2_win_data__0,
    rst_n_i_IBUF,
    CLK,
    Q,
    coef0,
    add_1_0_i_54__0_0,
    add_1_1_i_27__0_0,
    add_1_1_i_54__0_0,
    coef4,
    add_1_2_i_54__0_0,
    add_1_3_i_27__0_0,
    coef7,
    add_1_4_i_27__0_0,
    add_1_4_i_54__0_0,
    coef10,
    add_1_5_i_54__0_0,
    add_1_6_i_27__0_0,
    add_1_6_i_54__0_0,
    coef14,
    coef15);
  output [3:0]coef2;
  output [4:0]coef5;
  output [0:0]coef6;
  output [1:0]coef11;
  output [2:0]coef1;
  output [3:0]coef8;
  output [2:0]coef9;
  output [0:0]coef12;
  output [2:0]coef13;
  output [0:0]coef3;
  output [7:0]din;
  input [7:0]add_1_0_i_27__0_0;
  input u11_i_7_0;
  input u11_i_7_1;
  input u11_i_7_2;
  input u11_i_7_3;
  input u11_i_7_4;
  input ch2_win_data__0;
  input rst_n_i_IBUF;
  input CLK;
  input [127:0]Q;
  input [3:0]coef0;
  input [10:0]add_1_0_i_54__0_0;
  input [8:0]add_1_1_i_27__0_0;
  input [6:0]add_1_1_i_54__0_0;
  input [6:0]coef4;
  input [4:0]add_1_2_i_54__0_0;
  input [8:0]add_1_3_i_27__0_0;
  input [6:0]coef7;
  input [7:0]add_1_4_i_27__0_0;
  input [8:0]add_1_4_i_54__0_0;
  input [12:0]coef10;
  input [8:0]add_1_5_i_54__0_0;
  input [4:0]add_1_6_i_27__0_0;
  input [3:0]add_1_6_i_54__0_0;
  input [6:0]coef14;
  input [5:0]coef15;

  wire CLK;
  wire [27:0]\L1Sw[0]_47 ;
  wire [27:0]\L1Sw[1]_48 ;
  wire [27:0]\L1Sw[2]_49 ;
  wire [27:0]\L1Sw[3]_50 ;
  wire [27:0]\L1Sw[4]_51 ;
  wire [27:0]\L1Sw[5]_52 ;
  wire [27:0]\L1Sw[6]_53 ;
  wire [27:0]\L1Sw[7]_54 ;
  wire [28:0]\L2Sw[0]_55 ;
  wire [28:0]\L2Sw[1]_56 ;
  wire [28:0]\L2Sw[2]_57 ;
  wire [28:0]\L2Sw[3]_58 ;
  wire [29:0]\L3Sw[0]_59 ;
  wire [29:0]\L3Sw[1]_60 ;
  wire [26:0]\Pw[0]_31 ;
  wire [26:0]\Pw[10]_41 ;
  wire [26:0]\Pw[11]_42 ;
  wire [26:0]\Pw[12]_43 ;
  wire [26:0]\Pw[13]_44 ;
  wire [26:0]\Pw[14]_45 ;
  wire [26:0]\Pw[15]_46 ;
  wire [26:0]\Pw[1]_32 ;
  wire [26:0]\Pw[2]_33 ;
  wire [26:0]\Pw[3]_34 ;
  wire [26:0]\Pw[4]_35 ;
  wire [26:0]\Pw[5]_36 ;
  wire [26:0]\Pw[6]_37 ;
  wire [26:0]\Pw[7]_38 ;
  wire [26:0]\Pw[8]_39 ;
  wire [26:0]\Pw[9]_40 ;
  wire [127:0]Q;
  wire add_1_0_i_10__0_n_1;
  wire add_1_0_i_11__0_n_1;
  wire add_1_0_i_12__0_n_1;
  wire add_1_0_i_13__0_n_1;
  wire add_1_0_i_14__0_n_1;
  wire add_1_0_i_15__0_n_1;
  wire add_1_0_i_16__0_n_1;
  wire add_1_0_i_17__0_n_1;
  wire add_1_0_i_18__0_n_1;
  wire add_1_0_i_19__0_n_1;
  wire add_1_0_i_1__0_n_1;
  wire add_1_0_i_20__0_n_1;
  wire add_1_0_i_21__0_n_1;
  wire add_1_0_i_22__0_n_1;
  wire add_1_0_i_23__0_n_1;
  wire add_1_0_i_24__0_n_1;
  wire add_1_0_i_25__0_n_1;
  wire add_1_0_i_26__0_n_1;
  wire [7:0]add_1_0_i_27__0_0;
  wire add_1_0_i_27__0_n_1;
  wire add_1_0_i_28__0_n_1;
  wire add_1_0_i_29__0_n_1;
  wire add_1_0_i_2__0_n_1;
  wire add_1_0_i_30__0_n_1;
  wire add_1_0_i_31__0_n_1;
  wire add_1_0_i_32__0_n_1;
  wire add_1_0_i_33__0_n_1;
  wire add_1_0_i_34__0_n_1;
  wire add_1_0_i_35__0_n_1;
  wire add_1_0_i_36__0_n_1;
  wire add_1_0_i_37__0_n_1;
  wire add_1_0_i_38__0_n_1;
  wire add_1_0_i_39__0_n_1;
  wire add_1_0_i_3__0_n_1;
  wire add_1_0_i_40__0_n_1;
  wire add_1_0_i_41__0_n_1;
  wire add_1_0_i_42__0_n_1;
  wire add_1_0_i_43__0_n_1;
  wire add_1_0_i_44__0_n_1;
  wire add_1_0_i_45__0_n_1;
  wire add_1_0_i_46__0_n_1;
  wire add_1_0_i_47__0_n_1;
  wire add_1_0_i_48__0_n_1;
  wire add_1_0_i_49__0_n_1;
  wire add_1_0_i_4__0_n_1;
  wire add_1_0_i_50__0_n_1;
  wire add_1_0_i_51__0_n_1;
  wire add_1_0_i_52__0_n_1;
  wire add_1_0_i_53__0_n_1;
  wire [10:0]add_1_0_i_54__0_0;
  wire add_1_0_i_54__0_n_1;
  wire add_1_0_i_5__0_n_1;
  wire add_1_0_i_6__0_n_1;
  wire add_1_0_i_7__0_n_1;
  wire add_1_0_i_8__0_n_1;
  wire add_1_0_i_9__0_n_1;
  wire add_1_1_i_10__0_n_1;
  wire add_1_1_i_11__0_n_1;
  wire add_1_1_i_12__0_n_1;
  wire add_1_1_i_13__0_n_1;
  wire add_1_1_i_14__0_n_1;
  wire add_1_1_i_15__0_n_1;
  wire add_1_1_i_16__0_n_1;
  wire add_1_1_i_17__0_n_1;
  wire add_1_1_i_18__0_n_1;
  wire add_1_1_i_19__0_n_1;
  wire add_1_1_i_1__0_n_1;
  wire add_1_1_i_20__0_n_1;
  wire add_1_1_i_21__0_n_1;
  wire add_1_1_i_22__0_n_1;
  wire add_1_1_i_23__0_n_1;
  wire add_1_1_i_24__0_n_1;
  wire add_1_1_i_25__0_n_1;
  wire add_1_1_i_26__0_n_1;
  wire [8:0]add_1_1_i_27__0_0;
  wire add_1_1_i_27__0_n_1;
  wire add_1_1_i_28__0_n_1;
  wire add_1_1_i_29__0_n_1;
  wire add_1_1_i_2__0_n_1;
  wire add_1_1_i_30__0_n_1;
  wire add_1_1_i_31__0_n_1;
  wire add_1_1_i_32__0_n_1;
  wire add_1_1_i_33__0_n_1;
  wire add_1_1_i_34__0_n_1;
  wire add_1_1_i_35__0_n_1;
  wire add_1_1_i_36__0_n_1;
  wire add_1_1_i_37__0_n_1;
  wire add_1_1_i_38__0_n_1;
  wire add_1_1_i_39__0_n_1;
  wire add_1_1_i_3__0_n_1;
  wire add_1_1_i_40__0_n_1;
  wire add_1_1_i_41__0_n_1;
  wire add_1_1_i_42__0_n_1;
  wire add_1_1_i_43__0_n_1;
  wire add_1_1_i_44__0_n_1;
  wire add_1_1_i_45__0_n_1;
  wire add_1_1_i_46__0_n_1;
  wire add_1_1_i_47__0_n_1;
  wire add_1_1_i_48__0_n_1;
  wire add_1_1_i_49__0_n_1;
  wire add_1_1_i_4__0_n_1;
  wire add_1_1_i_50__0_n_1;
  wire add_1_1_i_51__0_n_1;
  wire add_1_1_i_52__0_n_1;
  wire add_1_1_i_53__0_n_1;
  wire [6:0]add_1_1_i_54__0_0;
  wire add_1_1_i_54__0_n_1;
  wire add_1_1_i_5__0_n_1;
  wire add_1_1_i_6__0_n_1;
  wire add_1_1_i_7__0_n_1;
  wire add_1_1_i_8__0_n_1;
  wire add_1_1_i_9__0_n_1;
  wire add_1_2_i_10__0_n_1;
  wire add_1_2_i_11__0_n_1;
  wire add_1_2_i_12__0_n_1;
  wire add_1_2_i_13__0_n_1;
  wire add_1_2_i_14__0_n_1;
  wire add_1_2_i_15__0_n_1;
  wire add_1_2_i_16__0_n_1;
  wire add_1_2_i_17__0_n_1;
  wire add_1_2_i_18__0_n_1;
  wire add_1_2_i_19__0_n_1;
  wire add_1_2_i_1__0_n_1;
  wire add_1_2_i_20__0_n_1;
  wire add_1_2_i_21__0_n_1;
  wire add_1_2_i_22__0_n_1;
  wire add_1_2_i_23__0_n_1;
  wire add_1_2_i_24__0_n_1;
  wire add_1_2_i_25__0_n_1;
  wire add_1_2_i_26__0_n_1;
  wire add_1_2_i_27__0_n_1;
  wire add_1_2_i_28__0_n_1;
  wire add_1_2_i_29__0_n_1;
  wire add_1_2_i_2__0_n_1;
  wire add_1_2_i_30__0_n_1;
  wire add_1_2_i_31__0_n_1;
  wire add_1_2_i_32__0_n_1;
  wire add_1_2_i_33__0_n_1;
  wire add_1_2_i_34__0_n_1;
  wire add_1_2_i_35__0_n_1;
  wire add_1_2_i_36__0_n_1;
  wire add_1_2_i_37__0_n_1;
  wire add_1_2_i_38__0_n_1;
  wire add_1_2_i_39__0_n_1;
  wire add_1_2_i_3__0_n_1;
  wire add_1_2_i_40__0_n_1;
  wire add_1_2_i_41__0_n_1;
  wire add_1_2_i_42__0_n_1;
  wire add_1_2_i_43__0_n_1;
  wire add_1_2_i_44__0_n_1;
  wire add_1_2_i_45__0_n_1;
  wire add_1_2_i_46__0_n_1;
  wire add_1_2_i_47__0_n_1;
  wire add_1_2_i_48__0_n_1;
  wire add_1_2_i_49__0_n_1;
  wire add_1_2_i_4__0_n_1;
  wire add_1_2_i_50__0_n_1;
  wire add_1_2_i_51__0_n_1;
  wire add_1_2_i_52__0_n_1;
  wire add_1_2_i_53__0_n_1;
  wire [4:0]add_1_2_i_54__0_0;
  wire add_1_2_i_54__0_n_1;
  wire add_1_2_i_5__0_n_1;
  wire add_1_2_i_6__0_n_1;
  wire add_1_2_i_7__0_n_1;
  wire add_1_2_i_8__0_n_1;
  wire add_1_2_i_9__0_n_1;
  wire add_1_3_i_10__0_n_1;
  wire add_1_3_i_11__0_n_1;
  wire add_1_3_i_12__0_n_1;
  wire add_1_3_i_13__0_n_1;
  wire add_1_3_i_14__0_n_1;
  wire add_1_3_i_15__0_n_1;
  wire add_1_3_i_16__0_n_1;
  wire add_1_3_i_17__0_n_1;
  wire add_1_3_i_18__0_n_1;
  wire add_1_3_i_19__0_n_1;
  wire add_1_3_i_1__0_n_1;
  wire add_1_3_i_20__0_n_1;
  wire add_1_3_i_21__0_n_1;
  wire add_1_3_i_22__0_n_1;
  wire add_1_3_i_23__0_n_1;
  wire add_1_3_i_24__0_n_1;
  wire add_1_3_i_25__0_n_1;
  wire add_1_3_i_26__0_n_1;
  wire [8:0]add_1_3_i_27__0_0;
  wire add_1_3_i_27__0_n_1;
  wire add_1_3_i_28__0_n_1;
  wire add_1_3_i_29__0_n_1;
  wire add_1_3_i_2__0_n_1;
  wire add_1_3_i_30__0_n_1;
  wire add_1_3_i_31__0_n_1;
  wire add_1_3_i_32__0_n_1;
  wire add_1_3_i_33__0_n_1;
  wire add_1_3_i_34__0_n_1;
  wire add_1_3_i_35__0_n_1;
  wire add_1_3_i_36__0_n_1;
  wire add_1_3_i_37__0_n_1;
  wire add_1_3_i_38__0_n_1;
  wire add_1_3_i_39__0_n_1;
  wire add_1_3_i_3__0_n_1;
  wire add_1_3_i_40__0_n_1;
  wire add_1_3_i_41__0_n_1;
  wire add_1_3_i_42__0_n_1;
  wire add_1_3_i_43__0_n_1;
  wire add_1_3_i_44__0_n_1;
  wire add_1_3_i_45__0_n_1;
  wire add_1_3_i_46__0_n_1;
  wire add_1_3_i_47__0_n_1;
  wire add_1_3_i_48__0_n_1;
  wire add_1_3_i_49__0_n_1;
  wire add_1_3_i_4__0_n_1;
  wire add_1_3_i_50__0_n_1;
  wire add_1_3_i_51__0_n_1;
  wire add_1_3_i_52__0_n_1;
  wire add_1_3_i_53__0_n_1;
  wire add_1_3_i_54__0_n_1;
  wire add_1_3_i_5__0_n_1;
  wire add_1_3_i_6__0_n_1;
  wire add_1_3_i_7__0_n_1;
  wire add_1_3_i_8__0_n_1;
  wire add_1_3_i_9__0_n_1;
  wire add_1_4_i_10__0_n_1;
  wire add_1_4_i_11__0_n_1;
  wire add_1_4_i_12__0_n_1;
  wire add_1_4_i_13__0_n_1;
  wire add_1_4_i_14__0_n_1;
  wire add_1_4_i_15__0_n_1;
  wire add_1_4_i_16__0_n_1;
  wire add_1_4_i_17__0_n_1;
  wire add_1_4_i_18__0_n_1;
  wire add_1_4_i_19__0_n_1;
  wire add_1_4_i_1__0_n_1;
  wire add_1_4_i_20__0_n_1;
  wire add_1_4_i_21__0_n_1;
  wire add_1_4_i_22__0_n_1;
  wire add_1_4_i_23__0_n_1;
  wire add_1_4_i_24__0_n_1;
  wire add_1_4_i_25__0_n_1;
  wire add_1_4_i_26__0_n_1;
  wire [7:0]add_1_4_i_27__0_0;
  wire add_1_4_i_27__0_n_1;
  wire add_1_4_i_28__0_n_1;
  wire add_1_4_i_29__0_n_1;
  wire add_1_4_i_2__0_n_1;
  wire add_1_4_i_30__0_n_1;
  wire add_1_4_i_31__0_n_1;
  wire add_1_4_i_32__0_n_1;
  wire add_1_4_i_33__0_n_1;
  wire add_1_4_i_34__0_n_1;
  wire add_1_4_i_35__0_n_1;
  wire add_1_4_i_36__0_n_1;
  wire add_1_4_i_37__0_n_1;
  wire add_1_4_i_38__0_n_1;
  wire add_1_4_i_39__0_n_1;
  wire add_1_4_i_3__0_n_1;
  wire add_1_4_i_40__0_n_1;
  wire add_1_4_i_41__0_n_1;
  wire add_1_4_i_42__0_n_1;
  wire add_1_4_i_43__0_n_1;
  wire add_1_4_i_44__0_n_1;
  wire add_1_4_i_45__0_n_1;
  wire add_1_4_i_46__0_n_1;
  wire add_1_4_i_47__0_n_1;
  wire add_1_4_i_48__0_n_1;
  wire add_1_4_i_49__0_n_1;
  wire add_1_4_i_4__0_n_1;
  wire add_1_4_i_50__0_n_1;
  wire add_1_4_i_51__0_n_1;
  wire add_1_4_i_52__0_n_1;
  wire add_1_4_i_53__0_n_1;
  wire [8:0]add_1_4_i_54__0_0;
  wire add_1_4_i_54__0_n_1;
  wire add_1_4_i_5__0_n_1;
  wire add_1_4_i_6__0_n_1;
  wire add_1_4_i_7__0_n_1;
  wire add_1_4_i_8__0_n_1;
  wire add_1_4_i_9__0_n_1;
  wire add_1_5_i_10__0_n_1;
  wire add_1_5_i_11__0_n_1;
  wire add_1_5_i_12__0_n_1;
  wire add_1_5_i_13__0_n_1;
  wire add_1_5_i_14__0_n_1;
  wire add_1_5_i_15__0_n_1;
  wire add_1_5_i_16__0_n_1;
  wire add_1_5_i_17__0_n_1;
  wire add_1_5_i_18__0_n_1;
  wire add_1_5_i_19__0_n_1;
  wire add_1_5_i_1__0_n_1;
  wire add_1_5_i_20__0_n_1;
  wire add_1_5_i_21__0_n_1;
  wire add_1_5_i_22__0_n_1;
  wire add_1_5_i_23__0_n_1;
  wire add_1_5_i_24__0_n_1;
  wire add_1_5_i_25__0_n_1;
  wire add_1_5_i_26__0_n_1;
  wire add_1_5_i_27__0_n_1;
  wire add_1_5_i_28__0_n_1;
  wire add_1_5_i_29__0_n_1;
  wire add_1_5_i_2__0_n_1;
  wire add_1_5_i_30__0_n_1;
  wire add_1_5_i_31__0_n_1;
  wire add_1_5_i_32__0_n_1;
  wire add_1_5_i_33__0_n_1;
  wire add_1_5_i_34__0_n_1;
  wire add_1_5_i_35__0_n_1;
  wire add_1_5_i_36__0_n_1;
  wire add_1_5_i_37__0_n_1;
  wire add_1_5_i_38__0_n_1;
  wire add_1_5_i_39__0_n_1;
  wire add_1_5_i_3__0_n_1;
  wire add_1_5_i_40__0_n_1;
  wire add_1_5_i_41__0_n_1;
  wire add_1_5_i_42__0_n_1;
  wire add_1_5_i_43__0_n_1;
  wire add_1_5_i_44__0_n_1;
  wire add_1_5_i_45__0_n_1;
  wire add_1_5_i_46__0_n_1;
  wire add_1_5_i_47__0_n_1;
  wire add_1_5_i_48__0_n_1;
  wire add_1_5_i_49__0_n_1;
  wire add_1_5_i_4__0_n_1;
  wire add_1_5_i_50__0_n_1;
  wire add_1_5_i_51__0_n_1;
  wire add_1_5_i_52__0_n_1;
  wire add_1_5_i_53__0_n_1;
  wire [8:0]add_1_5_i_54__0_0;
  wire add_1_5_i_54__0_n_1;
  wire add_1_5_i_5__0_n_1;
  wire add_1_5_i_6__0_n_1;
  wire add_1_5_i_7__0_n_1;
  wire add_1_5_i_8__0_n_1;
  wire add_1_5_i_9__0_n_1;
  wire add_1_6_i_10__0_n_1;
  wire add_1_6_i_11__0_n_1;
  wire add_1_6_i_12__0_n_1;
  wire add_1_6_i_13__0_n_1;
  wire add_1_6_i_14__0_n_1;
  wire add_1_6_i_15__0_n_1;
  wire add_1_6_i_16__0_n_1;
  wire add_1_6_i_17__0_n_1;
  wire add_1_6_i_18__0_n_1;
  wire add_1_6_i_19__0_n_1;
  wire add_1_6_i_1__0_n_1;
  wire add_1_6_i_20__0_n_1;
  wire add_1_6_i_21__0_n_1;
  wire add_1_6_i_22__0_n_1;
  wire add_1_6_i_23__0_n_1;
  wire add_1_6_i_24__0_n_1;
  wire add_1_6_i_25__0_n_1;
  wire add_1_6_i_26__0_n_1;
  wire [4:0]add_1_6_i_27__0_0;
  wire add_1_6_i_27__0_n_1;
  wire add_1_6_i_28__0_n_1;
  wire add_1_6_i_29__0_n_1;
  wire add_1_6_i_2__0_n_1;
  wire add_1_6_i_30__0_n_1;
  wire add_1_6_i_31__0_n_1;
  wire add_1_6_i_32__0_n_1;
  wire add_1_6_i_33__0_n_1;
  wire add_1_6_i_34__0_n_1;
  wire add_1_6_i_35__0_n_1;
  wire add_1_6_i_36__0_n_1;
  wire add_1_6_i_37__0_n_1;
  wire add_1_6_i_38__0_n_1;
  wire add_1_6_i_39__0_n_1;
  wire add_1_6_i_3__0_n_1;
  wire add_1_6_i_40__0_n_1;
  wire add_1_6_i_41__0_n_1;
  wire add_1_6_i_42__0_n_1;
  wire add_1_6_i_43__0_n_1;
  wire add_1_6_i_44__0_n_1;
  wire add_1_6_i_45__0_n_1;
  wire add_1_6_i_46__0_n_1;
  wire add_1_6_i_47__0_n_1;
  wire add_1_6_i_48__0_n_1;
  wire add_1_6_i_49__0_n_1;
  wire add_1_6_i_4__0_n_1;
  wire add_1_6_i_50__0_n_1;
  wire add_1_6_i_51__0_n_1;
  wire add_1_6_i_52__0_n_1;
  wire add_1_6_i_53__0_n_1;
  wire [3:0]add_1_6_i_54__0_0;
  wire add_1_6_i_54__0_n_1;
  wire add_1_6_i_5__0_n_1;
  wire add_1_6_i_6__0_n_1;
  wire add_1_6_i_7__0_n_1;
  wire add_1_6_i_8__0_n_1;
  wire add_1_6_i_9__0_n_1;
  wire add_1_7_i_10__0_n_1;
  wire add_1_7_i_11__0_n_1;
  wire add_1_7_i_12__0_n_1;
  wire add_1_7_i_13__0_n_1;
  wire add_1_7_i_14__0_n_1;
  wire add_1_7_i_15__0_n_1;
  wire add_1_7_i_16__0_n_1;
  wire add_1_7_i_17__0_n_1;
  wire add_1_7_i_18__0_n_1;
  wire add_1_7_i_19__0_n_1;
  wire add_1_7_i_1__0_n_1;
  wire add_1_7_i_20__0_n_1;
  wire add_1_7_i_21__0_n_1;
  wire add_1_7_i_22__0_n_1;
  wire add_1_7_i_23__0_n_1;
  wire add_1_7_i_24__0_n_1;
  wire add_1_7_i_25__0_n_1;
  wire add_1_7_i_26__0_n_1;
  wire add_1_7_i_27__0_n_1;
  wire add_1_7_i_28__0_n_1;
  wire add_1_7_i_29__0_n_1;
  wire add_1_7_i_2__0_n_1;
  wire add_1_7_i_30__0_n_1;
  wire add_1_7_i_31__0_n_1;
  wire add_1_7_i_32__0_n_1;
  wire add_1_7_i_33__0_n_1;
  wire add_1_7_i_34__0_n_1;
  wire add_1_7_i_35__0_n_1;
  wire add_1_7_i_36__0_n_1;
  wire add_1_7_i_37__0_n_1;
  wire add_1_7_i_38__0_n_1;
  wire add_1_7_i_39__0_n_1;
  wire add_1_7_i_3__0_n_1;
  wire add_1_7_i_40__0_n_1;
  wire add_1_7_i_41__0_n_1;
  wire add_1_7_i_42__0_n_1;
  wire add_1_7_i_43__0_n_1;
  wire add_1_7_i_44__0_n_1;
  wire add_1_7_i_45__0_n_1;
  wire add_1_7_i_46__0_n_1;
  wire add_1_7_i_47__0_n_1;
  wire add_1_7_i_48__0_n_1;
  wire add_1_7_i_49__0_n_1;
  wire add_1_7_i_4__0_n_1;
  wire add_1_7_i_50__0_n_1;
  wire add_1_7_i_51__0_n_1;
  wire add_1_7_i_52__0_n_1;
  wire add_1_7_i_53__0_n_1;
  wire add_1_7_i_54__0_n_1;
  wire add_1_7_i_5__0_n_1;
  wire add_1_7_i_6__0_n_1;
  wire add_1_7_i_7__0_n_1;
  wire add_1_7_i_8__0_n_1;
  wire add_1_7_i_9__0_n_1;
  wire add_2_0_i_10__0_n_1;
  wire add_2_0_i_11__0_n_1;
  wire add_2_0_i_12__0_n_1;
  wire add_2_0_i_13__0_n_1;
  wire add_2_0_i_14__0_n_1;
  wire add_2_0_i_15__0_n_1;
  wire add_2_0_i_16__0_n_1;
  wire add_2_0_i_17__0_n_1;
  wire add_2_0_i_18__0_n_1;
  wire add_2_0_i_19__0_n_1;
  wire add_2_0_i_1__0_n_1;
  wire add_2_0_i_20__0_n_1;
  wire add_2_0_i_21__0_n_1;
  wire add_2_0_i_22__0_n_1;
  wire add_2_0_i_23__0_n_1;
  wire add_2_0_i_24__0_n_1;
  wire add_2_0_i_25__0_n_1;
  wire add_2_0_i_26__0_n_1;
  wire add_2_0_i_27__0_n_1;
  wire add_2_0_i_28__0_n_1;
  wire add_2_0_i_29__0_n_1;
  wire add_2_0_i_2__0_n_1;
  wire add_2_0_i_30__0_n_1;
  wire add_2_0_i_31__0_n_1;
  wire add_2_0_i_32__0_n_1;
  wire add_2_0_i_33__0_n_1;
  wire add_2_0_i_34__0_n_1;
  wire add_2_0_i_35__0_n_1;
  wire add_2_0_i_36__0_n_1;
  wire add_2_0_i_37__0_n_1;
  wire add_2_0_i_38__0_n_1;
  wire add_2_0_i_39__0_n_1;
  wire add_2_0_i_3__0_n_1;
  wire add_2_0_i_40__0_n_1;
  wire add_2_0_i_41__0_n_1;
  wire add_2_0_i_42__0_n_1;
  wire add_2_0_i_43__0_n_1;
  wire add_2_0_i_44__0_n_1;
  wire add_2_0_i_45__0_n_1;
  wire add_2_0_i_46__0_n_1;
  wire add_2_0_i_47__0_n_1;
  wire add_2_0_i_48__0_n_1;
  wire add_2_0_i_49__0_n_1;
  wire add_2_0_i_4__0_n_1;
  wire add_2_0_i_50__0_n_1;
  wire add_2_0_i_51__0_n_1;
  wire add_2_0_i_52__0_n_1;
  wire add_2_0_i_53__0_n_1;
  wire add_2_0_i_54__0_n_1;
  wire add_2_0_i_55__0_n_1;
  wire add_2_0_i_56__0_n_1;
  wire add_2_0_i_5__0_n_1;
  wire add_2_0_i_6__0_n_1;
  wire add_2_0_i_7__0_n_1;
  wire add_2_0_i_8__0_n_1;
  wire add_2_0_i_9__0_n_1;
  wire add_2_1_i_10__0_n_1;
  wire add_2_1_i_11__0_n_1;
  wire add_2_1_i_12__0_n_1;
  wire add_2_1_i_13__0_n_1;
  wire add_2_1_i_14__0_n_1;
  wire add_2_1_i_15__0_n_1;
  wire add_2_1_i_16__0_n_1;
  wire add_2_1_i_17__0_n_1;
  wire add_2_1_i_18__0_n_1;
  wire add_2_1_i_19__0_n_1;
  wire add_2_1_i_1__0_n_1;
  wire add_2_1_i_20__0_n_1;
  wire add_2_1_i_21__0_n_1;
  wire add_2_1_i_22__0_n_1;
  wire add_2_1_i_23__0_n_1;
  wire add_2_1_i_24__0_n_1;
  wire add_2_1_i_25__0_n_1;
  wire add_2_1_i_26__0_n_1;
  wire add_2_1_i_27__0_n_1;
  wire add_2_1_i_28__0_n_1;
  wire add_2_1_i_29__0_n_1;
  wire add_2_1_i_2__0_n_1;
  wire add_2_1_i_30__0_n_1;
  wire add_2_1_i_31__0_n_1;
  wire add_2_1_i_32__0_n_1;
  wire add_2_1_i_33__0_n_1;
  wire add_2_1_i_34__0_n_1;
  wire add_2_1_i_35__0_n_1;
  wire add_2_1_i_36__0_n_1;
  wire add_2_1_i_37__0_n_1;
  wire add_2_1_i_38__0_n_1;
  wire add_2_1_i_39__0_n_1;
  wire add_2_1_i_3__0_n_1;
  wire add_2_1_i_40__0_n_1;
  wire add_2_1_i_41__0_n_1;
  wire add_2_1_i_42__0_n_1;
  wire add_2_1_i_43__0_n_1;
  wire add_2_1_i_44__0_n_1;
  wire add_2_1_i_45__0_n_1;
  wire add_2_1_i_46__0_n_1;
  wire add_2_1_i_47__0_n_1;
  wire add_2_1_i_48__0_n_1;
  wire add_2_1_i_49__0_n_1;
  wire add_2_1_i_4__0_n_1;
  wire add_2_1_i_50__0_n_1;
  wire add_2_1_i_51__0_n_1;
  wire add_2_1_i_52__0_n_1;
  wire add_2_1_i_53__0_n_1;
  wire add_2_1_i_54__0_n_1;
  wire add_2_1_i_55__0_n_1;
  wire add_2_1_i_56__0_n_1;
  wire add_2_1_i_5__0_n_1;
  wire add_2_1_i_6__0_n_1;
  wire add_2_1_i_7__0_n_1;
  wire add_2_1_i_8__0_n_1;
  wire add_2_1_i_9__0_n_1;
  wire add_2_2_i_10__0_n_1;
  wire add_2_2_i_11__0_n_1;
  wire add_2_2_i_12__0_n_1;
  wire add_2_2_i_13__0_n_1;
  wire add_2_2_i_14__0_n_1;
  wire add_2_2_i_15__0_n_1;
  wire add_2_2_i_16__0_n_1;
  wire add_2_2_i_17__0_n_1;
  wire add_2_2_i_18__0_n_1;
  wire add_2_2_i_19__0_n_1;
  wire add_2_2_i_1__0_n_1;
  wire add_2_2_i_20__0_n_1;
  wire add_2_2_i_21__0_n_1;
  wire add_2_2_i_22__0_n_1;
  wire add_2_2_i_23__0_n_1;
  wire add_2_2_i_24__0_n_1;
  wire add_2_2_i_25__0_n_1;
  wire add_2_2_i_26__0_n_1;
  wire add_2_2_i_27__0_n_1;
  wire add_2_2_i_28__0_n_1;
  wire add_2_2_i_29__0_n_1;
  wire add_2_2_i_2__0_n_1;
  wire add_2_2_i_30__0_n_1;
  wire add_2_2_i_31__0_n_1;
  wire add_2_2_i_32__0_n_1;
  wire add_2_2_i_33__0_n_1;
  wire add_2_2_i_34__0_n_1;
  wire add_2_2_i_35__0_n_1;
  wire add_2_2_i_36__0_n_1;
  wire add_2_2_i_37__0_n_1;
  wire add_2_2_i_38__0_n_1;
  wire add_2_2_i_39__0_n_1;
  wire add_2_2_i_3__0_n_1;
  wire add_2_2_i_40__0_n_1;
  wire add_2_2_i_41__0_n_1;
  wire add_2_2_i_42__0_n_1;
  wire add_2_2_i_43__0_n_1;
  wire add_2_2_i_44__0_n_1;
  wire add_2_2_i_45__0_n_1;
  wire add_2_2_i_46__0_n_1;
  wire add_2_2_i_47__0_n_1;
  wire add_2_2_i_48__0_n_1;
  wire add_2_2_i_49__0_n_1;
  wire add_2_2_i_4__0_n_1;
  wire add_2_2_i_50__0_n_1;
  wire add_2_2_i_51__0_n_1;
  wire add_2_2_i_52__0_n_1;
  wire add_2_2_i_53__0_n_1;
  wire add_2_2_i_54__0_n_1;
  wire add_2_2_i_55__0_n_1;
  wire add_2_2_i_56__0_n_1;
  wire add_2_2_i_5__0_n_1;
  wire add_2_2_i_6__0_n_1;
  wire add_2_2_i_7__0_n_1;
  wire add_2_2_i_8__0_n_1;
  wire add_2_2_i_9__0_n_1;
  wire add_2_3_i_10__0_n_1;
  wire add_2_3_i_11__0_n_1;
  wire add_2_3_i_12__0_n_1;
  wire add_2_3_i_13__0_n_1;
  wire add_2_3_i_14__0_n_1;
  wire add_2_3_i_15__0_n_1;
  wire add_2_3_i_16__0_n_1;
  wire add_2_3_i_17__0_n_1;
  wire add_2_3_i_18__0_n_1;
  wire add_2_3_i_19__0_n_1;
  wire add_2_3_i_1__0_n_1;
  wire add_2_3_i_20__0_n_1;
  wire add_2_3_i_21__0_n_1;
  wire add_2_3_i_22__0_n_1;
  wire add_2_3_i_23__0_n_1;
  wire add_2_3_i_24__0_n_1;
  wire add_2_3_i_25__0_n_1;
  wire add_2_3_i_26__0_n_1;
  wire add_2_3_i_27__0_n_1;
  wire add_2_3_i_28__0_n_1;
  wire add_2_3_i_29__0_n_1;
  wire add_2_3_i_2__0_n_1;
  wire add_2_3_i_30__0_n_1;
  wire add_2_3_i_31__0_n_1;
  wire add_2_3_i_32__0_n_1;
  wire add_2_3_i_33__0_n_1;
  wire add_2_3_i_34__0_n_1;
  wire add_2_3_i_35__0_n_1;
  wire add_2_3_i_36__0_n_1;
  wire add_2_3_i_37__0_n_1;
  wire add_2_3_i_38__0_n_1;
  wire add_2_3_i_39__0_n_1;
  wire add_2_3_i_3__0_n_1;
  wire add_2_3_i_40__0_n_1;
  wire add_2_3_i_41__0_n_1;
  wire add_2_3_i_42__0_n_1;
  wire add_2_3_i_43__0_n_1;
  wire add_2_3_i_44__0_n_1;
  wire add_2_3_i_45__0_n_1;
  wire add_2_3_i_46__0_n_1;
  wire add_2_3_i_47__0_n_1;
  wire add_2_3_i_48__0_n_1;
  wire add_2_3_i_49__0_n_1;
  wire add_2_3_i_4__0_n_1;
  wire add_2_3_i_50__0_n_1;
  wire add_2_3_i_51__0_n_1;
  wire add_2_3_i_52__0_n_1;
  wire add_2_3_i_53__0_n_1;
  wire add_2_3_i_54__0_n_1;
  wire add_2_3_i_55__0_n_1;
  wire add_2_3_i_56__0_n_1;
  wire add_2_3_i_5__0_n_1;
  wire add_2_3_i_6__0_n_1;
  wire add_2_3_i_7__0_n_1;
  wire add_2_3_i_8__0_n_1;
  wire add_2_3_i_9__0_n_1;
  wire add_3_0_i_10__0_n_1;
  wire add_3_0_i_11__0_n_1;
  wire add_3_0_i_12__0_n_1;
  wire add_3_0_i_13__0_n_1;
  wire add_3_0_i_14__0_n_1;
  wire add_3_0_i_15__0_n_1;
  wire add_3_0_i_16__0_n_1;
  wire add_3_0_i_17__0_n_1;
  wire add_3_0_i_18__0_n_1;
  wire add_3_0_i_19__0_n_1;
  wire add_3_0_i_1__0_n_1;
  wire add_3_0_i_20__0_n_1;
  wire add_3_0_i_21__0_n_1;
  wire add_3_0_i_22__0_n_1;
  wire add_3_0_i_23__0_n_1;
  wire add_3_0_i_24__0_n_1;
  wire add_3_0_i_25__0_n_1;
  wire add_3_0_i_26__0_n_1;
  wire add_3_0_i_27__0_n_1;
  wire add_3_0_i_28__0_n_1;
  wire add_3_0_i_29__0_n_1;
  wire add_3_0_i_2__0_n_1;
  wire add_3_0_i_30__0_n_1;
  wire add_3_0_i_31__0_n_1;
  wire add_3_0_i_32__0_n_1;
  wire add_3_0_i_33__0_n_1;
  wire add_3_0_i_34__0_n_1;
  wire add_3_0_i_35__0_n_1;
  wire add_3_0_i_36__0_n_1;
  wire add_3_0_i_37__0_n_1;
  wire add_3_0_i_38__0_n_1;
  wire add_3_0_i_39__0_n_1;
  wire add_3_0_i_3__0_n_1;
  wire add_3_0_i_40__0_n_1;
  wire add_3_0_i_41__0_n_1;
  wire add_3_0_i_42__0_n_1;
  wire add_3_0_i_43__0_n_1;
  wire add_3_0_i_44__0_n_1;
  wire add_3_0_i_45__0_n_1;
  wire add_3_0_i_46__0_n_1;
  wire add_3_0_i_47__0_n_1;
  wire add_3_0_i_48__0_n_1;
  wire add_3_0_i_49__0_n_1;
  wire add_3_0_i_4__0_n_1;
  wire add_3_0_i_50__0_n_1;
  wire add_3_0_i_51__0_n_1;
  wire add_3_0_i_52__0_n_1;
  wire add_3_0_i_53__0_n_1;
  wire add_3_0_i_54__0_n_1;
  wire add_3_0_i_55__0_n_1;
  wire add_3_0_i_56__0_n_1;
  wire add_3_0_i_57__0_n_1;
  wire add_3_0_i_58__0_n_1;
  wire add_3_0_i_5__0_n_1;
  wire add_3_0_i_6__0_n_1;
  wire add_3_0_i_7__0_n_1;
  wire add_3_0_i_8__0_n_1;
  wire add_3_0_i_9__0_n_1;
  wire add_3_1_i_10__0_n_1;
  wire add_3_1_i_11__0_n_1;
  wire add_3_1_i_12__0_n_1;
  wire add_3_1_i_13__0_n_1;
  wire add_3_1_i_14__0_n_1;
  wire add_3_1_i_15__0_n_1;
  wire add_3_1_i_16__0_n_1;
  wire add_3_1_i_17__0_n_1;
  wire add_3_1_i_18__0_n_1;
  wire add_3_1_i_19__0_n_1;
  wire add_3_1_i_1__0_n_1;
  wire add_3_1_i_20__0_n_1;
  wire add_3_1_i_21__0_n_1;
  wire add_3_1_i_22__0_n_1;
  wire add_3_1_i_23__0_n_1;
  wire add_3_1_i_24__0_n_1;
  wire add_3_1_i_25__0_n_1;
  wire add_3_1_i_26__0_n_1;
  wire add_3_1_i_27__0_n_1;
  wire add_3_1_i_28__0_n_1;
  wire add_3_1_i_29__0_n_1;
  wire add_3_1_i_2__0_n_1;
  wire add_3_1_i_30__0_n_1;
  wire add_3_1_i_31__0_n_1;
  wire add_3_1_i_32__0_n_1;
  wire add_3_1_i_33__0_n_1;
  wire add_3_1_i_34__0_n_1;
  wire add_3_1_i_35__0_n_1;
  wire add_3_1_i_36__0_n_1;
  wire add_3_1_i_37__0_n_1;
  wire add_3_1_i_38__0_n_1;
  wire add_3_1_i_39__0_n_1;
  wire add_3_1_i_3__0_n_1;
  wire add_3_1_i_40__0_n_1;
  wire add_3_1_i_41__0_n_1;
  wire add_3_1_i_42__0_n_1;
  wire add_3_1_i_43__0_n_1;
  wire add_3_1_i_44__0_n_1;
  wire add_3_1_i_45__0_n_1;
  wire add_3_1_i_46__0_n_1;
  wire add_3_1_i_47__0_n_1;
  wire add_3_1_i_48__0_n_1;
  wire add_3_1_i_49__0_n_1;
  wire add_3_1_i_4__0_n_1;
  wire add_3_1_i_50__0_n_1;
  wire add_3_1_i_51__0_n_1;
  wire add_3_1_i_52__0_n_1;
  wire add_3_1_i_53__0_n_1;
  wire add_3_1_i_54__0_n_1;
  wire add_3_1_i_55__0_n_1;
  wire add_3_1_i_56__0_n_1;
  wire add_3_1_i_57__0_n_1;
  wire add_3_1_i_58__0_n_1;
  wire add_3_1_i_5__0_n_1;
  wire add_3_1_i_6__0_n_1;
  wire add_3_1_i_7__0_n_1;
  wire add_3_1_i_8__0_n_1;
  wire add_3_1_i_9__0_n_1;
  wire add_4_i_10__0_n_1;
  wire add_4_i_11__0_n_1;
  wire add_4_i_12__0_n_1;
  wire add_4_i_13__0_n_1;
  wire add_4_i_14__0_n_1;
  wire add_4_i_15__0_n_1;
  wire add_4_i_16__0_n_1;
  wire add_4_i_17__0_n_1;
  wire add_4_i_18__0_n_1;
  wire add_4_i_19__0_n_1;
  wire add_4_i_1__0_n_1;
  wire add_4_i_20__0_n_1;
  wire add_4_i_21__0_n_1;
  wire add_4_i_22__0_n_1;
  wire add_4_i_23__0_n_1;
  wire add_4_i_24__0_n_1;
  wire add_4_i_25__0_n_1;
  wire add_4_i_26__0_n_1;
  wire add_4_i_27__0_n_1;
  wire add_4_i_28__0_n_1;
  wire add_4_i_29__0_n_1;
  wire add_4_i_2__0_n_1;
  wire add_4_i_30__0_n_1;
  wire add_4_i_31__0_n_1;
  wire add_4_i_32__0_n_1;
  wire add_4_i_33__0_n_1;
  wire add_4_i_34__0_n_1;
  wire add_4_i_35__0_n_1;
  wire add_4_i_36__0_n_1;
  wire add_4_i_37__0_n_1;
  wire add_4_i_38__0_n_1;
  wire add_4_i_39__0_n_1;
  wire add_4_i_3__0_n_1;
  wire add_4_i_40__0_n_1;
  wire add_4_i_41__0_n_1;
  wire add_4_i_42__0_n_1;
  wire add_4_i_43__0_n_1;
  wire add_4_i_44__0_n_1;
  wire add_4_i_45__0_n_1;
  wire add_4_i_46__0_n_1;
  wire add_4_i_47__0_n_1;
  wire add_4_i_48__0_n_1;
  wire add_4_i_49__0_n_1;
  wire add_4_i_4__0_n_1;
  wire add_4_i_50__0_n_1;
  wire add_4_i_51__0_n_1;
  wire add_4_i_52__0_n_1;
  wire add_4_i_53__0_n_1;
  wire add_4_i_54__0_n_1;
  wire add_4_i_55__0_n_1;
  wire add_4_i_56__0_n_1;
  wire add_4_i_57__0_n_1;
  wire add_4_i_58__0_n_1;
  wire add_4_i_59__0_n_1;
  wire add_4_i_5__0_n_1;
  wire add_4_i_60__0_n_1;
  wire add_4_i_6__0_n_1;
  wire add_4_i_7__0_n_1;
  wire add_4_i_8__0_n_1;
  wire add_4_i_9__0_n_1;
  wire ch2_win_data__0;
  wire [3:0]coef0;
  wire [2:0]coef1;
  wire [12:0]coef10;
  wire [1:0]coef11;
  wire [0:0]coef12;
  wire [2:0]coef13;
  wire [6:0]coef14;
  wire [5:0]coef15;
  wire [3:0]coef2;
  wire [0:0]coef3;
  wire [6:0]coef4;
  wire [4:0]coef5;
  wire [0:0]coef6;
  wire [6:0]coef7;
  wire [3:0]coef8;
  wire [2:0]coef9;
  wire [7:0]din;
  wire [29:29]dst_data_30;
  wire [29:0]dst_data_30w;
  wire line0_i_121_n_1;
  wire line0_i_121_n_2;
  wire line0_i_121_n_3;
  wire line0_i_121_n_4;
  wire line0_i_122_n_1;
  wire line0_i_123_n_1;
  wire line0_i_124_n_1;
  wire line0_i_125_n_1;
  wire line0_i_126_n_1;
  wire line0_i_127_n_1;
  wire line0_i_128_n_1;
  wire line0_i_129_n_1;
  wire line0_i_130_n_1;
  wire line0_i_130_n_2;
  wire line0_i_130_n_3;
  wire line0_i_130_n_4;
  wire line0_i_131_n_1;
  wire line0_i_132_n_1;
  wire line0_i_133_n_1;
  wire line0_i_134_n_1;
  wire line0_i_135_n_1;
  wire line0_i_136_n_1;
  wire line0_i_137_n_1;
  wire line0_i_138_n_1;
  wire line0_i_173_n_1;
  wire line0_i_174_n_1;
  wire line0_i_175_n_1;
  wire line0_i_176_n_1;
  wire line0_i_177_n_1;
  wire line0_i_178_n_1;
  wire line0_i_179_n_1;
  wire line0_i_180_n_1;
  wire line0_i_181_n_1;
  wire line0_i_182_n_1;
  wire line0_i_183_n_1;
  wire line0_i_184_n_1;
  wire line0_i_185_n_1;
  wire line0_i_186_n_1;
  wire line0_i_187_n_1;
  wire line0_i_188_n_1;
  wire line0_i_29_n_3;
  wire line0_i_29_n_4;
  wire line0_i_30_n_3;
  wire line0_i_30_n_4;
  wire line0_i_45_n_1;
  wire line0_i_45_n_2;
  wire line0_i_45_n_3;
  wire line0_i_45_n_4;
  wire line0_i_46_n_1;
  wire line0_i_47_n_1;
  wire line0_i_48_n_1;
  wire line0_i_49_n_1;
  wire line0_i_50_n_1;
  wire line0_i_51_n_1;
  wire line0_i_51_n_2;
  wire line0_i_51_n_3;
  wire line0_i_51_n_4;
  wire line0_i_53_n_1;
  wire line0_i_54_n_1;
  wire line0_i_55_n_1;
  wire line0_i_79_n_1;
  wire line0_i_79_n_2;
  wire line0_i_79_n_3;
  wire line0_i_79_n_4;
  wire line0_i_80_n_1;
  wire line0_i_81_n_1;
  wire line0_i_82_n_1;
  wire line0_i_83_n_1;
  wire line0_i_84_n_1;
  wire line0_i_85_n_1;
  wire line0_i_85_n_2;
  wire line0_i_85_n_3;
  wire line0_i_85_n_4;
  wire line0_i_86_n_1;
  wire line0_i_87_n_1;
  wire line0_i_88_n_1;
  wire line0_i_89_n_1;
  wire line0_i_90_n_1;
  wire out_data1;
  wire out_data2;
  wire rst_n_i_IBUF;
  wire u11_i_12_n_1;
  wire u11_i_13_n_1;
  wire u11_i_7_0;
  wire u11_i_7_1;
  wire u11_i_7_2;
  wire u11_i_7_3;
  wire u11_i_7_4;
  wire [3:0]NLW_line0_i_121_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_130_O_UNCONNECTED;
  wire [3:3]NLW_line0_i_29_CO_UNCONNECTED;
  wire [3:0]NLW_line0_i_29_O_UNCONNECTED;
  wire [3:3]NLW_line0_i_30_CO_UNCONNECTED;
  wire [3:0]NLW_line0_i_30_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_45_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_51_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_79_O_UNCONNECTED;
  wire [3:0]NLW_line0_i_85_O_UNCONNECTED;

  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_0
       (.A({add_1_0_i_1__0_n_1,add_1_0_i_2__0_n_1,add_1_0_i_3__0_n_1,add_1_0_i_4__0_n_1,add_1_0_i_5__0_n_1,add_1_0_i_6__0_n_1,add_1_0_i_7__0_n_1,add_1_0_i_8__0_n_1,add_1_0_i_9__0_n_1,add_1_0_i_10__0_n_1,add_1_0_i_11__0_n_1,add_1_0_i_12__0_n_1,add_1_0_i_13__0_n_1,add_1_0_i_14__0_n_1,add_1_0_i_15__0_n_1,add_1_0_i_16__0_n_1,add_1_0_i_17__0_n_1,add_1_0_i_18__0_n_1,add_1_0_i_19__0_n_1,add_1_0_i_20__0_n_1,add_1_0_i_21__0_n_1,add_1_0_i_22__0_n_1,add_1_0_i_23__0_n_1,add_1_0_i_24__0_n_1,add_1_0_i_25__0_n_1,add_1_0_i_26__0_n_1,add_1_0_i_27__0_n_1}),
        .B({add_1_0_i_28__0_n_1,add_1_0_i_29__0_n_1,add_1_0_i_30__0_n_1,add_1_0_i_31__0_n_1,add_1_0_i_32__0_n_1,add_1_0_i_33__0_n_1,add_1_0_i_34__0_n_1,add_1_0_i_35__0_n_1,add_1_0_i_36__0_n_1,add_1_0_i_37__0_n_1,add_1_0_i_38__0_n_1,add_1_0_i_39__0_n_1,add_1_0_i_40__0_n_1,add_1_0_i_41__0_n_1,add_1_0_i_42__0_n_1,add_1_0_i_43__0_n_1,add_1_0_i_44__0_n_1,add_1_0_i_45__0_n_1,add_1_0_i_46__0_n_1,add_1_0_i_47__0_n_1,add_1_0_i_48__0_n_1,add_1_0_i_49__0_n_1,add_1_0_i_50__0_n_1,add_1_0_i_51__0_n_1,add_1_0_i_52__0_n_1,add_1_0_i_53__0_n_1,add_1_0_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[0]_47 ));
  (* SOFT_HLUTNM = "soft_lutpair677" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [17]),
        .O(add_1_0_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair677" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [16]),
        .O(add_1_0_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair676" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [15]),
        .O(add_1_0_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair676" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [14]),
        .O(add_1_0_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair675" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [13]),
        .O(add_1_0_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair675" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [12]),
        .O(add_1_0_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair674" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [11]),
        .O(add_1_0_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair674" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [10]),
        .O(add_1_0_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair673" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [9]),
        .O(add_1_0_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair673" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [8]),
        .O(add_1_0_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair682" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [26]),
        .O(add_1_0_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair672" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [7]),
        .O(add_1_0_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair672" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [6]),
        .O(add_1_0_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair671" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [5]),
        .O(add_1_0_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair671" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [4]),
        .O(add_1_0_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair670" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [3]),
        .O(add_1_0_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair670" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [2]),
        .O(add_1_0_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair669" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [1]),
        .O(add_1_0_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair669" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [0]),
        .O(add_1_0_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair695" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [26]),
        .O(add_1_0_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair695" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [25]),
        .O(add_1_0_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair681" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [25]),
        .O(add_1_0_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair694" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [24]),
        .O(add_1_0_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair694" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [23]),
        .O(add_1_0_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair693" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [22]),
        .O(add_1_0_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair693" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [21]),
        .O(add_1_0_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair692" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [20]),
        .O(add_1_0_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair692" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [19]),
        .O(add_1_0_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair691" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [18]),
        .O(add_1_0_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair691" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [17]),
        .O(add_1_0_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair690" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [16]),
        .O(add_1_0_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair690" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [15]),
        .O(add_1_0_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair681" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [24]),
        .O(add_1_0_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair689" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [14]),
        .O(add_1_0_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair689" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [13]),
        .O(add_1_0_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair688" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [12]),
        .O(add_1_0_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair688" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [11]),
        .O(add_1_0_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair687" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [10]),
        .O(add_1_0_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair687" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [9]),
        .O(add_1_0_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair686" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [8]),
        .O(add_1_0_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair686" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [7]),
        .O(add_1_0_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair685" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [6]),
        .O(add_1_0_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair685" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [5]),
        .O(add_1_0_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair680" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [23]),
        .O(add_1_0_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair684" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [4]),
        .O(add_1_0_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair684" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [3]),
        .O(add_1_0_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair683" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [2]),
        .O(add_1_0_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair683" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [1]),
        .O(add_1_0_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair682" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[1]_32 [0]),
        .O(add_1_0_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair680" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [22]),
        .O(add_1_0_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair679" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [21]),
        .O(add_1_0_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair678" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [20]),
        .O(add_1_0_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair679" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [19]),
        .O(add_1_0_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair678" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_0_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[0]_31 [18]),
        .O(add_1_0_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_1
       (.A({add_1_1_i_1__0_n_1,add_1_1_i_2__0_n_1,add_1_1_i_3__0_n_1,add_1_1_i_4__0_n_1,add_1_1_i_5__0_n_1,add_1_1_i_6__0_n_1,add_1_1_i_7__0_n_1,add_1_1_i_8__0_n_1,add_1_1_i_9__0_n_1,add_1_1_i_10__0_n_1,add_1_1_i_11__0_n_1,add_1_1_i_12__0_n_1,add_1_1_i_13__0_n_1,add_1_1_i_14__0_n_1,add_1_1_i_15__0_n_1,add_1_1_i_16__0_n_1,add_1_1_i_17__0_n_1,add_1_1_i_18__0_n_1,add_1_1_i_19__0_n_1,add_1_1_i_20__0_n_1,add_1_1_i_21__0_n_1,add_1_1_i_22__0_n_1,add_1_1_i_23__0_n_1,add_1_1_i_24__0_n_1,add_1_1_i_25__0_n_1,add_1_1_i_26__0_n_1,add_1_1_i_27__0_n_1}),
        .B({add_1_1_i_28__0_n_1,add_1_1_i_29__0_n_1,add_1_1_i_30__0_n_1,add_1_1_i_31__0_n_1,add_1_1_i_32__0_n_1,add_1_1_i_33__0_n_1,add_1_1_i_34__0_n_1,add_1_1_i_35__0_n_1,add_1_1_i_36__0_n_1,add_1_1_i_37__0_n_1,add_1_1_i_38__0_n_1,add_1_1_i_39__0_n_1,add_1_1_i_40__0_n_1,add_1_1_i_41__0_n_1,add_1_1_i_42__0_n_1,add_1_1_i_43__0_n_1,add_1_1_i_44__0_n_1,add_1_1_i_45__0_n_1,add_1_1_i_46__0_n_1,add_1_1_i_47__0_n_1,add_1_1_i_48__0_n_1,add_1_1_i_49__0_n_1,add_1_1_i_50__0_n_1,add_1_1_i_51__0_n_1,add_1_1_i_52__0_n_1,add_1_1_i_53__0_n_1,add_1_1_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[1]_48 ));
  (* SOFT_HLUTNM = "soft_lutpair704" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [17]),
        .O(add_1_1_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair704" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [16]),
        .O(add_1_1_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair703" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [15]),
        .O(add_1_1_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair703" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [14]),
        .O(add_1_1_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair702" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [13]),
        .O(add_1_1_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair702" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [12]),
        .O(add_1_1_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair701" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [11]),
        .O(add_1_1_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair701" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [10]),
        .O(add_1_1_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair700" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [9]),
        .O(add_1_1_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair700" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [8]),
        .O(add_1_1_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair709" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [26]),
        .O(add_1_1_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair699" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [7]),
        .O(add_1_1_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair699" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [6]),
        .O(add_1_1_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair698" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [5]),
        .O(add_1_1_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair698" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [4]),
        .O(add_1_1_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair697" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [3]),
        .O(add_1_1_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair697" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [2]),
        .O(add_1_1_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair696" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [1]),
        .O(add_1_1_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair696" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [0]),
        .O(add_1_1_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair722" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [26]),
        .O(add_1_1_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair722" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [25]),
        .O(add_1_1_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair708" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [25]),
        .O(add_1_1_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair721" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [24]),
        .O(add_1_1_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair721" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [23]),
        .O(add_1_1_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair720" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [22]),
        .O(add_1_1_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair720" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [21]),
        .O(add_1_1_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair719" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [20]),
        .O(add_1_1_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair719" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [19]),
        .O(add_1_1_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair718" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [18]),
        .O(add_1_1_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair718" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [17]),
        .O(add_1_1_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair717" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [16]),
        .O(add_1_1_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair717" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [15]),
        .O(add_1_1_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair708" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [24]),
        .O(add_1_1_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair716" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [14]),
        .O(add_1_1_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair716" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [13]),
        .O(add_1_1_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair715" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [12]),
        .O(add_1_1_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair715" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [11]),
        .O(add_1_1_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair714" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [10]),
        .O(add_1_1_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair714" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [9]),
        .O(add_1_1_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair713" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [8]),
        .O(add_1_1_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair713" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [7]),
        .O(add_1_1_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair712" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [6]),
        .O(add_1_1_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair712" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [5]),
        .O(add_1_1_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair707" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [23]),
        .O(add_1_1_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair711" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [4]),
        .O(add_1_1_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair711" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [3]),
        .O(add_1_1_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair710" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [2]),
        .O(add_1_1_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair710" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [1]),
        .O(add_1_1_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair709" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[3]_34 [0]),
        .O(add_1_1_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair707" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [22]),
        .O(add_1_1_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair706" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [21]),
        .O(add_1_1_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair706" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [20]),
        .O(add_1_1_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair705" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [19]),
        .O(add_1_1_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair705" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_1_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[2]_33 [18]),
        .O(add_1_1_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_2
       (.A({add_1_2_i_1__0_n_1,add_1_2_i_2__0_n_1,add_1_2_i_3__0_n_1,add_1_2_i_4__0_n_1,add_1_2_i_5__0_n_1,add_1_2_i_6__0_n_1,add_1_2_i_7__0_n_1,add_1_2_i_8__0_n_1,add_1_2_i_9__0_n_1,add_1_2_i_10__0_n_1,add_1_2_i_11__0_n_1,add_1_2_i_12__0_n_1,add_1_2_i_13__0_n_1,add_1_2_i_14__0_n_1,add_1_2_i_15__0_n_1,add_1_2_i_16__0_n_1,add_1_2_i_17__0_n_1,add_1_2_i_18__0_n_1,add_1_2_i_19__0_n_1,add_1_2_i_20__0_n_1,add_1_2_i_21__0_n_1,add_1_2_i_22__0_n_1,add_1_2_i_23__0_n_1,add_1_2_i_24__0_n_1,add_1_2_i_25__0_n_1,add_1_2_i_26__0_n_1,add_1_2_i_27__0_n_1}),
        .B({add_1_2_i_28__0_n_1,add_1_2_i_29__0_n_1,add_1_2_i_30__0_n_1,add_1_2_i_31__0_n_1,add_1_2_i_32__0_n_1,add_1_2_i_33__0_n_1,add_1_2_i_34__0_n_1,add_1_2_i_35__0_n_1,add_1_2_i_36__0_n_1,add_1_2_i_37__0_n_1,add_1_2_i_38__0_n_1,add_1_2_i_39__0_n_1,add_1_2_i_40__0_n_1,add_1_2_i_41__0_n_1,add_1_2_i_42__0_n_1,add_1_2_i_43__0_n_1,add_1_2_i_44__0_n_1,add_1_2_i_45__0_n_1,add_1_2_i_46__0_n_1,add_1_2_i_47__0_n_1,add_1_2_i_48__0_n_1,add_1_2_i_49__0_n_1,add_1_2_i_50__0_n_1,add_1_2_i_51__0_n_1,add_1_2_i_52__0_n_1,add_1_2_i_53__0_n_1,add_1_2_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[2]_49 ));
  (* SOFT_HLUTNM = "soft_lutpair731" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [17]),
        .O(add_1_2_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair731" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [16]),
        .O(add_1_2_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair730" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [15]),
        .O(add_1_2_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair730" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [14]),
        .O(add_1_2_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair729" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [13]),
        .O(add_1_2_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair729" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [12]),
        .O(add_1_2_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair728" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [11]),
        .O(add_1_2_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair728" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [10]),
        .O(add_1_2_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair727" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [9]),
        .O(add_1_2_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair727" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [8]),
        .O(add_1_2_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair736" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [26]),
        .O(add_1_2_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair726" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [7]),
        .O(add_1_2_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair726" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [6]),
        .O(add_1_2_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair725" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [5]),
        .O(add_1_2_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair725" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [4]),
        .O(add_1_2_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair724" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [3]),
        .O(add_1_2_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair724" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [2]),
        .O(add_1_2_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair723" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [1]),
        .O(add_1_2_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair723" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [0]),
        .O(add_1_2_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair749" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [26]),
        .O(add_1_2_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair749" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [25]),
        .O(add_1_2_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair735" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [25]),
        .O(add_1_2_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair748" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [24]),
        .O(add_1_2_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair748" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [23]),
        .O(add_1_2_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair747" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [22]),
        .O(add_1_2_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair747" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [21]),
        .O(add_1_2_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair746" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [20]),
        .O(add_1_2_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair746" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [19]),
        .O(add_1_2_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair745" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [18]),
        .O(add_1_2_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair745" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [17]),
        .O(add_1_2_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair744" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [16]),
        .O(add_1_2_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair744" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [15]),
        .O(add_1_2_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair735" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [24]),
        .O(add_1_2_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair743" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [14]),
        .O(add_1_2_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair743" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [13]),
        .O(add_1_2_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair742" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [12]),
        .O(add_1_2_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair742" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [11]),
        .O(add_1_2_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair741" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [10]),
        .O(add_1_2_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair741" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [9]),
        .O(add_1_2_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair740" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [8]),
        .O(add_1_2_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair740" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [7]),
        .O(add_1_2_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair739" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [6]),
        .O(add_1_2_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair739" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [5]),
        .O(add_1_2_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair734" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [23]),
        .O(add_1_2_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair738" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [4]),
        .O(add_1_2_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair738" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [3]),
        .O(add_1_2_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair737" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [2]),
        .O(add_1_2_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair737" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [1]),
        .O(add_1_2_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair736" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[5]_36 [0]),
        .O(add_1_2_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair734" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [22]),
        .O(add_1_2_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair733" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [21]),
        .O(add_1_2_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair733" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [20]),
        .O(add_1_2_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair732" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [19]),
        .O(add_1_2_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair732" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_2_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[4]_35 [18]),
        .O(add_1_2_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_3
       (.A({add_1_3_i_1__0_n_1,add_1_3_i_2__0_n_1,add_1_3_i_3__0_n_1,add_1_3_i_4__0_n_1,add_1_3_i_5__0_n_1,add_1_3_i_6__0_n_1,add_1_3_i_7__0_n_1,add_1_3_i_8__0_n_1,add_1_3_i_9__0_n_1,add_1_3_i_10__0_n_1,add_1_3_i_11__0_n_1,add_1_3_i_12__0_n_1,add_1_3_i_13__0_n_1,add_1_3_i_14__0_n_1,add_1_3_i_15__0_n_1,add_1_3_i_16__0_n_1,add_1_3_i_17__0_n_1,add_1_3_i_18__0_n_1,add_1_3_i_19__0_n_1,add_1_3_i_20__0_n_1,add_1_3_i_21__0_n_1,add_1_3_i_22__0_n_1,add_1_3_i_23__0_n_1,add_1_3_i_24__0_n_1,add_1_3_i_25__0_n_1,add_1_3_i_26__0_n_1,add_1_3_i_27__0_n_1}),
        .B({add_1_3_i_28__0_n_1,add_1_3_i_29__0_n_1,add_1_3_i_30__0_n_1,add_1_3_i_31__0_n_1,add_1_3_i_32__0_n_1,add_1_3_i_33__0_n_1,add_1_3_i_34__0_n_1,add_1_3_i_35__0_n_1,add_1_3_i_36__0_n_1,add_1_3_i_37__0_n_1,add_1_3_i_38__0_n_1,add_1_3_i_39__0_n_1,add_1_3_i_40__0_n_1,add_1_3_i_41__0_n_1,add_1_3_i_42__0_n_1,add_1_3_i_43__0_n_1,add_1_3_i_44__0_n_1,add_1_3_i_45__0_n_1,add_1_3_i_46__0_n_1,add_1_3_i_47__0_n_1,add_1_3_i_48__0_n_1,add_1_3_i_49__0_n_1,add_1_3_i_50__0_n_1,add_1_3_i_51__0_n_1,add_1_3_i_52__0_n_1,add_1_3_i_53__0_n_1,add_1_3_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[3]_50 ));
  (* SOFT_HLUTNM = "soft_lutpair758" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [17]),
        .O(add_1_3_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair758" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [16]),
        .O(add_1_3_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair757" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [15]),
        .O(add_1_3_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair757" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [14]),
        .O(add_1_3_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair756" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [13]),
        .O(add_1_3_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair756" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [12]),
        .O(add_1_3_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair755" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [11]),
        .O(add_1_3_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair755" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [10]),
        .O(add_1_3_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair754" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [9]),
        .O(add_1_3_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair754" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [8]),
        .O(add_1_3_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair763" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [26]),
        .O(add_1_3_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair753" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [7]),
        .O(add_1_3_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair753" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [6]),
        .O(add_1_3_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair752" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [5]),
        .O(add_1_3_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair752" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [4]),
        .O(add_1_3_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair751" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [3]),
        .O(add_1_3_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair751" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [2]),
        .O(add_1_3_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair750" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [1]),
        .O(add_1_3_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair750" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [0]),
        .O(add_1_3_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair776" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [26]),
        .O(add_1_3_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair776" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [25]),
        .O(add_1_3_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair762" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [25]),
        .O(add_1_3_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair775" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [24]),
        .O(add_1_3_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair775" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [23]),
        .O(add_1_3_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair774" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [22]),
        .O(add_1_3_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair774" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [21]),
        .O(add_1_3_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair773" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [20]),
        .O(add_1_3_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair773" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [19]),
        .O(add_1_3_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair772" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [18]),
        .O(add_1_3_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair772" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [17]),
        .O(add_1_3_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair771" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [16]),
        .O(add_1_3_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair771" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [15]),
        .O(add_1_3_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair762" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [24]),
        .O(add_1_3_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair770" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [14]),
        .O(add_1_3_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair770" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [13]),
        .O(add_1_3_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair769" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [12]),
        .O(add_1_3_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair769" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [11]),
        .O(add_1_3_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair768" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [10]),
        .O(add_1_3_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair768" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [9]),
        .O(add_1_3_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair767" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [8]),
        .O(add_1_3_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair767" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [7]),
        .O(add_1_3_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair766" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [6]),
        .O(add_1_3_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair766" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [5]),
        .O(add_1_3_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair761" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [23]),
        .O(add_1_3_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair765" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [4]),
        .O(add_1_3_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair765" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [3]),
        .O(add_1_3_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair764" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [2]),
        .O(add_1_3_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair764" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [1]),
        .O(add_1_3_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair763" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[7]_38 [0]),
        .O(add_1_3_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair761" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [22]),
        .O(add_1_3_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair760" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [21]),
        .O(add_1_3_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair760" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [20]),
        .O(add_1_3_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair759" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [19]),
        .O(add_1_3_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair759" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_3_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[6]_37 [18]),
        .O(add_1_3_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_4
       (.A({add_1_4_i_1__0_n_1,add_1_4_i_2__0_n_1,add_1_4_i_3__0_n_1,add_1_4_i_4__0_n_1,add_1_4_i_5__0_n_1,add_1_4_i_6__0_n_1,add_1_4_i_7__0_n_1,add_1_4_i_8__0_n_1,add_1_4_i_9__0_n_1,add_1_4_i_10__0_n_1,add_1_4_i_11__0_n_1,add_1_4_i_12__0_n_1,add_1_4_i_13__0_n_1,add_1_4_i_14__0_n_1,add_1_4_i_15__0_n_1,add_1_4_i_16__0_n_1,add_1_4_i_17__0_n_1,add_1_4_i_18__0_n_1,add_1_4_i_19__0_n_1,add_1_4_i_20__0_n_1,add_1_4_i_21__0_n_1,add_1_4_i_22__0_n_1,add_1_4_i_23__0_n_1,add_1_4_i_24__0_n_1,add_1_4_i_25__0_n_1,add_1_4_i_26__0_n_1,add_1_4_i_27__0_n_1}),
        .B({add_1_4_i_28__0_n_1,add_1_4_i_29__0_n_1,add_1_4_i_30__0_n_1,add_1_4_i_31__0_n_1,add_1_4_i_32__0_n_1,add_1_4_i_33__0_n_1,add_1_4_i_34__0_n_1,add_1_4_i_35__0_n_1,add_1_4_i_36__0_n_1,add_1_4_i_37__0_n_1,add_1_4_i_38__0_n_1,add_1_4_i_39__0_n_1,add_1_4_i_40__0_n_1,add_1_4_i_41__0_n_1,add_1_4_i_42__0_n_1,add_1_4_i_43__0_n_1,add_1_4_i_44__0_n_1,add_1_4_i_45__0_n_1,add_1_4_i_46__0_n_1,add_1_4_i_47__0_n_1,add_1_4_i_48__0_n_1,add_1_4_i_49__0_n_1,add_1_4_i_50__0_n_1,add_1_4_i_51__0_n_1,add_1_4_i_52__0_n_1,add_1_4_i_53__0_n_1,add_1_4_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[4]_51 ));
  (* SOFT_HLUTNM = "soft_lutpair785" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [17]),
        .O(add_1_4_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair785" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [16]),
        .O(add_1_4_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair784" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [15]),
        .O(add_1_4_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair784" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [14]),
        .O(add_1_4_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair783" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [13]),
        .O(add_1_4_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair783" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [12]),
        .O(add_1_4_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair782" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [11]),
        .O(add_1_4_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair782" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [10]),
        .O(add_1_4_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair781" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [9]),
        .O(add_1_4_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair781" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [8]),
        .O(add_1_4_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair790" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [26]),
        .O(add_1_4_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair780" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [7]),
        .O(add_1_4_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair780" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [6]),
        .O(add_1_4_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair779" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [5]),
        .O(add_1_4_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair779" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [4]),
        .O(add_1_4_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair778" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [3]),
        .O(add_1_4_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair778" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [2]),
        .O(add_1_4_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair777" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [1]),
        .O(add_1_4_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair777" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [0]),
        .O(add_1_4_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair803" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [26]),
        .O(add_1_4_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair803" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [25]),
        .O(add_1_4_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair789" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [25]),
        .O(add_1_4_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair802" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [24]),
        .O(add_1_4_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair802" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [23]),
        .O(add_1_4_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair801" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [22]),
        .O(add_1_4_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair801" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [21]),
        .O(add_1_4_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair800" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [20]),
        .O(add_1_4_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair800" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [19]),
        .O(add_1_4_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair799" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [18]),
        .O(add_1_4_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair799" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [17]),
        .O(add_1_4_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair798" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [16]),
        .O(add_1_4_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair798" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [15]),
        .O(add_1_4_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair789" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [24]),
        .O(add_1_4_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair797" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [14]),
        .O(add_1_4_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair797" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [13]),
        .O(add_1_4_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair796" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [12]),
        .O(add_1_4_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair796" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [11]),
        .O(add_1_4_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair795" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [10]),
        .O(add_1_4_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair795" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [9]),
        .O(add_1_4_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair794" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [8]),
        .O(add_1_4_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair794" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [7]),
        .O(add_1_4_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair793" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [6]),
        .O(add_1_4_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair793" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [5]),
        .O(add_1_4_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair788" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [23]),
        .O(add_1_4_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair792" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [4]),
        .O(add_1_4_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair792" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [3]),
        .O(add_1_4_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair791" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [2]),
        .O(add_1_4_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair791" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [1]),
        .O(add_1_4_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair790" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[9]_40 [0]),
        .O(add_1_4_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair788" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [22]),
        .O(add_1_4_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair787" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [21]),
        .O(add_1_4_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair787" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [20]),
        .O(add_1_4_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair786" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [19]),
        .O(add_1_4_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair786" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_4_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[8]_39 [18]),
        .O(add_1_4_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_5
       (.A({add_1_5_i_1__0_n_1,add_1_5_i_2__0_n_1,add_1_5_i_3__0_n_1,add_1_5_i_4__0_n_1,add_1_5_i_5__0_n_1,add_1_5_i_6__0_n_1,add_1_5_i_7__0_n_1,add_1_5_i_8__0_n_1,add_1_5_i_9__0_n_1,add_1_5_i_10__0_n_1,add_1_5_i_11__0_n_1,add_1_5_i_12__0_n_1,add_1_5_i_13__0_n_1,add_1_5_i_14__0_n_1,add_1_5_i_15__0_n_1,add_1_5_i_16__0_n_1,add_1_5_i_17__0_n_1,add_1_5_i_18__0_n_1,add_1_5_i_19__0_n_1,add_1_5_i_20__0_n_1,add_1_5_i_21__0_n_1,add_1_5_i_22__0_n_1,add_1_5_i_23__0_n_1,add_1_5_i_24__0_n_1,add_1_5_i_25__0_n_1,add_1_5_i_26__0_n_1,add_1_5_i_27__0_n_1}),
        .B({add_1_5_i_28__0_n_1,add_1_5_i_29__0_n_1,add_1_5_i_30__0_n_1,add_1_5_i_31__0_n_1,add_1_5_i_32__0_n_1,add_1_5_i_33__0_n_1,add_1_5_i_34__0_n_1,add_1_5_i_35__0_n_1,add_1_5_i_36__0_n_1,add_1_5_i_37__0_n_1,add_1_5_i_38__0_n_1,add_1_5_i_39__0_n_1,add_1_5_i_40__0_n_1,add_1_5_i_41__0_n_1,add_1_5_i_42__0_n_1,add_1_5_i_43__0_n_1,add_1_5_i_44__0_n_1,add_1_5_i_45__0_n_1,add_1_5_i_46__0_n_1,add_1_5_i_47__0_n_1,add_1_5_i_48__0_n_1,add_1_5_i_49__0_n_1,add_1_5_i_50__0_n_1,add_1_5_i_51__0_n_1,add_1_5_i_52__0_n_1,add_1_5_i_53__0_n_1,add_1_5_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[5]_52 ));
  (* SOFT_HLUTNM = "soft_lutpair812" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [17]),
        .O(add_1_5_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair812" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [16]),
        .O(add_1_5_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair811" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [15]),
        .O(add_1_5_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair811" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [14]),
        .O(add_1_5_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair810" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [13]),
        .O(add_1_5_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair810" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [12]),
        .O(add_1_5_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair809" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [11]),
        .O(add_1_5_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair809" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [10]),
        .O(add_1_5_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair808" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [9]),
        .O(add_1_5_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair808" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [8]),
        .O(add_1_5_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair817" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [26]),
        .O(add_1_5_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair807" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [7]),
        .O(add_1_5_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair807" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [6]),
        .O(add_1_5_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair806" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [5]),
        .O(add_1_5_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair806" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [4]),
        .O(add_1_5_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair805" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [3]),
        .O(add_1_5_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair805" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [2]),
        .O(add_1_5_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair804" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [1]),
        .O(add_1_5_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair804" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [0]),
        .O(add_1_5_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair830" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [26]),
        .O(add_1_5_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair830" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [25]),
        .O(add_1_5_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair816" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [25]),
        .O(add_1_5_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair829" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [24]),
        .O(add_1_5_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair829" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [23]),
        .O(add_1_5_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair828" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [22]),
        .O(add_1_5_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair828" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [21]),
        .O(add_1_5_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair827" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [20]),
        .O(add_1_5_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair827" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [19]),
        .O(add_1_5_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair826" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [18]),
        .O(add_1_5_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair826" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [17]),
        .O(add_1_5_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair825" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [16]),
        .O(add_1_5_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair825" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [15]),
        .O(add_1_5_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair816" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [24]),
        .O(add_1_5_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair824" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [14]),
        .O(add_1_5_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair824" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [13]),
        .O(add_1_5_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair823" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [12]),
        .O(add_1_5_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair823" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [11]),
        .O(add_1_5_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair822" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [10]),
        .O(add_1_5_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair822" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [9]),
        .O(add_1_5_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair821" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [8]),
        .O(add_1_5_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair821" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [7]),
        .O(add_1_5_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair820" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [6]),
        .O(add_1_5_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair820" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [5]),
        .O(add_1_5_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair815" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [23]),
        .O(add_1_5_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair819" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [4]),
        .O(add_1_5_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair819" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [3]),
        .O(add_1_5_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair818" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [2]),
        .O(add_1_5_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair818" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [1]),
        .O(add_1_5_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair817" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[11]_42 [0]),
        .O(add_1_5_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair815" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [22]),
        .O(add_1_5_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair814" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [21]),
        .O(add_1_5_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair814" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [20]),
        .O(add_1_5_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair813" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [19]),
        .O(add_1_5_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair813" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_5_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[10]_41 [18]),
        .O(add_1_5_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_6
       (.A({add_1_6_i_1__0_n_1,add_1_6_i_2__0_n_1,add_1_6_i_3__0_n_1,add_1_6_i_4__0_n_1,add_1_6_i_5__0_n_1,add_1_6_i_6__0_n_1,add_1_6_i_7__0_n_1,add_1_6_i_8__0_n_1,add_1_6_i_9__0_n_1,add_1_6_i_10__0_n_1,add_1_6_i_11__0_n_1,add_1_6_i_12__0_n_1,add_1_6_i_13__0_n_1,add_1_6_i_14__0_n_1,add_1_6_i_15__0_n_1,add_1_6_i_16__0_n_1,add_1_6_i_17__0_n_1,add_1_6_i_18__0_n_1,add_1_6_i_19__0_n_1,add_1_6_i_20__0_n_1,add_1_6_i_21__0_n_1,add_1_6_i_22__0_n_1,add_1_6_i_23__0_n_1,add_1_6_i_24__0_n_1,add_1_6_i_25__0_n_1,add_1_6_i_26__0_n_1,add_1_6_i_27__0_n_1}),
        .B({add_1_6_i_28__0_n_1,add_1_6_i_29__0_n_1,add_1_6_i_30__0_n_1,add_1_6_i_31__0_n_1,add_1_6_i_32__0_n_1,add_1_6_i_33__0_n_1,add_1_6_i_34__0_n_1,add_1_6_i_35__0_n_1,add_1_6_i_36__0_n_1,add_1_6_i_37__0_n_1,add_1_6_i_38__0_n_1,add_1_6_i_39__0_n_1,add_1_6_i_40__0_n_1,add_1_6_i_41__0_n_1,add_1_6_i_42__0_n_1,add_1_6_i_43__0_n_1,add_1_6_i_44__0_n_1,add_1_6_i_45__0_n_1,add_1_6_i_46__0_n_1,add_1_6_i_47__0_n_1,add_1_6_i_48__0_n_1,add_1_6_i_49__0_n_1,add_1_6_i_50__0_n_1,add_1_6_i_51__0_n_1,add_1_6_i_52__0_n_1,add_1_6_i_53__0_n_1,add_1_6_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[6]_53 ));
  (* SOFT_HLUTNM = "soft_lutpair839" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [17]),
        .O(add_1_6_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair839" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [16]),
        .O(add_1_6_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair838" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [15]),
        .O(add_1_6_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair838" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [14]),
        .O(add_1_6_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair837" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [13]),
        .O(add_1_6_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair837" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [12]),
        .O(add_1_6_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair836" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [11]),
        .O(add_1_6_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair836" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [10]),
        .O(add_1_6_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair835" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [9]),
        .O(add_1_6_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair835" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [8]),
        .O(add_1_6_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair844" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [26]),
        .O(add_1_6_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair834" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [7]),
        .O(add_1_6_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair834" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [6]),
        .O(add_1_6_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair833" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [5]),
        .O(add_1_6_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair833" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [4]),
        .O(add_1_6_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair832" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [3]),
        .O(add_1_6_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair832" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [2]),
        .O(add_1_6_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair831" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [1]),
        .O(add_1_6_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair831" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [0]),
        .O(add_1_6_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair857" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [26]),
        .O(add_1_6_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair857" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [25]),
        .O(add_1_6_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair843" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [25]),
        .O(add_1_6_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair856" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [24]),
        .O(add_1_6_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair856" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [23]),
        .O(add_1_6_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair855" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [22]),
        .O(add_1_6_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair855" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [21]),
        .O(add_1_6_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair854" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [20]),
        .O(add_1_6_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair854" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [19]),
        .O(add_1_6_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair853" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [18]),
        .O(add_1_6_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair853" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [17]),
        .O(add_1_6_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair852" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [16]),
        .O(add_1_6_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair852" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [15]),
        .O(add_1_6_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair843" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [24]),
        .O(add_1_6_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair851" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [14]),
        .O(add_1_6_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair851" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [13]),
        .O(add_1_6_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair850" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [12]),
        .O(add_1_6_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair850" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [11]),
        .O(add_1_6_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair849" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [10]),
        .O(add_1_6_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair849" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [9]),
        .O(add_1_6_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair848" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [8]),
        .O(add_1_6_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair848" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [7]),
        .O(add_1_6_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair847" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [6]),
        .O(add_1_6_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair847" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [5]),
        .O(add_1_6_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair842" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [23]),
        .O(add_1_6_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair846" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [4]),
        .O(add_1_6_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair846" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [3]),
        .O(add_1_6_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair845" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [2]),
        .O(add_1_6_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair845" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [1]),
        .O(add_1_6_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair844" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[13]_44 [0]),
        .O(add_1_6_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair842" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [22]),
        .O(add_1_6_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair841" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [21]),
        .O(add_1_6_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair841" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [20]),
        .O(add_1_6_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair840" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [19]),
        .O(add_1_6_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair840" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_6_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[12]_43 [18]),
        .O(add_1_6_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_27_1/add_27.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_27 add_1_7
       (.A({add_1_7_i_1__0_n_1,add_1_7_i_2__0_n_1,add_1_7_i_3__0_n_1,add_1_7_i_4__0_n_1,add_1_7_i_5__0_n_1,add_1_7_i_6__0_n_1,add_1_7_i_7__0_n_1,add_1_7_i_8__0_n_1,add_1_7_i_9__0_n_1,add_1_7_i_10__0_n_1,add_1_7_i_11__0_n_1,add_1_7_i_12__0_n_1,add_1_7_i_13__0_n_1,add_1_7_i_14__0_n_1,add_1_7_i_15__0_n_1,add_1_7_i_16__0_n_1,add_1_7_i_17__0_n_1,add_1_7_i_18__0_n_1,add_1_7_i_19__0_n_1,add_1_7_i_20__0_n_1,add_1_7_i_21__0_n_1,add_1_7_i_22__0_n_1,add_1_7_i_23__0_n_1,add_1_7_i_24__0_n_1,add_1_7_i_25__0_n_1,add_1_7_i_26__0_n_1,add_1_7_i_27__0_n_1}),
        .B({add_1_7_i_28__0_n_1,add_1_7_i_29__0_n_1,add_1_7_i_30__0_n_1,add_1_7_i_31__0_n_1,add_1_7_i_32__0_n_1,add_1_7_i_33__0_n_1,add_1_7_i_34__0_n_1,add_1_7_i_35__0_n_1,add_1_7_i_36__0_n_1,add_1_7_i_37__0_n_1,add_1_7_i_38__0_n_1,add_1_7_i_39__0_n_1,add_1_7_i_40__0_n_1,add_1_7_i_41__0_n_1,add_1_7_i_42__0_n_1,add_1_7_i_43__0_n_1,add_1_7_i_44__0_n_1,add_1_7_i_45__0_n_1,add_1_7_i_46__0_n_1,add_1_7_i_47__0_n_1,add_1_7_i_48__0_n_1,add_1_7_i_49__0_n_1,add_1_7_i_50__0_n_1,add_1_7_i_51__0_n_1,add_1_7_i_52__0_n_1,add_1_7_i_53__0_n_1,add_1_7_i_54__0_n_1}),
        .CLK(CLK),
        .S(\L1Sw[7]_54 ));
  (* SOFT_HLUTNM = "soft_lutpair866" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [17]),
        .O(add_1_7_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair866" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [16]),
        .O(add_1_7_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair865" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [15]),
        .O(add_1_7_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair865" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [14]),
        .O(add_1_7_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair864" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [13]),
        .O(add_1_7_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair864" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [12]),
        .O(add_1_7_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair863" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [11]),
        .O(add_1_7_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair863" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [10]),
        .O(add_1_7_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair862" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [9]),
        .O(add_1_7_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair862" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [8]),
        .O(add_1_7_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair871" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [26]),
        .O(add_1_7_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair861" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [7]),
        .O(add_1_7_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair861" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [6]),
        .O(add_1_7_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair860" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [5]),
        .O(add_1_7_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair860" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [4]),
        .O(add_1_7_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair859" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [3]),
        .O(add_1_7_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair859" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [2]),
        .O(add_1_7_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair858" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [1]),
        .O(add_1_7_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair858" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [0]),
        .O(add_1_7_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair884" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [26]),
        .O(add_1_7_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair884" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [25]),
        .O(add_1_7_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair870" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [25]),
        .O(add_1_7_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair883" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [24]),
        .O(add_1_7_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair883" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [23]),
        .O(add_1_7_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair882" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [22]),
        .O(add_1_7_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair882" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [21]),
        .O(add_1_7_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair881" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [20]),
        .O(add_1_7_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair881" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [19]),
        .O(add_1_7_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair880" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [18]),
        .O(add_1_7_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair880" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [17]),
        .O(add_1_7_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair879" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [16]),
        .O(add_1_7_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair879" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [15]),
        .O(add_1_7_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair870" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [24]),
        .O(add_1_7_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair878" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [14]),
        .O(add_1_7_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair878" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [13]),
        .O(add_1_7_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair877" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [12]),
        .O(add_1_7_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair877" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [11]),
        .O(add_1_7_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair876" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [10]),
        .O(add_1_7_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair876" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [9]),
        .O(add_1_7_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair875" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [8]),
        .O(add_1_7_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair875" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [7]),
        .O(add_1_7_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair874" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [6]),
        .O(add_1_7_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair874" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [5]),
        .O(add_1_7_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair869" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [23]),
        .O(add_1_7_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair873" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [4]),
        .O(add_1_7_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair873" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [3]),
        .O(add_1_7_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair872" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [2]),
        .O(add_1_7_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair872" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [1]),
        .O(add_1_7_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair871" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[15]_46 [0]),
        .O(add_1_7_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair869" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [22]),
        .O(add_1_7_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair868" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [21]),
        .O(add_1_7_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair868" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [20]),
        .O(add_1_7_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair867" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [19]),
        .O(add_1_7_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair867" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_1_7_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\Pw[14]_45 [18]),
        .O(add_1_7_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_0
       (.A({add_2_0_i_1__0_n_1,add_2_0_i_2__0_n_1,add_2_0_i_3__0_n_1,add_2_0_i_4__0_n_1,add_2_0_i_5__0_n_1,add_2_0_i_6__0_n_1,add_2_0_i_7__0_n_1,add_2_0_i_8__0_n_1,add_2_0_i_9__0_n_1,add_2_0_i_10__0_n_1,add_2_0_i_11__0_n_1,add_2_0_i_12__0_n_1,add_2_0_i_13__0_n_1,add_2_0_i_14__0_n_1,add_2_0_i_15__0_n_1,add_2_0_i_16__0_n_1,add_2_0_i_17__0_n_1,add_2_0_i_18__0_n_1,add_2_0_i_19__0_n_1,add_2_0_i_20__0_n_1,add_2_0_i_21__0_n_1,add_2_0_i_22__0_n_1,add_2_0_i_23__0_n_1,add_2_0_i_24__0_n_1,add_2_0_i_25__0_n_1,add_2_0_i_26__0_n_1,add_2_0_i_27__0_n_1,add_2_0_i_28__0_n_1}),
        .B({add_2_0_i_29__0_n_1,add_2_0_i_30__0_n_1,add_2_0_i_31__0_n_1,add_2_0_i_32__0_n_1,add_2_0_i_33__0_n_1,add_2_0_i_34__0_n_1,add_2_0_i_35__0_n_1,add_2_0_i_36__0_n_1,add_2_0_i_37__0_n_1,add_2_0_i_38__0_n_1,add_2_0_i_39__0_n_1,add_2_0_i_40__0_n_1,add_2_0_i_41__0_n_1,add_2_0_i_42__0_n_1,add_2_0_i_43__0_n_1,add_2_0_i_44__0_n_1,add_2_0_i_45__0_n_1,add_2_0_i_46__0_n_1,add_2_0_i_47__0_n_1,add_2_0_i_48__0_n_1,add_2_0_i_49__0_n_1,add_2_0_i_50__0_n_1,add_2_0_i_51__0_n_1,add_2_0_i_52__0_n_1,add_2_0_i_53__0_n_1,add_2_0_i_54__0_n_1,add_2_0_i_55__0_n_1,add_2_0_i_56__0_n_1}),
        .CLK(CLK),
        .S(\L2Sw[0]_55 ));
  (* SOFT_HLUTNM = "soft_lutpair566" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [18]),
        .O(add_2_0_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair565" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [17]),
        .O(add_2_0_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair565" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [16]),
        .O(add_2_0_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair564" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [15]),
        .O(add_2_0_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair564" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [14]),
        .O(add_2_0_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair563" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [13]),
        .O(add_2_0_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair563" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [12]),
        .O(add_2_0_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair562" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [11]),
        .O(add_2_0_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair562" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [10]),
        .O(add_2_0_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair561" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [9]),
        .O(add_2_0_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair570" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [27]),
        .O(add_2_0_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair561" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [8]),
        .O(add_2_0_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair560" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [7]),
        .O(add_2_0_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair560" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [6]),
        .O(add_2_0_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair559" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [5]),
        .O(add_2_0_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair559" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [4]),
        .O(add_2_0_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair558" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [3]),
        .O(add_2_0_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair558" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [2]),
        .O(add_2_0_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair557" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [1]),
        .O(add_2_0_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair557" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [0]),
        .O(add_2_0_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair584" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [27]),
        .O(add_2_0_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair570" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [26]),
        .O(add_2_0_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair584" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [26]),
        .O(add_2_0_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair583" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [25]),
        .O(add_2_0_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair583" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [24]),
        .O(add_2_0_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair582" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [23]),
        .O(add_2_0_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair582" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [22]),
        .O(add_2_0_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair581" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [21]),
        .O(add_2_0_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair581" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [20]),
        .O(add_2_0_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair580" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [19]),
        .O(add_2_0_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair580" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [18]),
        .O(add_2_0_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair579" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [17]),
        .O(add_2_0_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair569" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [25]),
        .O(add_2_0_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair579" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [16]),
        .O(add_2_0_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair578" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [15]),
        .O(add_2_0_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair578" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [14]),
        .O(add_2_0_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair577" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [13]),
        .O(add_2_0_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair577" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [12]),
        .O(add_2_0_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair576" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [11]),
        .O(add_2_0_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair576" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [10]),
        .O(add_2_0_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair575" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [9]),
        .O(add_2_0_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair575" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [8]),
        .O(add_2_0_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair574" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [7]),
        .O(add_2_0_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair569" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [24]),
        .O(add_2_0_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair574" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [6]),
        .O(add_2_0_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair573" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [5]),
        .O(add_2_0_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair573" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [4]),
        .O(add_2_0_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair572" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [3]),
        .O(add_2_0_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair572" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [2]),
        .O(add_2_0_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair571" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [1]),
        .O(add_2_0_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair571" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[1]_48 [0]),
        .O(add_2_0_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair568" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [23]),
        .O(add_2_0_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair568" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [22]),
        .O(add_2_0_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair567" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [21]),
        .O(add_2_0_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair567" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [20]),
        .O(add_2_0_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair566" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_0_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[0]_47 [19]),
        .O(add_2_0_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_1
       (.A({add_2_1_i_1__0_n_1,add_2_1_i_2__0_n_1,add_2_1_i_3__0_n_1,add_2_1_i_4__0_n_1,add_2_1_i_5__0_n_1,add_2_1_i_6__0_n_1,add_2_1_i_7__0_n_1,add_2_1_i_8__0_n_1,add_2_1_i_9__0_n_1,add_2_1_i_10__0_n_1,add_2_1_i_11__0_n_1,add_2_1_i_12__0_n_1,add_2_1_i_13__0_n_1,add_2_1_i_14__0_n_1,add_2_1_i_15__0_n_1,add_2_1_i_16__0_n_1,add_2_1_i_17__0_n_1,add_2_1_i_18__0_n_1,add_2_1_i_19__0_n_1,add_2_1_i_20__0_n_1,add_2_1_i_21__0_n_1,add_2_1_i_22__0_n_1,add_2_1_i_23__0_n_1,add_2_1_i_24__0_n_1,add_2_1_i_25__0_n_1,add_2_1_i_26__0_n_1,add_2_1_i_27__0_n_1,add_2_1_i_28__0_n_1}),
        .B({add_2_1_i_29__0_n_1,add_2_1_i_30__0_n_1,add_2_1_i_31__0_n_1,add_2_1_i_32__0_n_1,add_2_1_i_33__0_n_1,add_2_1_i_34__0_n_1,add_2_1_i_35__0_n_1,add_2_1_i_36__0_n_1,add_2_1_i_37__0_n_1,add_2_1_i_38__0_n_1,add_2_1_i_39__0_n_1,add_2_1_i_40__0_n_1,add_2_1_i_41__0_n_1,add_2_1_i_42__0_n_1,add_2_1_i_43__0_n_1,add_2_1_i_44__0_n_1,add_2_1_i_45__0_n_1,add_2_1_i_46__0_n_1,add_2_1_i_47__0_n_1,add_2_1_i_48__0_n_1,add_2_1_i_49__0_n_1,add_2_1_i_50__0_n_1,add_2_1_i_51__0_n_1,add_2_1_i_52__0_n_1,add_2_1_i_53__0_n_1,add_2_1_i_54__0_n_1,add_2_1_i_55__0_n_1,add_2_1_i_56__0_n_1}),
        .CLK(CLK),
        .S(\L2Sw[1]_56 ));
  (* SOFT_HLUTNM = "soft_lutpair594" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [18]),
        .O(add_2_1_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair593" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [17]),
        .O(add_2_1_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair593" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [16]),
        .O(add_2_1_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair592" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [15]),
        .O(add_2_1_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair592" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [14]),
        .O(add_2_1_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair591" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [13]),
        .O(add_2_1_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair591" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [12]),
        .O(add_2_1_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair590" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [11]),
        .O(add_2_1_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair590" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [10]),
        .O(add_2_1_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair589" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [9]),
        .O(add_2_1_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair598" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [27]),
        .O(add_2_1_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair589" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [8]),
        .O(add_2_1_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair588" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [7]),
        .O(add_2_1_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair588" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [6]),
        .O(add_2_1_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair587" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [5]),
        .O(add_2_1_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair587" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [4]),
        .O(add_2_1_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair586" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [3]),
        .O(add_2_1_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair586" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [2]),
        .O(add_2_1_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair585" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [1]),
        .O(add_2_1_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair585" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [0]),
        .O(add_2_1_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair612" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [27]),
        .O(add_2_1_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair598" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [26]),
        .O(add_2_1_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair612" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [26]),
        .O(add_2_1_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair611" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [25]),
        .O(add_2_1_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair611" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [24]),
        .O(add_2_1_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair610" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [23]),
        .O(add_2_1_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair610" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [22]),
        .O(add_2_1_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair609" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [21]),
        .O(add_2_1_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair609" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [20]),
        .O(add_2_1_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair608" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [19]),
        .O(add_2_1_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair608" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [18]),
        .O(add_2_1_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair607" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [17]),
        .O(add_2_1_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair597" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [25]),
        .O(add_2_1_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair607" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [16]),
        .O(add_2_1_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair606" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [15]),
        .O(add_2_1_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair606" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [14]),
        .O(add_2_1_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair605" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [13]),
        .O(add_2_1_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair605" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [12]),
        .O(add_2_1_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair604" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [11]),
        .O(add_2_1_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair604" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [10]),
        .O(add_2_1_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair603" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [9]),
        .O(add_2_1_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair603" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [8]),
        .O(add_2_1_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair602" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [7]),
        .O(add_2_1_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair597" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [24]),
        .O(add_2_1_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair602" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [6]),
        .O(add_2_1_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair601" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [5]),
        .O(add_2_1_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair601" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [4]),
        .O(add_2_1_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair600" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [3]),
        .O(add_2_1_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair600" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [2]),
        .O(add_2_1_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair599" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [1]),
        .O(add_2_1_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair599" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[3]_50 [0]),
        .O(add_2_1_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair596" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [23]),
        .O(add_2_1_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair596" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [22]),
        .O(add_2_1_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair595" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [21]),
        .O(add_2_1_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair595" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [20]),
        .O(add_2_1_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair594" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_1_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[2]_49 [19]),
        .O(add_2_1_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_2
       (.A({add_2_2_i_1__0_n_1,add_2_2_i_2__0_n_1,add_2_2_i_3__0_n_1,add_2_2_i_4__0_n_1,add_2_2_i_5__0_n_1,add_2_2_i_6__0_n_1,add_2_2_i_7__0_n_1,add_2_2_i_8__0_n_1,add_2_2_i_9__0_n_1,add_2_2_i_10__0_n_1,add_2_2_i_11__0_n_1,add_2_2_i_12__0_n_1,add_2_2_i_13__0_n_1,add_2_2_i_14__0_n_1,add_2_2_i_15__0_n_1,add_2_2_i_16__0_n_1,add_2_2_i_17__0_n_1,add_2_2_i_18__0_n_1,add_2_2_i_19__0_n_1,add_2_2_i_20__0_n_1,add_2_2_i_21__0_n_1,add_2_2_i_22__0_n_1,add_2_2_i_23__0_n_1,add_2_2_i_24__0_n_1,add_2_2_i_25__0_n_1,add_2_2_i_26__0_n_1,add_2_2_i_27__0_n_1,add_2_2_i_28__0_n_1}),
        .B({add_2_2_i_29__0_n_1,add_2_2_i_30__0_n_1,add_2_2_i_31__0_n_1,add_2_2_i_32__0_n_1,add_2_2_i_33__0_n_1,add_2_2_i_34__0_n_1,add_2_2_i_35__0_n_1,add_2_2_i_36__0_n_1,add_2_2_i_37__0_n_1,add_2_2_i_38__0_n_1,add_2_2_i_39__0_n_1,add_2_2_i_40__0_n_1,add_2_2_i_41__0_n_1,add_2_2_i_42__0_n_1,add_2_2_i_43__0_n_1,add_2_2_i_44__0_n_1,add_2_2_i_45__0_n_1,add_2_2_i_46__0_n_1,add_2_2_i_47__0_n_1,add_2_2_i_48__0_n_1,add_2_2_i_49__0_n_1,add_2_2_i_50__0_n_1,add_2_2_i_51__0_n_1,add_2_2_i_52__0_n_1,add_2_2_i_53__0_n_1,add_2_2_i_54__0_n_1,add_2_2_i_55__0_n_1,add_2_2_i_56__0_n_1}),
        .CLK(CLK),
        .S(\L2Sw[2]_57 ));
  (* SOFT_HLUTNM = "soft_lutpair622" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [18]),
        .O(add_2_2_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair621" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [17]),
        .O(add_2_2_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair621" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [16]),
        .O(add_2_2_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair620" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [15]),
        .O(add_2_2_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair620" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [14]),
        .O(add_2_2_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair619" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [13]),
        .O(add_2_2_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair619" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [12]),
        .O(add_2_2_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair618" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [11]),
        .O(add_2_2_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair618" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [10]),
        .O(add_2_2_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair617" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [9]),
        .O(add_2_2_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair626" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [27]),
        .O(add_2_2_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair617" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [8]),
        .O(add_2_2_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair616" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [7]),
        .O(add_2_2_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair616" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [6]),
        .O(add_2_2_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair615" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [5]),
        .O(add_2_2_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair615" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [4]),
        .O(add_2_2_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair614" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [3]),
        .O(add_2_2_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair614" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [2]),
        .O(add_2_2_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair613" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [1]),
        .O(add_2_2_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair613" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [0]),
        .O(add_2_2_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair640" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [27]),
        .O(add_2_2_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair626" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [26]),
        .O(add_2_2_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair640" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [26]),
        .O(add_2_2_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair639" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [25]),
        .O(add_2_2_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair639" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [24]),
        .O(add_2_2_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair638" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [23]),
        .O(add_2_2_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair638" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [22]),
        .O(add_2_2_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair637" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [21]),
        .O(add_2_2_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair637" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [20]),
        .O(add_2_2_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair636" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [19]),
        .O(add_2_2_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair636" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [18]),
        .O(add_2_2_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair635" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [17]),
        .O(add_2_2_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair625" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [25]),
        .O(add_2_2_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair635" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [16]),
        .O(add_2_2_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair634" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [15]),
        .O(add_2_2_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair634" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [14]),
        .O(add_2_2_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair633" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [13]),
        .O(add_2_2_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair633" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [12]),
        .O(add_2_2_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair632" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [11]),
        .O(add_2_2_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair632" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [10]),
        .O(add_2_2_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair631" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [9]),
        .O(add_2_2_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair631" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [8]),
        .O(add_2_2_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair630" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [7]),
        .O(add_2_2_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair625" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [24]),
        .O(add_2_2_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair630" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [6]),
        .O(add_2_2_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair629" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [5]),
        .O(add_2_2_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair629" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [4]),
        .O(add_2_2_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair628" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [3]),
        .O(add_2_2_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair628" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [2]),
        .O(add_2_2_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair627" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [1]),
        .O(add_2_2_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair627" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[5]_52 [0]),
        .O(add_2_2_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair624" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [23]),
        .O(add_2_2_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair624" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [22]),
        .O(add_2_2_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair623" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [21]),
        .O(add_2_2_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair623" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [20]),
        .O(add_2_2_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair622" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_2_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[4]_51 [19]),
        .O(add_2_2_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_28/add_28.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_28 add_2_3
       (.A({add_2_3_i_1__0_n_1,add_2_3_i_2__0_n_1,add_2_3_i_3__0_n_1,add_2_3_i_4__0_n_1,add_2_3_i_5__0_n_1,add_2_3_i_6__0_n_1,add_2_3_i_7__0_n_1,add_2_3_i_8__0_n_1,add_2_3_i_9__0_n_1,add_2_3_i_10__0_n_1,add_2_3_i_11__0_n_1,add_2_3_i_12__0_n_1,add_2_3_i_13__0_n_1,add_2_3_i_14__0_n_1,add_2_3_i_15__0_n_1,add_2_3_i_16__0_n_1,add_2_3_i_17__0_n_1,add_2_3_i_18__0_n_1,add_2_3_i_19__0_n_1,add_2_3_i_20__0_n_1,add_2_3_i_21__0_n_1,add_2_3_i_22__0_n_1,add_2_3_i_23__0_n_1,add_2_3_i_24__0_n_1,add_2_3_i_25__0_n_1,add_2_3_i_26__0_n_1,add_2_3_i_27__0_n_1,add_2_3_i_28__0_n_1}),
        .B({add_2_3_i_29__0_n_1,add_2_3_i_30__0_n_1,add_2_3_i_31__0_n_1,add_2_3_i_32__0_n_1,add_2_3_i_33__0_n_1,add_2_3_i_34__0_n_1,add_2_3_i_35__0_n_1,add_2_3_i_36__0_n_1,add_2_3_i_37__0_n_1,add_2_3_i_38__0_n_1,add_2_3_i_39__0_n_1,add_2_3_i_40__0_n_1,add_2_3_i_41__0_n_1,add_2_3_i_42__0_n_1,add_2_3_i_43__0_n_1,add_2_3_i_44__0_n_1,add_2_3_i_45__0_n_1,add_2_3_i_46__0_n_1,add_2_3_i_47__0_n_1,add_2_3_i_48__0_n_1,add_2_3_i_49__0_n_1,add_2_3_i_50__0_n_1,add_2_3_i_51__0_n_1,add_2_3_i_52__0_n_1,add_2_3_i_53__0_n_1,add_2_3_i_54__0_n_1,add_2_3_i_55__0_n_1,add_2_3_i_56__0_n_1}),
        .CLK(CLK),
        .S(\L2Sw[3]_58 ));
  (* SOFT_HLUTNM = "soft_lutpair650" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [18]),
        .O(add_2_3_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair649" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [17]),
        .O(add_2_3_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair649" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [16]),
        .O(add_2_3_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair648" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [15]),
        .O(add_2_3_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair648" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [14]),
        .O(add_2_3_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair647" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [13]),
        .O(add_2_3_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair647" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [12]),
        .O(add_2_3_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair646" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [11]),
        .O(add_2_3_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair646" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [10]),
        .O(add_2_3_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair645" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [9]),
        .O(add_2_3_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair654" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [27]),
        .O(add_2_3_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair645" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [8]),
        .O(add_2_3_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair644" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [7]),
        .O(add_2_3_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair644" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [6]),
        .O(add_2_3_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair643" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [5]),
        .O(add_2_3_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair643" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [4]),
        .O(add_2_3_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair642" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [3]),
        .O(add_2_3_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair642" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [2]),
        .O(add_2_3_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair641" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [1]),
        .O(add_2_3_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair641" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [0]),
        .O(add_2_3_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair668" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [27]),
        .O(add_2_3_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair654" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [26]),
        .O(add_2_3_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair668" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [26]),
        .O(add_2_3_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair667" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [25]),
        .O(add_2_3_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair667" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [24]),
        .O(add_2_3_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair666" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [23]),
        .O(add_2_3_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair666" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [22]),
        .O(add_2_3_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair665" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [21]),
        .O(add_2_3_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair665" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [20]),
        .O(add_2_3_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair664" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [19]),
        .O(add_2_3_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair664" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [18]),
        .O(add_2_3_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair663" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [17]),
        .O(add_2_3_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair653" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [25]),
        .O(add_2_3_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair663" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [16]),
        .O(add_2_3_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair662" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [15]),
        .O(add_2_3_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair662" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [14]),
        .O(add_2_3_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair661" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [13]),
        .O(add_2_3_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair661" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [12]),
        .O(add_2_3_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair660" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [11]),
        .O(add_2_3_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair660" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [10]),
        .O(add_2_3_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair659" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [9]),
        .O(add_2_3_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair659" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [8]),
        .O(add_2_3_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair658" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [7]),
        .O(add_2_3_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair653" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [24]),
        .O(add_2_3_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair658" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [6]),
        .O(add_2_3_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair657" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [5]),
        .O(add_2_3_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair657" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [4]),
        .O(add_2_3_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair656" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [3]),
        .O(add_2_3_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair656" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [2]),
        .O(add_2_3_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair655" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [1]),
        .O(add_2_3_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair655" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[7]_54 [0]),
        .O(add_2_3_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair652" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [23]),
        .O(add_2_3_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair652" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [22]),
        .O(add_2_3_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair651" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [21]),
        .O(add_2_3_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair651" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [20]),
        .O(add_2_3_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair650" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_2_3_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L1Sw[6]_53 [19]),
        .O(add_2_3_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_29/add_29.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_29 add_3_0
       (.A({add_3_0_i_1__0_n_1,add_3_0_i_2__0_n_1,add_3_0_i_3__0_n_1,add_3_0_i_4__0_n_1,add_3_0_i_5__0_n_1,add_3_0_i_6__0_n_1,add_3_0_i_7__0_n_1,add_3_0_i_8__0_n_1,add_3_0_i_9__0_n_1,add_3_0_i_10__0_n_1,add_3_0_i_11__0_n_1,add_3_0_i_12__0_n_1,add_3_0_i_13__0_n_1,add_3_0_i_14__0_n_1,add_3_0_i_15__0_n_1,add_3_0_i_16__0_n_1,add_3_0_i_17__0_n_1,add_3_0_i_18__0_n_1,add_3_0_i_19__0_n_1,add_3_0_i_20__0_n_1,add_3_0_i_21__0_n_1,add_3_0_i_22__0_n_1,add_3_0_i_23__0_n_1,add_3_0_i_24__0_n_1,add_3_0_i_25__0_n_1,add_3_0_i_26__0_n_1,add_3_0_i_27__0_n_1,add_3_0_i_28__0_n_1,add_3_0_i_29__0_n_1}),
        .B({add_3_0_i_30__0_n_1,add_3_0_i_31__0_n_1,add_3_0_i_32__0_n_1,add_3_0_i_33__0_n_1,add_3_0_i_34__0_n_1,add_3_0_i_35__0_n_1,add_3_0_i_36__0_n_1,add_3_0_i_37__0_n_1,add_3_0_i_38__0_n_1,add_3_0_i_39__0_n_1,add_3_0_i_40__0_n_1,add_3_0_i_41__0_n_1,add_3_0_i_42__0_n_1,add_3_0_i_43__0_n_1,add_3_0_i_44__0_n_1,add_3_0_i_45__0_n_1,add_3_0_i_46__0_n_1,add_3_0_i_47__0_n_1,add_3_0_i_48__0_n_1,add_3_0_i_49__0_n_1,add_3_0_i_50__0_n_1,add_3_0_i_51__0_n_1,add_3_0_i_52__0_n_1,add_3_0_i_53__0_n_1,add_3_0_i_54__0_n_1,add_3_0_i_55__0_n_1,add_3_0_i_56__0_n_1,add_3_0_i_57__0_n_1,add_3_0_i_58__0_n_1}),
        .CLK(CLK),
        .S(\L3Sw[0]_59 ));
  (* SOFT_HLUTNM = "soft_lutpair508" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [19]),
        .O(add_3_0_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair508" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [18]),
        .O(add_3_0_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair507" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [17]),
        .O(add_3_0_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair507" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [16]),
        .O(add_3_0_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair506" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [15]),
        .O(add_3_0_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair506" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [14]),
        .O(add_3_0_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair505" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [13]),
        .O(add_3_0_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair505" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [12]),
        .O(add_3_0_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair504" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [11]),
        .O(add_3_0_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair504" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [10]),
        .O(add_3_0_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair513" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [28]),
        .O(add_3_0_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair503" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [9]),
        .O(add_3_0_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair503" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [8]),
        .O(add_3_0_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair502" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [7]),
        .O(add_3_0_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair502" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [6]),
        .O(add_3_0_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair501" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [5]),
        .O(add_3_0_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair501" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [4]),
        .O(add_3_0_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [3]),
        .O(add_3_0_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [2]),
        .O(add_3_0_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [1]),
        .O(add_3_0_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [0]),
        .O(add_3_0_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair512" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [27]),
        .O(add_3_0_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair527" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [28]),
        .O(add_3_0_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair527" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [27]),
        .O(add_3_0_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair526" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [26]),
        .O(add_3_0_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair526" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [25]),
        .O(add_3_0_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair525" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [24]),
        .O(add_3_0_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair525" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [23]),
        .O(add_3_0_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair524" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [22]),
        .O(add_3_0_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair524" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [21]),
        .O(add_3_0_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair523" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [20]),
        .O(add_3_0_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair523" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [19]),
        .O(add_3_0_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair512" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [26]),
        .O(add_3_0_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair522" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [18]),
        .O(add_3_0_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair522" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [17]),
        .O(add_3_0_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair521" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [16]),
        .O(add_3_0_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair521" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [15]),
        .O(add_3_0_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair520" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [14]),
        .O(add_3_0_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair520" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [13]),
        .O(add_3_0_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair519" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [12]),
        .O(add_3_0_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair519" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [11]),
        .O(add_3_0_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair518" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [10]),
        .O(add_3_0_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair518" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [9]),
        .O(add_3_0_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair511" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [25]),
        .O(add_3_0_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair517" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [8]),
        .O(add_3_0_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair517" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [7]),
        .O(add_3_0_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair516" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [6]),
        .O(add_3_0_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair516" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [5]),
        .O(add_3_0_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair515" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [4]),
        .O(add_3_0_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair515" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [3]),
        .O(add_3_0_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair514" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [2]),
        .O(add_3_0_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair514" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_57__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [1]),
        .O(add_3_0_i_57__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair513" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_58__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[1]_56 [0]),
        .O(add_3_0_i_58__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair511" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [24]),
        .O(add_3_0_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair510" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [23]),
        .O(add_3_0_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair510" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [22]),
        .O(add_3_0_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair509" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [21]),
        .O(add_3_0_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair509" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_0_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[0]_55 [20]),
        .O(add_3_0_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_29/add_29.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_29 add_3_1
       (.A({add_3_1_i_1__0_n_1,add_3_1_i_2__0_n_1,add_3_1_i_3__0_n_1,add_3_1_i_4__0_n_1,add_3_1_i_5__0_n_1,add_3_1_i_6__0_n_1,add_3_1_i_7__0_n_1,add_3_1_i_8__0_n_1,add_3_1_i_9__0_n_1,add_3_1_i_10__0_n_1,add_3_1_i_11__0_n_1,add_3_1_i_12__0_n_1,add_3_1_i_13__0_n_1,add_3_1_i_14__0_n_1,add_3_1_i_15__0_n_1,add_3_1_i_16__0_n_1,add_3_1_i_17__0_n_1,add_3_1_i_18__0_n_1,add_3_1_i_19__0_n_1,add_3_1_i_20__0_n_1,add_3_1_i_21__0_n_1,add_3_1_i_22__0_n_1,add_3_1_i_23__0_n_1,add_3_1_i_24__0_n_1,add_3_1_i_25__0_n_1,add_3_1_i_26__0_n_1,add_3_1_i_27__0_n_1,add_3_1_i_28__0_n_1,add_3_1_i_29__0_n_1}),
        .B({add_3_1_i_30__0_n_1,add_3_1_i_31__0_n_1,add_3_1_i_32__0_n_1,add_3_1_i_33__0_n_1,add_3_1_i_34__0_n_1,add_3_1_i_35__0_n_1,add_3_1_i_36__0_n_1,add_3_1_i_37__0_n_1,add_3_1_i_38__0_n_1,add_3_1_i_39__0_n_1,add_3_1_i_40__0_n_1,add_3_1_i_41__0_n_1,add_3_1_i_42__0_n_1,add_3_1_i_43__0_n_1,add_3_1_i_44__0_n_1,add_3_1_i_45__0_n_1,add_3_1_i_46__0_n_1,add_3_1_i_47__0_n_1,add_3_1_i_48__0_n_1,add_3_1_i_49__0_n_1,add_3_1_i_50__0_n_1,add_3_1_i_51__0_n_1,add_3_1_i_52__0_n_1,add_3_1_i_53__0_n_1,add_3_1_i_54__0_n_1,add_3_1_i_55__0_n_1,add_3_1_i_56__0_n_1,add_3_1_i_57__0_n_1,add_3_1_i_58__0_n_1}),
        .CLK(CLK),
        .S(\L3Sw[1]_60 ));
  (* SOFT_HLUTNM = "soft_lutpair537" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [19]),
        .O(add_3_1_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair537" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [18]),
        .O(add_3_1_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair536" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [17]),
        .O(add_3_1_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair536" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [16]),
        .O(add_3_1_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair535" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [15]),
        .O(add_3_1_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair535" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [14]),
        .O(add_3_1_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair534" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [13]),
        .O(add_3_1_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair534" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [12]),
        .O(add_3_1_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair533" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [11]),
        .O(add_3_1_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair533" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [10]),
        .O(add_3_1_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair542" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [28]),
        .O(add_3_1_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair532" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [9]),
        .O(add_3_1_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair532" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [8]),
        .O(add_3_1_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair531" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [7]),
        .O(add_3_1_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair531" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [6]),
        .O(add_3_1_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair530" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [5]),
        .O(add_3_1_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair530" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [4]),
        .O(add_3_1_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair529" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [3]),
        .O(add_3_1_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair529" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [2]),
        .O(add_3_1_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair528" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [1]),
        .O(add_3_1_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair528" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [0]),
        .O(add_3_1_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair541" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [27]),
        .O(add_3_1_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair556" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [28]),
        .O(add_3_1_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair556" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [27]),
        .O(add_3_1_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair555" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [26]),
        .O(add_3_1_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair555" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [25]),
        .O(add_3_1_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair554" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [24]),
        .O(add_3_1_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair554" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [23]),
        .O(add_3_1_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair553" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [22]),
        .O(add_3_1_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair553" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [21]),
        .O(add_3_1_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair552" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [20]),
        .O(add_3_1_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair552" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [19]),
        .O(add_3_1_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair541" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [26]),
        .O(add_3_1_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair551" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [18]),
        .O(add_3_1_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair551" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [17]),
        .O(add_3_1_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair550" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [16]),
        .O(add_3_1_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair550" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [15]),
        .O(add_3_1_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair549" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [14]),
        .O(add_3_1_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair549" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [13]),
        .O(add_3_1_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair548" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [12]),
        .O(add_3_1_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair548" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [11]),
        .O(add_3_1_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair547" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [10]),
        .O(add_3_1_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair547" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [9]),
        .O(add_3_1_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair540" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [25]),
        .O(add_3_1_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair546" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [8]),
        .O(add_3_1_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair546" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [7]),
        .O(add_3_1_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair545" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [6]),
        .O(add_3_1_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair545" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [5]),
        .O(add_3_1_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair544" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [4]),
        .O(add_3_1_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair544" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [3]),
        .O(add_3_1_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair543" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [2]),
        .O(add_3_1_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair543" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_57__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [1]),
        .O(add_3_1_i_57__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair542" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_58__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[3]_58 [0]),
        .O(add_3_1_i_58__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair540" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [24]),
        .O(add_3_1_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair539" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [23]),
        .O(add_3_1_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair539" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [22]),
        .O(add_3_1_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair538" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [21]),
        .O(add_3_1_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair538" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_3_1_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L2Sw[2]_57 [20]),
        .O(add_3_1_i_9__0_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/add_30/add_30.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
  add_30 add_4
       (.A({add_4_i_1__0_n_1,add_4_i_2__0_n_1,add_4_i_3__0_n_1,add_4_i_4__0_n_1,add_4_i_5__0_n_1,add_4_i_6__0_n_1,add_4_i_7__0_n_1,add_4_i_8__0_n_1,add_4_i_9__0_n_1,add_4_i_10__0_n_1,add_4_i_11__0_n_1,add_4_i_12__0_n_1,add_4_i_13__0_n_1,add_4_i_14__0_n_1,add_4_i_15__0_n_1,add_4_i_16__0_n_1,add_4_i_17__0_n_1,add_4_i_18__0_n_1,add_4_i_19__0_n_1,add_4_i_20__0_n_1,add_4_i_21__0_n_1,add_4_i_22__0_n_1,add_4_i_23__0_n_1,add_4_i_24__0_n_1,add_4_i_25__0_n_1,add_4_i_26__0_n_1,add_4_i_27__0_n_1,add_4_i_28__0_n_1,add_4_i_29__0_n_1,add_4_i_30__0_n_1}),
        .B({add_4_i_31__0_n_1,add_4_i_32__0_n_1,add_4_i_33__0_n_1,add_4_i_34__0_n_1,add_4_i_35__0_n_1,add_4_i_36__0_n_1,add_4_i_37__0_n_1,add_4_i_38__0_n_1,add_4_i_39__0_n_1,add_4_i_40__0_n_1,add_4_i_41__0_n_1,add_4_i_42__0_n_1,add_4_i_43__0_n_1,add_4_i_44__0_n_1,add_4_i_45__0_n_1,add_4_i_46__0_n_1,add_4_i_47__0_n_1,add_4_i_48__0_n_1,add_4_i_49__0_n_1,add_4_i_50__0_n_1,add_4_i_51__0_n_1,add_4_i_52__0_n_1,add_4_i_53__0_n_1,add_4_i_54__0_n_1,add_4_i_55__0_n_1,add_4_i_56__0_n_1,add_4_i_57__0_n_1,add_4_i_58__0_n_1,add_4_i_59__0_n_1,add_4_i_60__0_n_1}),
        .CLK(CLK),
        .S(dst_data_30w));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_10__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [20]),
        .O(add_4_i_10__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_11__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [19]),
        .O(add_4_i_11__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_12__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [18]),
        .O(add_4_i_12__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_13__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [17]),
        .O(add_4_i_13__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_14__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [16]),
        .O(add_4_i_14__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_15__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [15]),
        .O(add_4_i_15__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_16__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [14]),
        .O(add_4_i_16__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_17__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [13]),
        .O(add_4_i_17__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_18__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [12]),
        .O(add_4_i_18__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_19__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [11]),
        .O(add_4_i_19__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_1__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [29]),
        .O(add_4_i_1__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_20__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [10]),
        .O(add_4_i_20__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_21__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [9]),
        .O(add_4_i_21__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_22__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [8]),
        .O(add_4_i_22__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_23__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [7]),
        .O(add_4_i_23__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_24__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [6]),
        .O(add_4_i_24__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_25__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [5]),
        .O(add_4_i_25__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_26__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [4]),
        .O(add_4_i_26__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_27__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [3]),
        .O(add_4_i_27__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_28__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [2]),
        .O(add_4_i_28__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_29__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [1]),
        .O(add_4_i_29__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_2__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [28]),
        .O(add_4_i_2__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_30__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [0]),
        .O(add_4_i_30__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_31__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [29]),
        .O(add_4_i_31__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_32__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [28]),
        .O(add_4_i_32__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_33__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [27]),
        .O(add_4_i_33__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_34__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [26]),
        .O(add_4_i_34__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_35__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [25]),
        .O(add_4_i_35__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_36__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [24]),
        .O(add_4_i_36__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_37__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [23]),
        .O(add_4_i_37__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_38__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [22]),
        .O(add_4_i_38__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_39__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [21]),
        .O(add_4_i_39__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_3__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [27]),
        .O(add_4_i_3__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_40__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [20]),
        .O(add_4_i_40__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_41__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [19]),
        .O(add_4_i_41__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_42__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [18]),
        .O(add_4_i_42__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_43__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [17]),
        .O(add_4_i_43__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_44__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [16]),
        .O(add_4_i_44__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_45__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [15]),
        .O(add_4_i_45__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_46__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [14]),
        .O(add_4_i_46__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_47__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [13]),
        .O(add_4_i_47__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_48__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [12]),
        .O(add_4_i_48__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_49__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [11]),
        .O(add_4_i_49__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_4__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [26]),
        .O(add_4_i_4__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_50__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [10]),
        .O(add_4_i_50__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_51__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [9]),
        .O(add_4_i_51__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_52__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [8]),
        .O(add_4_i_52__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_53__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [7]),
        .O(add_4_i_53__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_54__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [6]),
        .O(add_4_i_54__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_55__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [5]),
        .O(add_4_i_55__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_56__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [4]),
        .O(add_4_i_56__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_57__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [3]),
        .O(add_4_i_57__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_58__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [2]),
        .O(add_4_i_58__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_59__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [1]),
        .O(add_4_i_59__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_5__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [25]),
        .O(add_4_i_5__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_60__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[1]_60 [0]),
        .O(add_4_i_60__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_6__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [24]),
        .O(add_4_i_6__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_7__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [23]),
        .O(add_4_i_7__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_8__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [22]),
        .O(add_4_i_8__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT2 #(
    .INIT(4'h8)) 
    add_4_i_9__0
       (.I0(rst_n_i_IBUF),
        .I1(\L3Sw[0]_59 [21]),
        .O(add_4_i_9__0_n_1));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_10
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[24]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[6]));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_11
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[23]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[5]));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_12
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[22]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[4]));
  CARRY4 line0_i_121
       (.CI(1'b0),
        .CO({line0_i_121_n_1,line0_i_121_n_2,line0_i_121_n_3,line0_i_121_n_4}),
        .CYINIT(1'b1),
        .DI({line0_i_173_n_1,line0_i_174_n_1,line0_i_175_n_1,line0_i_176_n_1}),
        .O(NLW_line0_i_121_O_UNCONNECTED[3:0]),
        .S({line0_i_177_n_1,line0_i_178_n_1,line0_i_179_n_1,line0_i_180_n_1}));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_122
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_122_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_123
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_123_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_124
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_124_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_125
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_125_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_126
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_126_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_127
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_127_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_128
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_128_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_129
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_129_n_1));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_13
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[21]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[3]));
  CARRY4 line0_i_130
       (.CI(1'b0),
        .CO({line0_i_130_n_1,line0_i_130_n_2,line0_i_130_n_3,line0_i_130_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_181_n_1,line0_i_182_n_1,line0_i_183_n_1,line0_i_184_n_1}),
        .O(NLW_line0_i_130_O_UNCONNECTED[3:0]),
        .S({line0_i_185_n_1,line0_i_186_n_1,line0_i_187_n_1,line0_i_188_n_1}));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_131
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_131_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_132
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_132_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_133
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_133_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_134
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_134_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_135
       (.I0(dst_data_30w[14]),
        .I1(dst_data_30w[15]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_135_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_136
       (.I0(dst_data_30w[12]),
        .I1(dst_data_30w[13]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_136_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_137
       (.I0(dst_data_30w[10]),
        .I1(dst_data_30w[11]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_137_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_138
       (.I0(dst_data_30w[8]),
        .I1(dst_data_30w[9]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_138_n_1));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_14
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[20]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[2]));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_15
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[19]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[1]));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_16
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[18]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[0]));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_173
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_173_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_174
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_174_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_175
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_175_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_176
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_176_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_177
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_177_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_178
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_178_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_179
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_179_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_180
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_180_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_181
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_181_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_182
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_182_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_183
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_183_n_1));
  LUT3 #(
    .INIT(8'h7F)) 
    line0_i_184
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_184_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_185
       (.I0(dst_data_30w[6]),
        .I1(dst_data_30w[7]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_185_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_186
       (.I0(dst_data_30w[4]),
        .I1(dst_data_30w[5]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_186_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_187
       (.I0(dst_data_30w[2]),
        .I1(dst_data_30w[3]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_187_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_188
       (.I0(dst_data_30w[0]),
        .I1(dst_data_30w[1]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_188_n_1));
  CARRY4 line0_i_29
       (.CI(line0_i_45_n_1),
        .CO({NLW_line0_i_29_CO_UNCONNECTED[3],out_data2,line0_i_29_n_3,line0_i_29_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,line0_i_46_n_1,line0_i_47_n_1,1'b0}),
        .O(NLW_line0_i_29_O_UNCONNECTED[3:0]),
        .S({1'b0,line0_i_48_n_1,line0_i_49_n_1,line0_i_50_n_1}));
  CARRY4 line0_i_30
       (.CI(line0_i_51_n_1),
        .CO({NLW_line0_i_30_CO_UNCONNECTED[3],out_data1,line0_i_30_n_3,line0_i_30_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,dst_data_30,1'b0,1'b0}),
        .O(NLW_line0_i_30_O_UNCONNECTED[3:0]),
        .S({1'b0,line0_i_53_n_1,line0_i_54_n_1,line0_i_55_n_1}));
  CARRY4 line0_i_45
       (.CI(line0_i_79_n_1),
        .CO({line0_i_45_n_1,line0_i_45_n_2,line0_i_45_n_3,line0_i_45_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,line0_i_80_n_1}),
        .O(NLW_line0_i_45_O_UNCONNECTED[3:0]),
        .S({line0_i_81_n_1,line0_i_82_n_1,line0_i_83_n_1,line0_i_84_n_1}));
  LUT3 #(
    .INIT(8'h20)) 
    line0_i_46
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_46_n_1));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_47
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_47_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_48
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_48_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_49
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_49_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_50
       (.I0(dst_data_30w[24]),
        .I1(dst_data_30w[25]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_50_n_1));
  CARRY4 line0_i_51
       (.CI(line0_i_85_n_1),
        .CO({line0_i_51_n_1,line0_i_51_n_2,line0_i_51_n_3,line0_i_51_n_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,line0_i_86_n_1}),
        .O(NLW_line0_i_51_O_UNCONNECTED[3:0]),
        .S({line0_i_87_n_1,line0_i_88_n_1,line0_i_89_n_1,line0_i_90_n_1}));
  LUT2 #(
    .INIT(4'h8)) 
    line0_i_52
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[29]),
        .O(dst_data_30));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_53
       (.I0(dst_data_30w[28]),
        .I1(dst_data_30w[29]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_53_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_54
       (.I0(dst_data_30w[26]),
        .I1(dst_data_30w[27]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_54_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_55
       (.I0(dst_data_30w[24]),
        .I1(dst_data_30w[25]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_55_n_1));
  CARRY4 line0_i_79
       (.CI(line0_i_121_n_1),
        .CO({line0_i_79_n_1,line0_i_79_n_2,line0_i_79_n_3,line0_i_79_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_122_n_1,line0_i_123_n_1,line0_i_124_n_1,line0_i_125_n_1}),
        .O(NLW_line0_i_79_O_UNCONNECTED[3:0]),
        .S({line0_i_126_n_1,line0_i_127_n_1,line0_i_128_n_1,line0_i_129_n_1}));
  LUT3 #(
    .INIT(8'hE0)) 
    line0_i_80
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_80_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_81
       (.I0(dst_data_30w[22]),
        .I1(dst_data_30w[23]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_81_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_82
       (.I0(dst_data_30w[20]),
        .I1(dst_data_30w[21]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_82_n_1));
  LUT3 #(
    .INIT(8'h80)) 
    line0_i_83
       (.I0(dst_data_30w[18]),
        .I1(dst_data_30w[19]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_83_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_84
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_84_n_1));
  CARRY4 line0_i_85
       (.CI(line0_i_130_n_1),
        .CO({line0_i_85_n_1,line0_i_85_n_2,line0_i_85_n_3,line0_i_85_n_4}),
        .CYINIT(1'b0),
        .DI({line0_i_131_n_1,line0_i_132_n_1,line0_i_133_n_1,line0_i_134_n_1}),
        .O(NLW_line0_i_85_O_UNCONNECTED[3:0]),
        .S({line0_i_135_n_1,line0_i_136_n_1,line0_i_137_n_1,line0_i_138_n_1}));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_86
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_86_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_87
       (.I0(dst_data_30w[22]),
        .I1(dst_data_30w[23]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_87_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_88
       (.I0(dst_data_30w[20]),
        .I1(dst_data_30w[21]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_88_n_1));
  LUT3 #(
    .INIT(8'h1F)) 
    line0_i_89
       (.I0(dst_data_30w[18]),
        .I1(dst_data_30w[19]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_89_n_1));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    line0_i_9
       (.I0(rst_n_i_IBUF),
        .I1(dst_data_30w[25]),
        .I2(out_data2),
        .I3(out_data1),
        .O(din[7]));
  LUT3 #(
    .INIT(8'h20)) 
    line0_i_90
       (.I0(dst_data_30w[16]),
        .I1(dst_data_30w[17]),
        .I2(rst_n_i_IBUF),
        .O(line0_i_90_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u0
       (.A(Q[127:120]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,add_1_0_i_27__0_0[7],coef0[3],add_1_0_i_27__0_0[6],coef0[2],add_1_0_i_27__0_0[5],coef0[1:0],add_1_0_i_27__0_0[4:1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[0]_31 ));
  LUT6 #(
    .INIT(64'h0288228822882288)) 
    u0_i_12
       (.I0(add_1_0_i_27__0_0[0]),
        .I1(u11_i_7_0),
        .I2(u11_i_7_1),
        .I3(u11_i_7_2),
        .I4(u11_i_7_3),
        .I5(u11_i_7_4),
        .O(coef2[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u1
       (.A(Q[119:112]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_54__0_0[10],coef1[2],add_1_0_i_54__0_0[9:6],coef1[1:0],add_1_0_i_54__0_0[5],coef0[0],add_1_0_i_54__0_0[4:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[1]_32 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u10
       (.A(Q[47:40]),
        .B({1'b0,coef10[12:5],coef10[7],coef10[4:0],add_1_0_i_27__0_0[2:1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[10]_41 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u11
       (.A(Q[39:32]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_5_i_54__0_0[8:4],coef11,add_1_5_i_54__0_0[3:2],coef10[2],add_1_5_i_54__0_0[1:0],add_1_0_i_54__0_0[2:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[11]_42 ));
  LUT5 #(
    .INIT(32'h10FC0000)) 
    u11_i_12
       (.I0(u11_i_7_3),
        .I1(u11_i_7_0),
        .I2(u11_i_7_2),
        .I3(u11_i_7_1),
        .I4(u11_i_7_4),
        .O(u11_i_12_n_1));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    u11_i_13
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .O(u11_i_13_n_1));
  LUT6 #(
    .INIT(64'h0001100010001011)) 
    u11_i_6
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_1),
        .I4(u11_i_7_0),
        .I5(u11_i_7_2),
        .O(coef11[1]));
  LUT6 #(
    .INIT(64'h8F8F8F8F0F888F8F)) 
    u11_i_7
       (.I0(add_1_0_i_27__0_0[0]),
        .I1(u11_i_12_n_1),
        .I2(u11_i_13_n_1),
        .I3(u11_i_7_0),
        .I4(u11_i_7_2),
        .I5(u11_i_7_1),
        .O(coef11[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u12
       (.A(Q[31:24]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,add_1_6_i_27__0_0,coef12,add_1_4_i_27__0_0[0],add_1_4_i_54__0_0[1:0],add_1_0_i_27__0_0[2],add_1_0_i_54__0_0[1:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[12]_43 ));
  LUT6 #(
    .INIT(64'h0000000000451000)) 
    u12_i_6
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_1),
        .I2(u11_i_7_4),
        .I3(u11_i_7_0),
        .I4(u11_i_7_2),
        .I5(u11_i_7_3),
        .O(coef12));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u13
       (.A(Q[23:16]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],coef13[2],add_1_6_i_54__0_0[3],coef13[1],add_1_6_i_54__0_0[2:0],coef13[0],add_1_4_i_27__0_0[2:0],coef8[1:0],add_1_0_i_54__0_0[2],add_1_0_i_27__0_0[1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[13]_44 ));
  LUT6 #(
    .INIT(64'hFFFFFEFF00000000)) 
    u13_i_1
       (.I0(u11_i_7_3),
        .I1(u11_i_7_0),
        .I2(u11_i_7_2),
        .I3(u11_i_7_4),
        .I4(u11_i_7_1),
        .I5(add_1_0_i_27__0_0[0]),
        .O(coef13[2]));
  LUT6 #(
    .INIT(64'h0000000051455155)) 
    u13_i_3
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_1),
        .I2(u11_i_7_0),
        .I3(u11_i_7_2),
        .I4(u11_i_7_4),
        .I5(u11_i_7_3),
        .O(coef13[1]));
  LUT6 #(
    .INIT(64'h1111010011100011)) 
    u13_i_7
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_0),
        .I4(u11_i_7_1),
        .I5(u11_i_7_2),
        .O(coef13[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u14
       (.A(Q[15:8]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],coef14,add_1_5_i_54__0_0[3:2],coef10[2],add_1_5_i_54__0_0[1:0],add_1_0_i_54__0_0[2:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[14]_45 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u15
       (.A(Q[7:0]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,coef15,coef10[2:0],add_1_0_i_27__0_0[2:1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[15]_46 ));
  LUT6 #(
    .INIT(64'h1110110010111100)) 
    u1_i_2
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_1),
        .I4(u11_i_7_2),
        .I5(u11_i_7_0),
        .O(coef1[2]));
  LUT6 #(
    .INIT(64'h1101111101100010)) 
    u1_i_7
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_2),
        .I3(u11_i_7_0),
        .I4(u11_i_7_4),
        .I5(u11_i_7_1),
        .O(coef1[1]));
  LUT6 #(
    .INIT(64'h0000144000004000)) 
    u1_i_8
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_0),
        .I2(u11_i_7_1),
        .I3(u11_i_7_2),
        .I4(u11_i_7_3),
        .I5(u11_i_7_4),
        .O(coef1[0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u2
       (.A(Q[111:104]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_1_i_27__0_0[8:6],coef2[3],add_1_1_i_27__0_0[5],coef2[2],add_1_1_i_27__0_0[4:2],coef2[1],add_1_1_i_27__0_0[1:0],add_1_0_i_54__0_0[2],add_1_0_i_27__0_0[1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[2]_33 ));
  LUT6 #(
    .INIT(64'h0000000040045501)) 
    u2_i_10
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_0),
        .I2(u11_i_7_2),
        .I3(u11_i_7_1),
        .I4(u11_i_7_4),
        .I5(u11_i_7_3),
        .O(coef2[1]));
  LUT6 #(
    .INIT(64'h0051005000110055)) 
    u2_i_4
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_1),
        .I2(u11_i_7_4),
        .I3(u11_i_7_3),
        .I4(u11_i_7_0),
        .I5(u11_i_7_2),
        .O(coef2[3]));
  LUT6 #(
    .INIT(64'h0100110100101000)) 
    u2_i_6
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_2),
        .I4(u11_i_7_0),
        .I5(u11_i_7_1),
        .O(coef2[2]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u3
       (.A(Q[103:96]),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,coef3,add_1_1_i_54__0_0[6:2],coef2[1],add_1_1_i_54__0_0[1:0],add_1_0_i_27__0_0[2],add_1_0_i_54__0_0[1:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[3]_34 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    u3_i_1
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_1),
        .I4(u11_i_7_0),
        .I5(u11_i_7_2),
        .O(coef3));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u4
       (.A(Q[95:88]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],coef4,coef1[0],add_1_0_i_54__0_0[5],coef0[0],add_1_0_i_54__0_0[4:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[4]_35 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u5
       (.A(Q[87:80]),
        .B({1'b0,coef5[4],add_1_2_i_54__0_0[4],coef5[3:2],add_1_2_i_54__0_0[3:2],coef5[1],add_1_2_i_54__0_0[1],add_1_2_i_54__0_0[2],add_1_2_i_54__0_0[0],coef5[0],coef0[0],add_1_0_i_27__0_0[4:1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[5]_36 ));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    u5_i_1
       (.I0(u11_i_7_1),
        .I1(u11_i_7_4),
        .I2(u11_i_7_3),
        .I3(ch2_win_data__0),
        .O(coef5[4]));
  LUT6 #(
    .INIT(64'hFFFFFADB00000000)) 
    u5_i_10
       (.I0(u11_i_7_2),
        .I1(u11_i_7_1),
        .I2(u11_i_7_0),
        .I3(u11_i_7_4),
        .I4(u11_i_7_3),
        .I5(add_1_0_i_27__0_0[0]),
        .O(coef5[0]));
  LUT6 #(
    .INIT(64'h0000001500001115)) 
    u5_i_3
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_2),
        .I2(u11_i_7_1),
        .I3(u11_i_7_0),
        .I4(u11_i_7_3),
        .I5(u11_i_7_4),
        .O(coef5[3]));
  LUT6 #(
    .INIT(64'h0015005100450055)) 
    u5_i_4
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_1),
        .I2(u11_i_7_4),
        .I3(u11_i_7_3),
        .I4(u11_i_7_2),
        .I5(u11_i_7_0),
        .O(coef5[2]));
  LUT6 #(
    .INIT(64'h0101011110111110)) 
    u5_i_7
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_2),
        .I4(u11_i_7_0),
        .I5(u11_i_7_1),
        .O(coef5[1]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u6
       (.A(Q[79:72]),
        .B({1'b0,add_1_3_i_27__0_0[8:3],coef6,add_1_3_i_27__0_0[2],add_1_3_i_27__0_0[3],add_1_3_i_27__0_0[1:0],coef2[1],add_1_1_i_54__0_0[1:0],add_1_0_i_27__0_0[2],add_1_0_i_54__0_0[1:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[6]_37 ));
  LUT6 #(
    .INIT(64'h1110101101011101)) 
    u6_i_7
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_0),
        .I4(u11_i_7_2),
        .I5(u11_i_7_1),
        .O(coef6));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u7
       (.A(Q[71:64]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],coef7,add_1_1_i_27__0_0[3:2],coef2[1],add_1_1_i_27__0_0[1:0],add_1_0_i_54__0_0[2],add_1_0_i_27__0_0[1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[7]_38 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u8
       (.A(Q[63:56]),
        .B({add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],add_1_0_i_27__0_0[0],coef8[3],add_1_4_i_27__0_0[7:3],coef8[2],add_1_4_i_27__0_0[2:0],coef8[1:0],add_1_0_i_54__0_0[2],add_1_0_i_27__0_0[1],coef2[0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[8]_39 ));
  LUT6 #(
    .INIT(64'h0055005500150055)) 
    u8_i_1
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_0),
        .I2(u11_i_7_2),
        .I3(u11_i_7_3),
        .I4(u11_i_7_4),
        .I5(u11_i_7_1),
        .O(coef8[3]));
  LUT6 #(
    .INIT(64'h1010100010010111)) 
    u8_i_11
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_2),
        .I4(u11_i_7_0),
        .I5(u11_i_7_1),
        .O(coef8[1]));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT5 #(
    .INIT(32'h1C620000)) 
    u8_i_12
       (.I0(u11_i_7_0),
        .I1(u11_i_7_1),
        .I2(u11_i_7_2),
        .I3(u11_i_7_4),
        .I4(add_1_0_i_27__0_0[0]),
        .O(coef8[0]));
  LUT6 #(
    .INIT(64'h0000000041154505)) 
    u8_i_7
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_0),
        .I2(u11_i_7_4),
        .I3(u11_i_7_2),
        .I4(u11_i_7_1),
        .I5(u11_i_7_3),
        .O(coef8[2]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/mult_8x19/mult_8x19.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
  mult_8x19 u9
       (.A(Q[55:48]),
        .B({1'b0,coef9[2],add_1_4_i_54__0_0[8],coef9[1],add_1_4_i_54__0_0[7:3],add_1_4_i_54__0_0[5],coef9[0],add_1_4_i_54__0_0[2],add_1_4_i_27__0_0[0],add_1_4_i_54__0_0[1:0],add_1_0_i_27__0_0[2],add_1_0_i_54__0_0[1:0],add_1_0_i_27__0_0[0]}),
        .CLK(CLK),
        .P(\Pw[9]_40 ));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT3 #(
    .INIT(8'h20)) 
    u9_i_1
       (.I0(add_1_0_i_27__0_0[0]),
        .I1(u11_i_7_1),
        .I2(u11_i_7_4),
        .O(coef9[2]));
  LUT6 #(
    .INIT(64'h0000000044004545)) 
    u9_i_3
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_2),
        .I2(u11_i_7_1),
        .I3(u11_i_7_4),
        .I4(u11_i_7_0),
        .I5(u11_i_7_3),
        .O(coef9[1]));
  LUT6 #(
    .INIT(64'h1101111101001101)) 
    u9_i_9
       (.I0(ch2_win_data__0),
        .I1(u11_i_7_3),
        .I2(u11_i_7_4),
        .I3(u11_i_7_0),
        .I4(u11_i_7_2),
        .I5(u11_i_7_1),
        .O(coef9[0]));
endmodule

module Bic_SW
   (srst,
    D,
    win_tdata,
    CLK,
    E,
    rst_n_i_IBUF,
    srcBmp_axis_tdata_IBUF,
    \dout_r_reg[0][0]_0 ,
    \dout_r_reg[0][0]_1 ,
    \dout_r_reg[0][0]_2 ,
    \dout_r_reg[0][0]_3 ,
    \dout_r_reg[8][7]_0 ,
    \valid_r_reg[0] ,
    \valid_r_reg[0]_0 );
  output srst;
  output [0:0]D;
  output [127:0]win_tdata;
  input CLK;
  input [0:0]E;
  input rst_n_i_IBUF;
  input [7:0]srcBmp_axis_tdata_IBUF;
  input \dout_r_reg[0][0]_0 ;
  input \dout_r_reg[0][0]_1 ;
  input \dout_r_reg[0][0]_2 ;
  input \dout_r_reg[0][0]_3 ;
  input \dout_r_reg[8][7]_0 ;
  input \valid_r_reg[0] ;
  input \valid_r_reg[0]_0 ;

  wire CLK;
  wire [0:0]D;
  wire [0:0]E;
  wire [7:0]\InData[2]_12 ;
  wire [12:0]\data_count[2]_10 ;
  wire [7:0]\dout[0]_8 ;
  wire [7:0]\dout[1]_9 ;
  wire [7:0]\dout[2]_11 ;
  wire \dout_r_reg[0][0]_0 ;
  wire \dout_r_reg[0][0]_1 ;
  wire \dout_r_reg[0][0]_2 ;
  wire \dout_r_reg[0][0]_3 ;
  wire \dout_r_reg[8][7]_0 ;
  wire \genblk3[0].fifo_0_i_10__1_n_1 ;
  wire \genblk3[0].fifo_0_i_11__1_n_1 ;
  wire \genblk3[1].fifo_inst_i_2__1_n_1 ;
  wire \genblk3[1].fifo_inst_i_3__1_n_1 ;
  wire \genblk3[2].fifo_inst_i_2__1_n_1 ;
  wire \genblk3[2].fifo_inst_i_3__1_n_1 ;
  wire \genblk3[2].fifo_inst_i_4__1_n_1 ;
  wire [12:0]p_4_out;
  wire [12:0]p_7_out;
  wire rd_en0;
  wire rd_en03_out;
  wire rd_en05_out;
  wire rst_n_i_IBUF;
  wire [7:0]srcBmp_axis_tdata_IBUF;
  wire srst;
  wire \valid_r_reg[0] ;
  wire \valid_r_reg[0]_0 ;
  wire [127:0]win_tdata;
  wire \NLW_genblk3[0].fifo_0_empty_UNCONNECTED ;
  wire \NLW_genblk3[0].fifo_0_full_UNCONNECTED ;
  wire \NLW_genblk3[1].fifo_inst_empty_UNCONNECTED ;
  wire \NLW_genblk3[1].fifo_inst_full_UNCONNECTED ;
  wire \NLW_genblk3[2].fifo_inst_empty_UNCONNECTED ;
  wire \NLW_genblk3[2].fifo_inst_full_UNCONNECTED ;

  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [0]),
        .Q(win_tdata[0]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [1]),
        .Q(win_tdata[1]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [2]),
        .Q(win_tdata[2]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [3]),
        .Q(win_tdata[3]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [4]),
        .Q(win_tdata[4]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [5]),
        .Q(win_tdata[5]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [6]),
        .Q(win_tdata[6]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[2]_12 [7]),
        .Q(win_tdata[7]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[72]),
        .Q(win_tdata[80]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[73]),
        .Q(win_tdata[81]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[74]),
        .Q(win_tdata[82]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[75]),
        .Q(win_tdata[83]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[76]),
        .Q(win_tdata[84]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[77]),
        .Q(win_tdata[85]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[78]),
        .Q(win_tdata[86]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[79]),
        .Q(win_tdata[87]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[80]),
        .Q(win_tdata[88]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[81]),
        .Q(win_tdata[89]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[82]),
        .Q(win_tdata[90]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[83]),
        .Q(win_tdata[91]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[84]),
        .Q(win_tdata[92]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[85]),
        .Q(win_tdata[93]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[86]),
        .Q(win_tdata[94]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[87]),
        .Q(win_tdata[95]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [0]),
        .Q(win_tdata[96]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [1]),
        .Q(win_tdata[97]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [2]),
        .Q(win_tdata[98]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [3]),
        .Q(win_tdata[99]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [4]),
        .Q(win_tdata[100]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [5]),
        .Q(win_tdata[101]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [6]),
        .Q(win_tdata[102]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_11 [7]),
        .Q(win_tdata[103]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[96]),
        .Q(win_tdata[104]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[97]),
        .Q(win_tdata[105]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[98]),
        .Q(win_tdata[106]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[99]),
        .Q(win_tdata[107]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[100]),
        .Q(win_tdata[108]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[101]),
        .Q(win_tdata[109]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[102]),
        .Q(win_tdata[110]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[103]),
        .Q(win_tdata[111]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[104]),
        .Q(win_tdata[112]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[105]),
        .Q(win_tdata[113]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[106]),
        .Q(win_tdata[114]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[107]),
        .Q(win_tdata[115]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[108]),
        .Q(win_tdata[116]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[109]),
        .Q(win_tdata[117]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[110]),
        .Q(win_tdata[118]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[111]),
        .Q(win_tdata[119]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[112]),
        .Q(win_tdata[120]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[113]),
        .Q(win_tdata[121]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[114]),
        .Q(win_tdata[122]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[115]),
        .Q(win_tdata[123]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[116]),
        .Q(win_tdata[124]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[117]),
        .Q(win_tdata[125]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[118]),
        .Q(win_tdata[126]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[119]),
        .Q(win_tdata[127]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[0]),
        .Q(win_tdata[8]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[1]),
        .Q(win_tdata[9]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[2]),
        .Q(win_tdata[10]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[3]),
        .Q(win_tdata[11]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[4]),
        .Q(win_tdata[12]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[5]),
        .Q(win_tdata[13]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[6]),
        .Q(win_tdata[14]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[7]),
        .Q(win_tdata[15]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[8]),
        .Q(win_tdata[16]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[9]),
        .Q(win_tdata[17]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[10]),
        .Q(win_tdata[18]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[11]),
        .Q(win_tdata[19]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[12]),
        .Q(win_tdata[20]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[13]),
        .Q(win_tdata[21]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[14]),
        .Q(win_tdata[22]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[15]),
        .Q(win_tdata[23]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[16]),
        .Q(win_tdata[24]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[17]),
        .Q(win_tdata[25]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[18]),
        .Q(win_tdata[26]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[19]),
        .Q(win_tdata[27]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[20]),
        .Q(win_tdata[28]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[21]),
        .Q(win_tdata[29]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[22]),
        .Q(win_tdata[30]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[23]),
        .Q(win_tdata[31]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [0]),
        .Q(win_tdata[32]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [1]),
        .Q(win_tdata[33]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [2]),
        .Q(win_tdata[34]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [3]),
        .Q(win_tdata[35]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [4]),
        .Q(win_tdata[36]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [5]),
        .Q(win_tdata[37]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [6]),
        .Q(win_tdata[38]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_8 [7]),
        .Q(win_tdata[39]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[32]),
        .Q(win_tdata[40]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[33]),
        .Q(win_tdata[41]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[34]),
        .Q(win_tdata[42]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[35]),
        .Q(win_tdata[43]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[36]),
        .Q(win_tdata[44]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[37]),
        .Q(win_tdata[45]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[38]),
        .Q(win_tdata[46]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[39]),
        .Q(win_tdata[47]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[40]),
        .Q(win_tdata[48]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[41]),
        .Q(win_tdata[49]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[42]),
        .Q(win_tdata[50]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[43]),
        .Q(win_tdata[51]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[44]),
        .Q(win_tdata[52]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[45]),
        .Q(win_tdata[53]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[46]),
        .Q(win_tdata[54]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[47]),
        .Q(win_tdata[55]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[48]),
        .Q(win_tdata[56]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[49]),
        .Q(win_tdata[57]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[50]),
        .Q(win_tdata[58]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[51]),
        .Q(win_tdata[59]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[52]),
        .Q(win_tdata[60]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[53]),
        .Q(win_tdata[61]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[54]),
        .Q(win_tdata[62]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[55]),
        .Q(win_tdata[63]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [0]),
        .Q(win_tdata[64]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [1]),
        .Q(win_tdata[65]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [2]),
        .Q(win_tdata[66]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [3]),
        .Q(win_tdata[67]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [4]),
        .Q(win_tdata[68]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [5]),
        .Q(win_tdata[69]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [6]),
        .Q(win_tdata[70]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_9 [7]),
        .Q(win_tdata[71]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[64]),
        .Q(win_tdata[72]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[65]),
        .Q(win_tdata[73]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[66]),
        .Q(win_tdata[74]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[67]),
        .Q(win_tdata[75]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[68]),
        .Q(win_tdata[76]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[69]),
        .Q(win_tdata[77]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[70]),
        .Q(win_tdata[78]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[71]),
        .Q(win_tdata[79]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[0].fifo_0 
       (.clk(CLK),
        .data_count(p_7_out),
        .din(\InData[2]_12 ),
        .dout(\dout[0]_8 ),
        .empty(\NLW_genblk3[0].fifo_0_empty_UNCONNECTED ),
        .full(\NLW_genblk3[0].fifo_0_full_UNCONNECTED ),
        .rd_en(rd_en05_out),
        .srst(srst),
        .wr_en(E));
  LUT1 #(
    .INIT(2'h1)) 
    \genblk3[0].fifo_0_i_1 
       (.I0(rst_n_i_IBUF),
        .O(srst));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \genblk3[0].fifo_0_i_10__1 
       (.I0(p_7_out[11]),
        .I1(p_7_out[0]),
        .I2(p_7_out[3]),
        .I3(p_7_out[7]),
        .I4(p_7_out[5]),
        .I5(p_7_out[1]),
        .O(\genblk3[0].fifo_0_i_10__1_n_1 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \genblk3[0].fifo_0_i_11__1 
       (.I0(p_7_out[12]),
        .I1(p_7_out[10]),
        .I2(p_7_out[6]),
        .I3(p_7_out[2]),
        .O(\genblk3[0].fifo_0_i_11__1_n_1 ));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_1__0 
       (.I0(srcBmp_axis_tdata_IBUF[7]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [7]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_2 
       (.I0(srcBmp_axis_tdata_IBUF[6]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [6]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_3 
       (.I0(srcBmp_axis_tdata_IBUF[5]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [5]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_4 
       (.I0(srcBmp_axis_tdata_IBUF[4]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [4]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_5 
       (.I0(srcBmp_axis_tdata_IBUF[3]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [3]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_6 
       (.I0(srcBmp_axis_tdata_IBUF[2]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [2]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_7 
       (.I0(srcBmp_axis_tdata_IBUF[1]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [1]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_8 
       (.I0(srcBmp_axis_tdata_IBUF[0]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[2]_12 [0]));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \genblk3[0].fifo_0_i_9__0 
       (.I0(\genblk3[0].fifo_0_i_10__1_n_1 ),
        .I1(p_7_out[9]),
        .I2(p_7_out[4]),
        .I3(p_7_out[8]),
        .I4(\genblk3[0].fifo_0_i_11__1_n_1 ),
        .I5(\dout_r_reg[8][7]_0 ),
        .O(rd_en05_out));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[1].fifo_inst 
       (.clk(CLK),
        .data_count(p_4_out),
        .din(\dout[0]_8 ),
        .dout(\dout[1]_9 ),
        .empty(\NLW_genblk3[1].fifo_inst_empty_UNCONNECTED ),
        .full(\NLW_genblk3[1].fifo_inst_full_UNCONNECTED ),
        .rd_en(rd_en03_out),
        .srst(srst),
        .wr_en(rd_en05_out));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \genblk3[1].fifo_inst_i_1 
       (.I0(rd_en05_out),
        .I1(p_4_out[0]),
        .I2(p_4_out[12]),
        .I3(p_4_out[9]),
        .I4(\genblk3[1].fifo_inst_i_2__1_n_1 ),
        .I5(\genblk3[1].fifo_inst_i_3__1_n_1 ),
        .O(rd_en03_out));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \genblk3[1].fifo_inst_i_2__1 
       (.I0(p_4_out[5]),
        .I1(p_4_out[2]),
        .I2(p_4_out[1]),
        .I3(p_4_out[11]),
        .O(\genblk3[1].fifo_inst_i_2__1_n_1 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \genblk3[1].fifo_inst_i_3__1 
       (.I0(p_4_out[10]),
        .I1(p_4_out[3]),
        .I2(p_4_out[4]),
        .I3(p_4_out[8]),
        .I4(p_4_out[7]),
        .I5(p_4_out[6]),
        .O(\genblk3[1].fifo_inst_i_3__1_n_1 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[2].fifo_inst 
       (.clk(CLK),
        .data_count(\data_count[2]_10 ),
        .din(\dout[1]_9 ),
        .dout(\dout[2]_11 ),
        .empty(\NLW_genblk3[2].fifo_inst_empty_UNCONNECTED ),
        .full(\NLW_genblk3[2].fifo_inst_full_UNCONNECTED ),
        .rd_en(rd_en0),
        .srst(srst),
        .wr_en(rd_en03_out));
  LUT2 #(
    .INIT(4'h8)) 
    \genblk3[2].fifo_inst_i_1 
       (.I0(rd_en03_out),
        .I1(\genblk3[2].fifo_inst_i_2__1_n_1 ),
        .O(rd_en0));
  LUT5 #(
    .INIT(32'h02000000)) 
    \genblk3[2].fifo_inst_i_2__1 
       (.I0(\genblk3[2].fifo_inst_i_3__1_n_1 ),
        .I1(\genblk3[2].fifo_inst_i_4__1_n_1 ),
        .I2(\data_count[2]_10 [5]),
        .I3(\data_count[2]_10 [8]),
        .I4(\data_count[2]_10 [0]),
        .O(\genblk3[2].fifo_inst_i_2__1_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \genblk3[2].fifo_inst_i_3__1 
       (.I0(\data_count[2]_10 [11]),
        .I1(\data_count[2]_10 [10]),
        .I2(\data_count[2]_10 [7]),
        .I3(\data_count[2]_10 [1]),
        .I4(\data_count[2]_10 [2]),
        .I5(\data_count[2]_10 [4]),
        .O(\genblk3[2].fifo_inst_i_3__1_n_1 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \genblk3[2].fifo_inst_i_4__1 
       (.I0(\data_count[2]_10 [12]),
        .I1(\data_count[2]_10 [3]),
        .I2(\data_count[2]_10 [9]),
        .I3(\data_count[2]_10 [6]),
        .O(\genblk3[2].fifo_inst_i_4__1_n_1 ));
  LUT3 #(
    .INIT(8'h02)) 
    \valid_r[0]_i_1 
       (.I0(\genblk3[2].fifo_inst_i_2__1_n_1 ),
        .I1(\valid_r_reg[0] ),
        .I2(\valid_r_reg[0]_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "Bic_SW" *) 
module Bic_SW__xdcDup__1
   (\h_cnt_reg[4] ,
    \h_cnt_reg[6] ,
    \w_cnt_reg[0] ,
    \w_cnt_reg[0]_0 ,
    \w_cnt_reg[6] ,
    \w_cnt_reg[8] ,
    \h_cnt_reg[2] ,
    \bbstub_data_count[6] ,
    FSM_sequential_state_reg,
    win_tdata,
    CLK,
    srst,
    E,
    srcBmp_axis_tdata_IBUF,
    Q,
    \dout_r_reg[0][0]_0 ,
    \genblk3[0].fifo_0_i_9__1 ,
    win_tready,
    srcBmp_axis_tvalid_IBUF);
  output \h_cnt_reg[4] ;
  output \h_cnt_reg[6] ;
  output \w_cnt_reg[0] ;
  output \w_cnt_reg[0]_0 ;
  output \w_cnt_reg[6] ;
  output \w_cnt_reg[8] ;
  output \h_cnt_reg[2] ;
  output \bbstub_data_count[6] ;
  output FSM_sequential_state_reg;
  output [127:0]win_tdata;
  input CLK;
  input srst;
  input [0:0]E;
  input [7:0]srcBmp_axis_tdata_IBUF;
  input [9:0]Q;
  input [9:0]\dout_r_reg[0][0]_0 ;
  input \genblk3[0].fifo_0_i_9__1 ;
  input win_tready;
  input srcBmp_axis_tvalid_IBUF;

  wire CLK;
  wire [0:0]E;
  wire FSM_sequential_state_reg;
  wire [7:0]\InData[0]_14 ;
  wire [9:0]Q;
  wire \bbstub_data_count[6] ;
  wire [12:0]\data_count[2]_2 ;
  wire [7:0]\dout[0]_0 ;
  wire [7:0]\dout[1]_1 ;
  wire [7:0]\dout[2]_3 ;
  wire [9:0]\dout_r_reg[0][0]_0 ;
  wire \genblk3[0].fifo_0_i_12_n_1 ;
  wire \genblk3[0].fifo_0_i_13_n_1 ;
  wire \genblk3[0].fifo_0_i_9__1 ;
  wire \genblk3[1].fifo_inst_i_2_n_1 ;
  wire \genblk3[1].fifo_inst_i_3_n_1 ;
  wire \genblk3[2].fifo_inst_i_3_n_1 ;
  wire \genblk3[2].fifo_inst_i_4_n_1 ;
  wire \h_cnt_reg[2] ;
  wire \h_cnt_reg[4] ;
  wire \h_cnt_reg[6] ;
  wire [12:0]p_4_out;
  wire [12:0]p_7_out;
  wire rd_en0;
  wire rd_en03_out;
  wire rd_en05_out;
  wire [7:0]srcBmp_axis_tdata_IBUF;
  wire srcBmp_axis_tvalid_IBUF;
  wire srst;
  wire \w_cnt_reg[0] ;
  wire \w_cnt_reg[0]_0 ;
  wire \w_cnt_reg[6] ;
  wire \w_cnt_reg[8] ;
  wire [127:0]win_tdata;
  wire win_tready;
  wire win_tvalid_reg_i_6_n_1;
  wire \NLW_genblk3[0].fifo_0_empty_UNCONNECTED ;
  wire \NLW_genblk3[0].fifo_0_full_UNCONNECTED ;
  wire \NLW_genblk3[1].fifo_inst_empty_UNCONNECTED ;
  wire \NLW_genblk3[1].fifo_inst_full_UNCONNECTED ;
  wire \NLW_genblk3[2].fifo_inst_empty_UNCONNECTED ;
  wire \NLW_genblk3[2].fifo_inst_full_UNCONNECTED ;

  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [0]),
        .Q(win_tdata[0]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [1]),
        .Q(win_tdata[1]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [2]),
        .Q(win_tdata[2]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [3]),
        .Q(win_tdata[3]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [4]),
        .Q(win_tdata[4]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [5]),
        .Q(win_tdata[5]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [6]),
        .Q(win_tdata[6]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[0]_14 [7]),
        .Q(win_tdata[7]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[72]),
        .Q(win_tdata[80]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[73]),
        .Q(win_tdata[81]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[74]),
        .Q(win_tdata[82]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[75]),
        .Q(win_tdata[83]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[76]),
        .Q(win_tdata[84]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[77]),
        .Q(win_tdata[85]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[78]),
        .Q(win_tdata[86]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[79]),
        .Q(win_tdata[87]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[80]),
        .Q(win_tdata[88]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[81]),
        .Q(win_tdata[89]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[82]),
        .Q(win_tdata[90]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[83]),
        .Q(win_tdata[91]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[84]),
        .Q(win_tdata[92]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[85]),
        .Q(win_tdata[93]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[86]),
        .Q(win_tdata[94]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[87]),
        .Q(win_tdata[95]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [0]),
        .Q(win_tdata[96]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [1]),
        .Q(win_tdata[97]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [2]),
        .Q(win_tdata[98]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [3]),
        .Q(win_tdata[99]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [4]),
        .Q(win_tdata[100]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [5]),
        .Q(win_tdata[101]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [6]),
        .Q(win_tdata[102]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_3 [7]),
        .Q(win_tdata[103]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[96]),
        .Q(win_tdata[104]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[97]),
        .Q(win_tdata[105]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[98]),
        .Q(win_tdata[106]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[99]),
        .Q(win_tdata[107]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[100]),
        .Q(win_tdata[108]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[101]),
        .Q(win_tdata[109]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[102]),
        .Q(win_tdata[110]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[103]),
        .Q(win_tdata[111]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[104]),
        .Q(win_tdata[112]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[105]),
        .Q(win_tdata[113]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[106]),
        .Q(win_tdata[114]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[107]),
        .Q(win_tdata[115]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[108]),
        .Q(win_tdata[116]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[109]),
        .Q(win_tdata[117]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[110]),
        .Q(win_tdata[118]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[111]),
        .Q(win_tdata[119]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[112]),
        .Q(win_tdata[120]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[113]),
        .Q(win_tdata[121]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[114]),
        .Q(win_tdata[122]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[115]),
        .Q(win_tdata[123]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[116]),
        .Q(win_tdata[124]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[117]),
        .Q(win_tdata[125]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[118]),
        .Q(win_tdata[126]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[119]),
        .Q(win_tdata[127]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[0]),
        .Q(win_tdata[8]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[1]),
        .Q(win_tdata[9]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[2]),
        .Q(win_tdata[10]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[3]),
        .Q(win_tdata[11]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[4]),
        .Q(win_tdata[12]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[5]),
        .Q(win_tdata[13]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[6]),
        .Q(win_tdata[14]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[7]),
        .Q(win_tdata[15]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[8]),
        .Q(win_tdata[16]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[9]),
        .Q(win_tdata[17]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[10]),
        .Q(win_tdata[18]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[11]),
        .Q(win_tdata[19]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[12]),
        .Q(win_tdata[20]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[13]),
        .Q(win_tdata[21]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[14]),
        .Q(win_tdata[22]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[15]),
        .Q(win_tdata[23]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[16]),
        .Q(win_tdata[24]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[17]),
        .Q(win_tdata[25]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[18]),
        .Q(win_tdata[26]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[19]),
        .Q(win_tdata[27]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[20]),
        .Q(win_tdata[28]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[21]),
        .Q(win_tdata[29]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[22]),
        .Q(win_tdata[30]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[23]),
        .Q(win_tdata[31]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [0]),
        .Q(win_tdata[32]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [1]),
        .Q(win_tdata[33]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [2]),
        .Q(win_tdata[34]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [3]),
        .Q(win_tdata[35]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [4]),
        .Q(win_tdata[36]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [5]),
        .Q(win_tdata[37]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [6]),
        .Q(win_tdata[38]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_0 [7]),
        .Q(win_tdata[39]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[32]),
        .Q(win_tdata[40]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[33]),
        .Q(win_tdata[41]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[34]),
        .Q(win_tdata[42]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[35]),
        .Q(win_tdata[43]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[36]),
        .Q(win_tdata[44]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[37]),
        .Q(win_tdata[45]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[38]),
        .Q(win_tdata[46]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[39]),
        .Q(win_tdata[47]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[40]),
        .Q(win_tdata[48]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[41]),
        .Q(win_tdata[49]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[42]),
        .Q(win_tdata[50]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[43]),
        .Q(win_tdata[51]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[44]),
        .Q(win_tdata[52]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[45]),
        .Q(win_tdata[53]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[46]),
        .Q(win_tdata[54]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[47]),
        .Q(win_tdata[55]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[48]),
        .Q(win_tdata[56]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[49]),
        .Q(win_tdata[57]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[50]),
        .Q(win_tdata[58]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[51]),
        .Q(win_tdata[59]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[52]),
        .Q(win_tdata[60]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[53]),
        .Q(win_tdata[61]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[54]),
        .Q(win_tdata[62]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[55]),
        .Q(win_tdata[63]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [0]),
        .Q(win_tdata[64]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [1]),
        .Q(win_tdata[65]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [2]),
        .Q(win_tdata[66]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [3]),
        .Q(win_tdata[67]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [4]),
        .Q(win_tdata[68]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [5]),
        .Q(win_tdata[69]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [6]),
        .Q(win_tdata[70]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_1 [7]),
        .Q(win_tdata[71]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[64]),
        .Q(win_tdata[72]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[65]),
        .Q(win_tdata[73]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[66]),
        .Q(win_tdata[74]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[67]),
        .Q(win_tdata[75]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[68]),
        .Q(win_tdata[76]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[69]),
        .Q(win_tdata[77]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[70]),
        .Q(win_tdata[78]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[71]),
        .Q(win_tdata[79]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[0].fifo_0 
       (.clk(CLK),
        .data_count(p_7_out),
        .din(\InData[0]_14 ),
        .dout(\dout[0]_0 ),
        .empty(\NLW_genblk3[0].fifo_0_empty_UNCONNECTED ),
        .full(\NLW_genblk3[0].fifo_0_full_UNCONNECTED ),
        .rd_en(rd_en05_out),
        .srst(srst),
        .wr_en(E));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \genblk3[0].fifo_0_i_11 
       (.I0(\genblk3[0].fifo_0_i_12_n_1 ),
        .I1(p_7_out[9]),
        .I2(p_7_out[4]),
        .I3(p_7_out[8]),
        .I4(\genblk3[0].fifo_0_i_13_n_1 ),
        .I5(FSM_sequential_state_reg),
        .O(rd_en05_out));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \genblk3[0].fifo_0_i_12 
       (.I0(p_7_out[11]),
        .I1(p_7_out[0]),
        .I2(p_7_out[3]),
        .I3(p_7_out[7]),
        .I4(p_7_out[5]),
        .I5(p_7_out[1]),
        .O(\genblk3[0].fifo_0_i_12_n_1 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \genblk3[0].fifo_0_i_13 
       (.I0(p_7_out[12]),
        .I1(p_7_out[10]),
        .I2(p_7_out[6]),
        .I3(p_7_out[2]),
        .O(\genblk3[0].fifo_0_i_13_n_1 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \genblk3[0].fifo_0_i_14 
       (.I0(\genblk3[0].fifo_0_i_9__1 ),
        .I1(win_tready),
        .I2(srcBmp_axis_tvalid_IBUF),
        .O(FSM_sequential_state_reg));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_2__1 
       (.I0(srcBmp_axis_tdata_IBUF[7]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [7]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_3__1 
       (.I0(srcBmp_axis_tdata_IBUF[6]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [6]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_4__1 
       (.I0(srcBmp_axis_tdata_IBUF[5]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [5]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_5__1 
       (.I0(srcBmp_axis_tdata_IBUF[4]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [4]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_6__1 
       (.I0(srcBmp_axis_tdata_IBUF[3]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [3]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_7__1 
       (.I0(srcBmp_axis_tdata_IBUF[2]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [2]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_8__1 
       (.I0(srcBmp_axis_tdata_IBUF[1]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [1]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_9 
       (.I0(srcBmp_axis_tdata_IBUF[0]),
        .I1(\h_cnt_reg[4] ),
        .I2(\h_cnt_reg[6] ),
        .I3(\w_cnt_reg[0] ),
        .I4(\w_cnt_reg[0]_0 ),
        .O(\InData[0]_14 [0]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[1].fifo_inst 
       (.clk(CLK),
        .data_count(p_4_out),
        .din(\dout[0]_0 ),
        .dout(\dout[1]_1 ),
        .empty(\NLW_genblk3[1].fifo_inst_empty_UNCONNECTED ),
        .full(\NLW_genblk3[1].fifo_inst_full_UNCONNECTED ),
        .rd_en(rd_en03_out),
        .srst(srst),
        .wr_en(rd_en05_out));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \genblk3[1].fifo_inst_i_1__1 
       (.I0(rd_en05_out),
        .I1(p_4_out[0]),
        .I2(p_4_out[12]),
        .I3(p_4_out[9]),
        .I4(\genblk3[1].fifo_inst_i_2_n_1 ),
        .I5(\genblk3[1].fifo_inst_i_3_n_1 ),
        .O(rd_en03_out));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \genblk3[1].fifo_inst_i_2 
       (.I0(p_4_out[5]),
        .I1(p_4_out[2]),
        .I2(p_4_out[1]),
        .I3(p_4_out[11]),
        .O(\genblk3[1].fifo_inst_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \genblk3[1].fifo_inst_i_3 
       (.I0(p_4_out[10]),
        .I1(p_4_out[3]),
        .I2(p_4_out[4]),
        .I3(p_4_out[8]),
        .I4(p_4_out[7]),
        .I5(p_4_out[6]),
        .O(\genblk3[1].fifo_inst_i_3_n_1 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[2].fifo_inst 
       (.clk(CLK),
        .data_count(\data_count[2]_2 ),
        .din(\dout[1]_1 ),
        .dout(\dout[2]_3 ),
        .empty(\NLW_genblk3[2].fifo_inst_empty_UNCONNECTED ),
        .full(\NLW_genblk3[2].fifo_inst_full_UNCONNECTED ),
        .rd_en(rd_en0),
        .srst(srst),
        .wr_en(rd_en03_out));
  LUT2 #(
    .INIT(4'h2)) 
    \genblk3[2].fifo_inst_i_1__1 
       (.I0(rd_en03_out),
        .I1(\bbstub_data_count[6] ),
        .O(rd_en0));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \genblk3[2].fifo_inst_i_2 
       (.I0(\genblk3[2].fifo_inst_i_3_n_1 ),
        .I1(\genblk3[2].fifo_inst_i_4_n_1 ),
        .I2(\data_count[2]_2 [11]),
        .I3(\data_count[2]_2 [0]),
        .I4(\data_count[2]_2 [6]),
        .O(\bbstub_data_count[6] ));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
    \genblk3[2].fifo_inst_i_3 
       (.I0(\data_count[2]_2 [1]),
        .I1(\data_count[2]_2 [10]),
        .I2(\data_count[2]_2 [3]),
        .I3(\data_count[2]_2 [5]),
        .I4(\data_count[2]_2 [12]),
        .I5(\data_count[2]_2 [9]),
        .O(\genblk3[2].fifo_inst_i_3_n_1 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \genblk3[2].fifo_inst_i_4 
       (.I0(\data_count[2]_2 [8]),
        .I1(\data_count[2]_2 [2]),
        .I2(\data_count[2]_2 [7]),
        .I3(\data_count[2]_2 [4]),
        .O(\genblk3[2].fifo_inst_i_4_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \h_cnt[9]_i_4__0 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(\w_cnt_reg[6] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    srcBmp_axis_tready_OBUF_inst_i_2
       (.I0(\dout_r_reg[0][0]_0 [4]),
        .I1(\dout_r_reg[0][0]_0 [0]),
        .I2(\dout_r_reg[0][0]_0 [2]),
        .I3(\dout_r_reg[0][0]_0 [3]),
        .I4(\dout_r_reg[0][0]_0 [1]),
        .I5(\dout_r_reg[0][0]_0 [9]),
        .O(\h_cnt_reg[4] ));
  LUT4 #(
    .INIT(16'h0001)) 
    srcBmp_axis_tready_OBUF_inst_i_3
       (.I0(\dout_r_reg[0][0]_0 [6]),
        .I1(\dout_r_reg[0][0]_0 [5]),
        .I2(\dout_r_reg[0][0]_0 [7]),
        .I3(\dout_r_reg[0][0]_0 [8]),
        .O(\h_cnt_reg[6] ));
  LUT6 #(
    .INIT(64'h2800000000000000)) 
    srcBmp_axis_tready_OBUF_inst_i_4
       (.I0(\w_cnt_reg[6] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[9]),
        .I4(Q[7]),
        .I5(Q[8]),
        .O(\w_cnt_reg[0] ));
  LUT6 #(
    .INIT(64'h10FFFF1010101010)) 
    srcBmp_axis_tready_OBUF_inst_i_5
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\w_cnt_reg[8] ),
        .I3(\dout_r_reg[0][0]_0 [0]),
        .I4(\dout_r_reg[0][0]_0 [1]),
        .I5(\h_cnt_reg[2] ),
        .O(\w_cnt_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    srcBmp_axis_tready_OBUF_inst_i_7
       (.I0(\dout_r_reg[0][0]_0 [2]),
        .I1(\dout_r_reg[0][0]_0 [9]),
        .I2(\h_cnt_reg[6] ),
        .I3(\dout_r_reg[0][0]_0 [4]),
        .I4(\dout_r_reg[0][0]_0 [3]),
        .O(\h_cnt_reg[2] ));
  LUT5 #(
    .INIT(32'h00000001)) 
    win_tvalid_reg_i_4
       (.I0(win_tvalid_reg_i_6_n_1),
        .I1(Q[8]),
        .I2(Q[9]),
        .I3(Q[7]),
        .I4(Q[6]),
        .O(\w_cnt_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    win_tvalid_reg_i_6
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[5]),
        .O(win_tvalid_reg_i_6_n_1));
endmodule

(* ORIG_REF_NAME = "Bic_SW" *) 
module Bic_SW__xdcDup__2
   (\bbstub_data_count[8] ,
    win_tdata,
    CLK,
    srst,
    E,
    srcBmp_axis_tdata_IBUF,
    \dout_r_reg[0][0]_0 ,
    \dout_r_reg[0][0]_1 ,
    \dout_r_reg[0][0]_2 ,
    \dout_r_reg[0][0]_3 ,
    \dout_r_reg[8][7]_0 );
  output \bbstub_data_count[8] ;
  output [127:0]win_tdata;
  input CLK;
  input srst;
  input [0:0]E;
  input [7:0]srcBmp_axis_tdata_IBUF;
  input \dout_r_reg[0][0]_0 ;
  input \dout_r_reg[0][0]_1 ;
  input \dout_r_reg[0][0]_2 ;
  input \dout_r_reg[0][0]_3 ;
  input \dout_r_reg[8][7]_0 ;

  wire CLK;
  wire [0:0]E;
  wire [7:0]\InData[1]_13 ;
  wire \bbstub_data_count[8] ;
  wire [12:0]\data_count[2]_6 ;
  wire [7:0]\dout[0]_4 ;
  wire [7:0]\dout[1]_5 ;
  wire [7:0]\dout[2]_7 ;
  wire \dout_r_reg[0][0]_0 ;
  wire \dout_r_reg[0][0]_1 ;
  wire \dout_r_reg[0][0]_2 ;
  wire \dout_r_reg[0][0]_3 ;
  wire \dout_r_reg[8][7]_0 ;
  wire \genblk3[0].fifo_0_i_10__0_n_1 ;
  wire \genblk3[0].fifo_0_i_11__0_n_1 ;
  wire \genblk3[1].fifo_inst_i_2__0_n_1 ;
  wire \genblk3[1].fifo_inst_i_3__0_n_1 ;
  wire \genblk3[2].fifo_inst_i_3__0_n_1 ;
  wire \genblk3[2].fifo_inst_i_4__0_n_1 ;
  wire [12:0]p_4_out;
  wire [12:0]p_7_out;
  wire rd_en0;
  wire rd_en03_out;
  wire rd_en05_out;
  wire [7:0]srcBmp_axis_tdata_IBUF;
  wire srst;
  wire [127:0]win_tdata;
  wire \NLW_genblk3[0].fifo_0_empty_UNCONNECTED ;
  wire \NLW_genblk3[0].fifo_0_full_UNCONNECTED ;
  wire \NLW_genblk3[1].fifo_inst_empty_UNCONNECTED ;
  wire \NLW_genblk3[1].fifo_inst_full_UNCONNECTED ;
  wire \NLW_genblk3[2].fifo_inst_empty_UNCONNECTED ;
  wire \NLW_genblk3[2].fifo_inst_full_UNCONNECTED ;

  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [0]),
        .Q(win_tdata[0]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [1]),
        .Q(win_tdata[1]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [2]),
        .Q(win_tdata[2]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [3]),
        .Q(win_tdata[3]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [4]),
        .Q(win_tdata[4]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [5]),
        .Q(win_tdata[5]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [6]),
        .Q(win_tdata[6]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[0][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\InData[1]_13 [7]),
        .Q(win_tdata[7]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[72]),
        .Q(win_tdata[80]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[73]),
        .Q(win_tdata[81]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[74]),
        .Q(win_tdata[82]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[75]),
        .Q(win_tdata[83]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[76]),
        .Q(win_tdata[84]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[77]),
        .Q(win_tdata[85]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[78]),
        .Q(win_tdata[86]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[10][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[79]),
        .Q(win_tdata[87]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[80]),
        .Q(win_tdata[88]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[81]),
        .Q(win_tdata[89]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[82]),
        .Q(win_tdata[90]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[83]),
        .Q(win_tdata[91]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[84]),
        .Q(win_tdata[92]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[85]),
        .Q(win_tdata[93]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[86]),
        .Q(win_tdata[94]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[11][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[87]),
        .Q(win_tdata[95]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [0]),
        .Q(win_tdata[96]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [1]),
        .Q(win_tdata[97]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [2]),
        .Q(win_tdata[98]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [3]),
        .Q(win_tdata[99]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [4]),
        .Q(win_tdata[100]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [5]),
        .Q(win_tdata[101]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [6]),
        .Q(win_tdata[102]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[12][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[2]_7 [7]),
        .Q(win_tdata[103]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[96]),
        .Q(win_tdata[104]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[97]),
        .Q(win_tdata[105]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[98]),
        .Q(win_tdata[106]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[99]),
        .Q(win_tdata[107]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[100]),
        .Q(win_tdata[108]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[101]),
        .Q(win_tdata[109]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[102]),
        .Q(win_tdata[110]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[13][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[103]),
        .Q(win_tdata[111]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[104]),
        .Q(win_tdata[112]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[105]),
        .Q(win_tdata[113]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[106]),
        .Q(win_tdata[114]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[107]),
        .Q(win_tdata[115]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[108]),
        .Q(win_tdata[116]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[109]),
        .Q(win_tdata[117]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[110]),
        .Q(win_tdata[118]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[14][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[111]),
        .Q(win_tdata[119]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[112]),
        .Q(win_tdata[120]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[113]),
        .Q(win_tdata[121]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[114]),
        .Q(win_tdata[122]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[115]),
        .Q(win_tdata[123]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[116]),
        .Q(win_tdata[124]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[117]),
        .Q(win_tdata[125]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[118]),
        .Q(win_tdata[126]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[15][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[119]),
        .Q(win_tdata[127]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[0]),
        .Q(win_tdata[8]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[1]),
        .Q(win_tdata[9]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[2]),
        .Q(win_tdata[10]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[3]),
        .Q(win_tdata[11]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[4]),
        .Q(win_tdata[12]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[5]),
        .Q(win_tdata[13]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[6]),
        .Q(win_tdata[14]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[1][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[7]),
        .Q(win_tdata[15]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[8]),
        .Q(win_tdata[16]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[9]),
        .Q(win_tdata[17]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[10]),
        .Q(win_tdata[18]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[11]),
        .Q(win_tdata[19]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[12]),
        .Q(win_tdata[20]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[13]),
        .Q(win_tdata[21]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[14]),
        .Q(win_tdata[22]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[2][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[15]),
        .Q(win_tdata[23]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[16]),
        .Q(win_tdata[24]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[17]),
        .Q(win_tdata[25]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[18]),
        .Q(win_tdata[26]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[19]),
        .Q(win_tdata[27]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[20]),
        .Q(win_tdata[28]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[21]),
        .Q(win_tdata[29]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[22]),
        .Q(win_tdata[30]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[3][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[23]),
        .Q(win_tdata[31]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [0]),
        .Q(win_tdata[32]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [1]),
        .Q(win_tdata[33]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [2]),
        .Q(win_tdata[34]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [3]),
        .Q(win_tdata[35]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [4]),
        .Q(win_tdata[36]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [5]),
        .Q(win_tdata[37]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [6]),
        .Q(win_tdata[38]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[4][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[0]_4 [7]),
        .Q(win_tdata[39]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[32]),
        .Q(win_tdata[40]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[33]),
        .Q(win_tdata[41]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[34]),
        .Q(win_tdata[42]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[35]),
        .Q(win_tdata[43]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[36]),
        .Q(win_tdata[44]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[37]),
        .Q(win_tdata[45]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[38]),
        .Q(win_tdata[46]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[5][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[39]),
        .Q(win_tdata[47]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[40]),
        .Q(win_tdata[48]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[41]),
        .Q(win_tdata[49]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[42]),
        .Q(win_tdata[50]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[43]),
        .Q(win_tdata[51]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[44]),
        .Q(win_tdata[52]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[45]),
        .Q(win_tdata[53]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[46]),
        .Q(win_tdata[54]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[6][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[47]),
        .Q(win_tdata[55]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[48]),
        .Q(win_tdata[56]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[49]),
        .Q(win_tdata[57]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[50]),
        .Q(win_tdata[58]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[51]),
        .Q(win_tdata[59]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[52]),
        .Q(win_tdata[60]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[53]),
        .Q(win_tdata[61]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[54]),
        .Q(win_tdata[62]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[7][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[55]),
        .Q(win_tdata[63]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [0]),
        .Q(win_tdata[64]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [1]),
        .Q(win_tdata[65]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [2]),
        .Q(win_tdata[66]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [3]),
        .Q(win_tdata[67]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [4]),
        .Q(win_tdata[68]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [5]),
        .Q(win_tdata[69]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [6]),
        .Q(win_tdata[70]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[8][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(\dout[1]_5 [7]),
        .Q(win_tdata[71]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][0] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[64]),
        .Q(win_tdata[72]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][1] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[65]),
        .Q(win_tdata[73]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][2] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[66]),
        .Q(win_tdata[74]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][3] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[67]),
        .Q(win_tdata[75]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][4] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[68]),
        .Q(win_tdata[76]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][5] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[69]),
        .Q(win_tdata[77]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][6] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[70]),
        .Q(win_tdata[78]));
  FDCE #(
    .INIT(1'b0)) 
    \dout_r_reg[9][7] 
       (.C(CLK),
        .CE(rd_en0),
        .CLR(srst),
        .D(win_tdata[71]),
        .Q(win_tdata[79]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[0].fifo_0 
       (.clk(CLK),
        .data_count(p_7_out),
        .din(\InData[1]_13 ),
        .dout(\dout[0]_4 ),
        .empty(\NLW_genblk3[0].fifo_0_empty_UNCONNECTED ),
        .full(\NLW_genblk3[0].fifo_0_full_UNCONNECTED ),
        .rd_en(rd_en05_out),
        .srst(srst),
        .wr_en(E));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \genblk3[0].fifo_0_i_10__0 
       (.I0(p_7_out[8]),
        .I1(p_7_out[0]),
        .I2(p_7_out[5]),
        .I3(p_7_out[4]),
        .I4(p_7_out[12]),
        .I5(p_7_out[7]),
        .O(\genblk3[0].fifo_0_i_10__0_n_1 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \genblk3[0].fifo_0_i_11__0 
       (.I0(p_7_out[10]),
        .I1(p_7_out[3]),
        .I2(p_7_out[6]),
        .I3(p_7_out[2]),
        .O(\genblk3[0].fifo_0_i_11__0_n_1 ));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_1__1 
       (.I0(srcBmp_axis_tdata_IBUF[7]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [7]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_2__0 
       (.I0(srcBmp_axis_tdata_IBUF[6]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [6]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_3__0 
       (.I0(srcBmp_axis_tdata_IBUF[5]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [5]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_4__0 
       (.I0(srcBmp_axis_tdata_IBUF[4]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [4]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_5__0 
       (.I0(srcBmp_axis_tdata_IBUF[3]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [3]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_6__0 
       (.I0(srcBmp_axis_tdata_IBUF[2]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [2]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_7__0 
       (.I0(srcBmp_axis_tdata_IBUF[1]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [1]));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \genblk3[0].fifo_0_i_8__0 
       (.I0(srcBmp_axis_tdata_IBUF[0]),
        .I1(\dout_r_reg[0][0]_0 ),
        .I2(\dout_r_reg[0][0]_1 ),
        .I3(\dout_r_reg[0][0]_2 ),
        .I4(\dout_r_reg[0][0]_3 ),
        .O(\InData[1]_13 [0]));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \genblk3[0].fifo_0_i_9__1 
       (.I0(\genblk3[0].fifo_0_i_10__0_n_1 ),
        .I1(p_7_out[9]),
        .I2(p_7_out[11]),
        .I3(p_7_out[1]),
        .I4(\genblk3[0].fifo_0_i_11__0_n_1 ),
        .I5(\dout_r_reg[8][7]_0 ),
        .O(rd_en05_out));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[1].fifo_inst 
       (.clk(CLK),
        .data_count(p_4_out),
        .din(\dout[0]_4 ),
        .dout(\dout[1]_5 ),
        .empty(\NLW_genblk3[1].fifo_inst_empty_UNCONNECTED ),
        .full(\NLW_genblk3[1].fifo_inst_full_UNCONNECTED ),
        .rd_en(rd_en03_out),
        .srst(srst),
        .wr_en(rd_en05_out));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \genblk3[1].fifo_inst_i_1__0 
       (.I0(rd_en05_out),
        .I1(p_4_out[0]),
        .I2(p_4_out[12]),
        .I3(p_4_out[9]),
        .I4(\genblk3[1].fifo_inst_i_2__0_n_1 ),
        .I5(\genblk3[1].fifo_inst_i_3__0_n_1 ),
        .O(rd_en03_out));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \genblk3[1].fifo_inst_i_2__0 
       (.I0(p_4_out[5]),
        .I1(p_4_out[2]),
        .I2(p_4_out[1]),
        .I3(p_4_out[11]),
        .O(\genblk3[1].fifo_inst_i_2__0_n_1 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \genblk3[1].fifo_inst_i_3__0 
       (.I0(p_4_out[10]),
        .I1(p_4_out[3]),
        .I2(p_4_out[4]),
        .I3(p_4_out[8]),
        .I4(p_4_out[7]),
        .I5(p_4_out[6]),
        .O(\genblk3[1].fifo_inst_i_3__0_n_1 ));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_8x4096/fifo_8x4096.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_8x4096 \genblk3[2].fifo_inst 
       (.clk(CLK),
        .data_count(\data_count[2]_6 ),
        .din(\dout[1]_5 ),
        .dout(\dout[2]_7 ),
        .empty(\NLW_genblk3[2].fifo_inst_empty_UNCONNECTED ),
        .full(\NLW_genblk3[2].fifo_inst_full_UNCONNECTED ),
        .rd_en(rd_en0),
        .srst(srst),
        .wr_en(rd_en03_out));
  LUT2 #(
    .INIT(4'h2)) 
    \genblk3[2].fifo_inst_i_1__0 
       (.I0(rd_en03_out),
        .I1(\bbstub_data_count[8] ),
        .O(rd_en0));
  LUT5 #(
    .INIT(32'hFFEFFFFF)) 
    \genblk3[2].fifo_inst_i_2__0 
       (.I0(\genblk3[2].fifo_inst_i_3__0_n_1 ),
        .I1(\genblk3[2].fifo_inst_i_4__0_n_1 ),
        .I2(\data_count[2]_6 [9]),
        .I3(\data_count[2]_6 [4]),
        .I4(\data_count[2]_6 [8]),
        .O(\bbstub_data_count[8] ));
  LUT6 #(
    .INIT(64'hFDFFFFFFFFFFFFFF)) 
    \genblk3[2].fifo_inst_i_3__0 
       (.I0(\data_count[2]_6 [0]),
        .I1(\data_count[2]_6 [10]),
        .I2(\data_count[2]_6 [5]),
        .I3(\data_count[2]_6 [7]),
        .I4(\data_count[2]_6 [6]),
        .I5(\data_count[2]_6 [1]),
        .O(\genblk3[2].fifo_inst_i_3__0_n_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \genblk3[2].fifo_inst_i_4__0 
       (.I0(\data_count[2]_6 [11]),
        .I1(\data_count[2]_6 [12]),
        .I2(\data_count[2]_6 [2]),
        .I3(\data_count[2]_6 [3]),
        .O(\genblk3[2].fifo_inst_i_4__0_n_1 ));
endmodule

module Bic_stream2bmp
   (full,
    m_axis_video_tvalid_OBUF,
    valid_d,
    m_axis_video_tlast_OBUF,
    Q,
    CLK,
    valid_d_reg_0,
    din,
    wr_en,
    valid_d_reg_1);
  output full;
  output [0:0]m_axis_video_tvalid_OBUF;
  output valid_d;
  output [0:0]m_axis_video_tlast_OBUF;
  output [23:0]Q;
  input CLK;
  input valid_d_reg_0;
  input [24:0]din;
  input wr_en;
  input valid_d_reg_1;

  wire CLK;
  wire [23:0]Q;
  wire [24:0]bmp_header_dout;
  wire bmp_header_empty;
  wire bmp_header_empty_r;
  wire bmp_header_rd;
  wire [24:0]din;
  wire full;
  wire \header_cnt[4]_i_2_n_1 ;
  wire [4:0]header_cnt_reg;
  wire \m_axis_video_tdata[0]_i_1_n_1 ;
  wire \m_axis_video_tdata[10]_i_1_n_1 ;
  wire \m_axis_video_tdata[10]_i_2_n_1 ;
  wire \m_axis_video_tdata[11]_i_1_n_1 ;
  wire \m_axis_video_tdata[11]_i_2_n_1 ;
  wire \m_axis_video_tdata[12]_i_1_n_1 ;
  wire \m_axis_video_tdata[12]_i_2_n_1 ;
  wire \m_axis_video_tdata[13]_i_1_n_1 ;
  wire \m_axis_video_tdata[13]_i_2_n_1 ;
  wire \m_axis_video_tdata[13]_i_3_n_1 ;
  wire \m_axis_video_tdata[14]_i_1_n_1 ;
  wire \m_axis_video_tdata[14]_i_2_n_1 ;
  wire \m_axis_video_tdata[14]_i_3_n_1 ;
  wire \m_axis_video_tdata[15]_i_1_n_1 ;
  wire \m_axis_video_tdata[16]_i_1_n_1 ;
  wire \m_axis_video_tdata[16]_i_2_n_1 ;
  wire \m_axis_video_tdata[17]_i_1_n_1 ;
  wire \m_axis_video_tdata[18]_i_1_n_1 ;
  wire \m_axis_video_tdata[18]_i_2_n_1 ;
  wire \m_axis_video_tdata[18]_i_3_n_1 ;
  wire \m_axis_video_tdata[19]_i_1_n_1 ;
  wire \m_axis_video_tdata[19]_i_2_n_1 ;
  wire \m_axis_video_tdata[19]_i_3_n_1 ;
  wire \m_axis_video_tdata[1]_i_1_n_1 ;
  wire \m_axis_video_tdata[20]_i_1_n_1 ;
  wire \m_axis_video_tdata[20]_i_2_n_1 ;
  wire \m_axis_video_tdata[21]_i_1_n_1 ;
  wire \m_axis_video_tdata[21]_i_2_n_1 ;
  wire \m_axis_video_tdata[21]_i_3_n_1 ;
  wire \m_axis_video_tdata[22]_i_1_n_1 ;
  wire \m_axis_video_tdata[22]_i_2_n_1 ;
  wire \m_axis_video_tdata[23]_i_1_n_1 ;
  wire \m_axis_video_tdata[23]_i_2_n_1 ;
  wire \m_axis_video_tdata[23]_i_3_n_1 ;
  wire \m_axis_video_tdata[2]_i_1_n_1 ;
  wire \m_axis_video_tdata[3]_i_1_n_1 ;
  wire \m_axis_video_tdata[3]_i_2_n_1 ;
  wire \m_axis_video_tdata[3]_i_3_n_1 ;
  wire \m_axis_video_tdata[4]_i_1_n_1 ;
  wire \m_axis_video_tdata[4]_i_2_n_1 ;
  wire \m_axis_video_tdata[4]_i_3_n_1 ;
  wire \m_axis_video_tdata[5]_i_1_n_1 ;
  wire \m_axis_video_tdata[5]_i_2_n_1 ;
  wire \m_axis_video_tdata[5]_i_3_n_1 ;
  wire \m_axis_video_tdata[5]_i_4_n_1 ;
  wire \m_axis_video_tdata[6]_i_1_n_1 ;
  wire \m_axis_video_tdata[6]_i_2_n_1 ;
  wire \m_axis_video_tdata[6]_i_3_n_1 ;
  wire \m_axis_video_tdata[6]_i_4_n_1 ;
  wire \m_axis_video_tdata[6]_i_5_n_1 ;
  wire \m_axis_video_tdata[7]_i_1_n_1 ;
  wire \m_axis_video_tdata[7]_i_2_n_1 ;
  wire \m_axis_video_tdata[8]_i_1_n_1 ;
  wire \m_axis_video_tdata[8]_i_2_n_1 ;
  wire \m_axis_video_tdata[9]_i_1_n_1 ;
  wire \m_axis_video_tdata[9]_i_2_n_1 ;
  wire \m_axis_video_tdata[9]_i_3_n_1 ;
  wire [0:0]m_axis_video_tlast_OBUF;
  wire \m_axis_video_tlast_OBUF[0]_inst_i_2_n_1 ;
  wire \m_axis_video_tlast_OBUF[0]_inst_i_3_n_1 ;
  wire \m_axis_video_tlast_OBUF[0]_inst_i_4_n_1 ;
  wire \m_axis_video_tlast_OBUF[0]_inst_i_5_n_1 ;
  wire \m_axis_video_tlast_OBUF[0]_inst_i_6_n_1 ;
  wire [0:0]m_axis_video_tvalid_OBUF;
  wire [1:0]n_state;
  wire [4:0]p_0_in__0;
  wire pixel_cnt1;
  wire \pixel_cnt[0]_i_1_n_1 ;
  wire \pixel_cnt[0]_i_4_n_1 ;
  wire \pixel_cnt[0]_i_5_n_1 ;
  wire \pixel_cnt[0]_i_6_n_1 ;
  wire \pixel_cnt[0]_i_7_n_1 ;
  wire \pixel_cnt[0]_i_8_n_1 ;
  wire \pixel_cnt[0]_i_9_n_1 ;
  wire \pixel_cnt[12]_i_2_n_1 ;
  wire \pixel_cnt[12]_i_3_n_1 ;
  wire \pixel_cnt[12]_i_4_n_1 ;
  wire \pixel_cnt[12]_i_5_n_1 ;
  wire \pixel_cnt[16]_i_2_n_1 ;
  wire \pixel_cnt[16]_i_3_n_1 ;
  wire \pixel_cnt[16]_i_4_n_1 ;
  wire \pixel_cnt[16]_i_5_n_1 ;
  wire \pixel_cnt[20]_i_2_n_1 ;
  wire \pixel_cnt[20]_i_3_n_1 ;
  wire \pixel_cnt[20]_i_4_n_1 ;
  wire \pixel_cnt[4]_i_2_n_1 ;
  wire \pixel_cnt[4]_i_3_n_1 ;
  wire \pixel_cnt[4]_i_4_n_1 ;
  wire \pixel_cnt[4]_i_5_n_1 ;
  wire \pixel_cnt[8]_i_2_n_1 ;
  wire \pixel_cnt[8]_i_3_n_1 ;
  wire \pixel_cnt[8]_i_4_n_1 ;
  wire \pixel_cnt[8]_i_5_n_1 ;
  wire [23:0]pixel_cnt_reg;
  wire \pixel_cnt_reg[0]_i_2_n_1 ;
  wire \pixel_cnt_reg[0]_i_2_n_2 ;
  wire \pixel_cnt_reg[0]_i_2_n_3 ;
  wire \pixel_cnt_reg[0]_i_2_n_4 ;
  wire \pixel_cnt_reg[0]_i_2_n_5 ;
  wire \pixel_cnt_reg[0]_i_2_n_6 ;
  wire \pixel_cnt_reg[0]_i_2_n_7 ;
  wire \pixel_cnt_reg[0]_i_2_n_8 ;
  wire \pixel_cnt_reg[12]_i_1_n_1 ;
  wire \pixel_cnt_reg[12]_i_1_n_2 ;
  wire \pixel_cnt_reg[12]_i_1_n_3 ;
  wire \pixel_cnt_reg[12]_i_1_n_4 ;
  wire \pixel_cnt_reg[12]_i_1_n_5 ;
  wire \pixel_cnt_reg[12]_i_1_n_6 ;
  wire \pixel_cnt_reg[12]_i_1_n_7 ;
  wire \pixel_cnt_reg[12]_i_1_n_8 ;
  wire \pixel_cnt_reg[16]_i_1_n_1 ;
  wire \pixel_cnt_reg[16]_i_1_n_2 ;
  wire \pixel_cnt_reg[16]_i_1_n_3 ;
  wire \pixel_cnt_reg[16]_i_1_n_4 ;
  wire \pixel_cnt_reg[16]_i_1_n_5 ;
  wire \pixel_cnt_reg[16]_i_1_n_6 ;
  wire \pixel_cnt_reg[16]_i_1_n_7 ;
  wire \pixel_cnt_reg[16]_i_1_n_8 ;
  wire \pixel_cnt_reg[20]_i_1_n_1 ;
  wire \pixel_cnt_reg[20]_i_1_n_3 ;
  wire \pixel_cnt_reg[20]_i_1_n_4 ;
  wire \pixel_cnt_reg[20]_i_1_n_6 ;
  wire \pixel_cnt_reg[20]_i_1_n_7 ;
  wire \pixel_cnt_reg[20]_i_1_n_8 ;
  wire \pixel_cnt_reg[4]_i_1_n_1 ;
  wire \pixel_cnt_reg[4]_i_1_n_2 ;
  wire \pixel_cnt_reg[4]_i_1_n_3 ;
  wire \pixel_cnt_reg[4]_i_1_n_4 ;
  wire \pixel_cnt_reg[4]_i_1_n_5 ;
  wire \pixel_cnt_reg[4]_i_1_n_6 ;
  wire \pixel_cnt_reg[4]_i_1_n_7 ;
  wire \pixel_cnt_reg[4]_i_1_n_8 ;
  wire \pixel_cnt_reg[8]_i_1_n_1 ;
  wire \pixel_cnt_reg[8]_i_1_n_2 ;
  wire \pixel_cnt_reg[8]_i_1_n_3 ;
  wire \pixel_cnt_reg[8]_i_1_n_4 ;
  wire \pixel_cnt_reg[8]_i_1_n_5 ;
  wire \pixel_cnt_reg[8]_i_1_n_6 ;
  wire \pixel_cnt_reg[8]_i_1_n_7 ;
  wire \pixel_cnt_reg[8]_i_1_n_8 ;
  wire \state[2]_i_1_n_1 ;
  wire \state[2]_i_2_n_1 ;
  wire \state[2]_i_3_n_1 ;
  wire \state[2]_i_4_n_1 ;
  wire \state[2]_i_5_n_1 ;
  wire \state[2]_i_6_n_1 ;
  wire \state[2]_i_7_n_1 ;
  wire \state[2]_i_8_n_1 ;
  wire [2:0]state_r;
  wire [2:0]state_reg;
  wire valid_d;
  wire valid_d_reg_0;
  wire valid_d_reg_1;
  wire wr_en;
  wire [5:0]NLW_bmp_header_inst_data_count_UNCONNECTED;
  wire [2:2]\NLW_pixel_cnt_reg[20]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_pixel_cnt_reg[20]_i_1_O_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    bmp_header_empty_r_reg
       (.C(CLK),
        .CE(1'b1),
        .D(bmp_header_empty),
        .Q(bmp_header_empty_r),
        .R(1'b0));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_25x32/fifo_25x32.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_25x32 bmp_header_inst
       (.clk(CLK),
        .data_count(NLW_bmp_header_inst_data_count_UNCONNECTED[5:0]),
        .din(din),
        .dout(bmp_header_dout),
        .empty(bmp_header_empty),
        .full(full),
        .rd_en(bmp_header_rd),
        .srst(valid_d_reg_0),
        .wr_en(wr_en));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h00040304)) 
    bmp_header_inst_i_27
       (.I0(bmp_header_dout[24]),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(state_reg[2]),
        .I4(bmp_header_empty),
        .O(bmp_header_rd));
  LUT6 #(
    .INIT(64'h0000000011111115)) 
    \header_cnt[0]_i_1 
       (.I0(\header_cnt[4]_i_2_n_1 ),
        .I1(header_cnt_reg[4]),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[3]),
        .I5(header_cnt_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h0110)) 
    \header_cnt[1]_i_1 
       (.I0(header_cnt_reg[4]),
        .I1(\header_cnt[4]_i_2_n_1 ),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[0]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h01111000)) 
    \header_cnt[2]_i_1 
       (.I0(header_cnt_reg[4]),
        .I1(\header_cnt[4]_i_2_n_1 ),
        .I2(header_cnt_reg[0]),
        .I3(header_cnt_reg[1]),
        .I4(header_cnt_reg[2]),
        .O(p_0_in__0[2]));
  LUT6 #(
    .INIT(64'h0111111110000000)) 
    \header_cnt[3]_i_1 
       (.I0(header_cnt_reg[4]),
        .I1(\header_cnt[4]_i_2_n_1 ),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[0]),
        .I4(header_cnt_reg[2]),
        .I5(header_cnt_reg[3]),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'h0000000140000000)) 
    \header_cnt[4]_i_1 
       (.I0(\header_cnt[4]_i_2_n_1 ),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[0]),
        .I3(header_cnt_reg[1]),
        .I4(header_cnt_reg[3]),
        .I5(header_cnt_reg[4]),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \header_cnt[4]_i_2 
       (.I0(state_reg[0]),
        .I1(state_reg[1]),
        .I2(state_reg[2]),
        .O(\header_cnt[4]_i_2_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \header_cnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(p_0_in__0[0]),
        .Q(header_cnt_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \header_cnt_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(p_0_in__0[1]),
        .Q(header_cnt_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \header_cnt_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(p_0_in__0[2]),
        .Q(header_cnt_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \header_cnt_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(p_0_in__0[3]),
        .Q(header_cnt_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \header_cnt_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(p_0_in__0[4]),
        .Q(header_cnt_reg[4]));
  LUT5 #(
    .INIT(32'hFFFEEFEF)) 
    \m_axis_video_tdata[0]_i_1 
       (.I0(\m_axis_video_tdata[4]_i_2_n_1 ),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(bmp_header_dout[16]),
        .I4(state_reg[2]),
        .O(\m_axis_video_tdata[0]_i_1_n_1 ));
  LUT5 #(
    .INIT(32'hFFEEFFFB)) 
    \m_axis_video_tdata[10]_i_1 
       (.I0(\m_axis_video_tdata[10]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(bmp_header_dout[10]),
        .I3(state_reg[0]),
        .I4(state_reg[1]),
        .O(\m_axis_video_tdata[10]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h888A88A888808882)) 
    \m_axis_video_tdata[10]_i_2 
       (.I0(state_reg[1]),
        .I1(header_cnt_reg[4]),
        .I2(header_cnt_reg[2]),
        .I3(header_cnt_reg[3]),
        .I4(header_cnt_reg[0]),
        .I5(header_cnt_reg[1]),
        .O(\m_axis_video_tdata[10]_i_2_n_1 ));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_axis_video_tdata[11]_i_1 
       (.I0(\m_axis_video_tdata[11]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(bmp_header_dout[11]),
        .I3(\m_axis_video_tdata[21]_i_3_n_1 ),
        .O(\m_axis_video_tdata[11]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h000000A082808282)) 
    \m_axis_video_tdata[11]_i_2 
       (.I0(state_reg[1]),
        .I1(header_cnt_reg[4]),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[0]),
        .I4(header_cnt_reg[3]),
        .I5(header_cnt_reg[2]),
        .O(\m_axis_video_tdata[11]_i_2_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hFFFFFDED)) 
    \m_axis_video_tdata[12]_i_1 
       (.I0(state_reg[1]),
        .I1(state_reg[0]),
        .I2(state_reg[2]),
        .I3(bmp_header_dout[12]),
        .I4(\m_axis_video_tdata[12]_i_2_n_1 ),
        .O(\m_axis_video_tdata[12]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000270000000000)) 
    \m_axis_video_tdata[12]_i_2 
       (.I0(header_cnt_reg[1]),
        .I1(header_cnt_reg[3]),
        .I2(header_cnt_reg[2]),
        .I3(header_cnt_reg[0]),
        .I4(header_cnt_reg[4]),
        .I5(state_reg[1]),
        .O(\m_axis_video_tdata[12]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEEEEE)) 
    \m_axis_video_tdata[13]_i_1 
       (.I0(\m_axis_video_tdata[13]_i_2_n_1 ),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(bmp_header_dout[13]),
        .I4(state_reg[2]),
        .I5(\m_axis_video_tdata[13]_i_3_n_1 ),
        .O(\m_axis_video_tdata[13]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h44414440)) 
    \m_axis_video_tdata[13]_i_2 
       (.I0(state_reg[2]),
        .I1(header_cnt_reg[4]),
        .I2(header_cnt_reg[3]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[0]),
        .O(\m_axis_video_tdata[13]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hF2000000F2FF00FF)) 
    \m_axis_video_tdata[13]_i_3 
       (.I0(header_cnt_reg[0]),
        .I1(header_cnt_reg[3]),
        .I2(header_cnt_reg[4]),
        .I3(state_reg[1]),
        .I4(header_cnt_reg[1]),
        .I5(state_reg[2]),
        .O(\m_axis_video_tdata[13]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFB0000)) 
    \m_axis_video_tdata[14]_i_1 
       (.I0(bmp_header_dout[14]),
        .I1(state_reg[2]),
        .I2(state_reg[1]),
        .I3(state_reg[0]),
        .I4(\m_axis_video_tdata[14]_i_2_n_1 ),
        .I5(\m_axis_video_tdata[14]_i_3_n_1 ),
        .O(\m_axis_video_tdata[14]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hFFFBFFFBFFFBFBFB)) 
    \m_axis_video_tdata[14]_i_2 
       (.I0(state_reg[2]),
        .I1(state_reg[1]),
        .I2(state_reg[0]),
        .I3(header_cnt_reg[4]),
        .I4(header_cnt_reg[1]),
        .I5(header_cnt_reg[2]),
        .O(\m_axis_video_tdata[14]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h9000000000900090)) 
    \m_axis_video_tdata[14]_i_3 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[4]),
        .I2(state_reg[1]),
        .I3(header_cnt_reg[1]),
        .I4(header_cnt_reg[0]),
        .I5(header_cnt_reg[2]),
        .O(\m_axis_video_tdata[14]_i_3_n_1 ));
  LUT5 #(
    .INIT(32'h0000FFEF)) 
    \m_axis_video_tdata[15]_i_1 
       (.I0(state_reg[0]),
        .I1(state_reg[1]),
        .I2(state_reg[2]),
        .I3(bmp_header_dout[15]),
        .I4(\m_axis_video_tdata[22]_i_2_n_1 ),
        .O(\m_axis_video_tdata[15]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hFECFFEEFFEEFFECF)) 
    \m_axis_video_tdata[16]_i_1 
       (.I0(\m_axis_video_tdata[16]_i_2_n_1 ),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(state_reg[2]),
        .I4(header_cnt_reg[0]),
        .I5(header_cnt_reg[3]),
        .O(\m_axis_video_tdata[16]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hFFFF000400040004)) 
    \m_axis_video_tdata[16]_i_2 
       (.I0(header_cnt_reg[1]),
        .I1(state_reg[1]),
        .I2(header_cnt_reg[4]),
        .I3(header_cnt_reg[2]),
        .I4(bmp_header_dout[0]),
        .I5(state_reg[2]),
        .O(\m_axis_video_tdata[16]_i_2_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \m_axis_video_tdata[17]_i_1 
       (.I0(\m_axis_video_tdata[18]_i_2_n_1 ),
        .I1(bmp_header_dout[1]),
        .I2(state_reg[2]),
        .O(\m_axis_video_tdata[17]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \m_axis_video_tdata[18]_i_1 
       (.I0(bmp_header_dout[2]),
        .I1(state_reg[2]),
        .I2(\m_axis_video_tdata[18]_i_2_n_1 ),
        .O(\m_axis_video_tdata[18]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hEDEDFDFDEDFDEDED)) 
    \m_axis_video_tdata[18]_i_2 
       (.I0(state_reg[2]),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(header_cnt_reg[0]),
        .I4(\m_axis_video_tdata[18]_i_3_n_1 ),
        .I5(header_cnt_reg[4]),
        .O(\m_axis_video_tdata[18]_i_2_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \m_axis_video_tdata[18]_i_3 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[1]),
        .O(\m_axis_video_tdata[18]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55555545)) 
    \m_axis_video_tdata[19]_i_1 
       (.I0(\m_axis_video_tdata[19]_i_2_n_1 ),
        .I1(bmp_header_dout[3]),
        .I2(state_reg[2]),
        .I3(state_reg[1]),
        .I4(state_reg[0]),
        .I5(\m_axis_video_tdata[19]_i_3_n_1 ),
        .O(\m_axis_video_tdata[19]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000040400040404)) 
    \m_axis_video_tdata[19]_i_2 
       (.I0(state_reg[2]),
        .I1(state_reg[1]),
        .I2(state_reg[0]),
        .I3(header_cnt_reg[1]),
        .I4(header_cnt_reg[4]),
        .I5(header_cnt_reg[3]),
        .O(\m_axis_video_tdata[19]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h00000000F9000000)) 
    \m_axis_video_tdata[19]_i_3 
       (.I0(header_cnt_reg[0]),
        .I1(header_cnt_reg[1]),
        .I2(header_cnt_reg[4]),
        .I3(header_cnt_reg[2]),
        .I4(state_reg[1]),
        .I5(header_cnt_reg[3]),
        .O(\m_axis_video_tdata[19]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_axis_video_tdata[1]_i_1 
       (.I0(\m_axis_video_tdata[6]_i_2_n_1 ),
        .I1(\m_axis_video_tdata[6]_i_3_n_1 ),
        .I2(header_cnt_reg[4]),
        .I3(bmp_header_dout[17]),
        .I4(state_reg[2]),
        .I5(\m_axis_video_tdata[6]_i_4_n_1 ),
        .O(\m_axis_video_tdata[1]_i_1_n_1 ));
  LUT5 #(
    .INIT(32'hFFEEFFFB)) 
    \m_axis_video_tdata[20]_i_1 
       (.I0(\m_axis_video_tdata[20]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(bmp_header_dout[4]),
        .I3(state_reg[0]),
        .I4(state_reg[1]),
        .O(\m_axis_video_tdata[20]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000200000000002)) 
    \m_axis_video_tdata[20]_i_2 
       (.I0(state_reg[1]),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[3]),
        .I3(header_cnt_reg[1]),
        .I4(header_cnt_reg[4]),
        .I5(header_cnt_reg[0]),
        .O(\m_axis_video_tdata[20]_i_2_n_1 ));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_axis_video_tdata[21]_i_1 
       (.I0(\m_axis_video_tdata[21]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(bmp_header_dout[5]),
        .I3(\m_axis_video_tdata[21]_i_3_n_1 ),
        .O(\m_axis_video_tdata[21]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hB0000000A000A050)) 
    \m_axis_video_tdata[21]_i_2 
       (.I0(header_cnt_reg[4]),
        .I1(header_cnt_reg[2]),
        .I2(state_reg[1]),
        .I3(header_cnt_reg[1]),
        .I4(header_cnt_reg[0]),
        .I5(header_cnt_reg[3]),
        .O(\m_axis_video_tdata[21]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE000FF)) 
    \m_axis_video_tdata[21]_i_3 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[4]),
        .I3(state_reg[2]),
        .I4(state_reg[1]),
        .I5(state_reg[0]),
        .O(\m_axis_video_tdata[21]_i_3_n_1 ));
  LUT5 #(
    .INIT(32'h0000FFEF)) 
    \m_axis_video_tdata[22]_i_1 
       (.I0(state_reg[0]),
        .I1(state_reg[1]),
        .I2(state_reg[2]),
        .I3(bmp_header_dout[6]),
        .I4(\m_axis_video_tdata[22]_i_2_n_1 ),
        .O(\m_axis_video_tdata[22]_i_1_n_1 ));
  LUT5 #(
    .INIT(32'h000001FF)) 
    \m_axis_video_tdata[22]_i_2 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[4]),
        .I4(\header_cnt[4]_i_2_n_1 ),
        .O(\m_axis_video_tdata[22]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFDFFFD3)) 
    \m_axis_video_tdata[23]_i_1 
       (.I0(\m_axis_video_tdata[23]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(state_reg[1]),
        .I3(state_reg[0]),
        .I4(bmp_header_dout[7]),
        .I5(\m_axis_video_tdata[23]_i_3_n_1 ),
        .O(\m_axis_video_tdata[23]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    \m_axis_video_tdata[23]_i_2 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[4]),
        .O(\m_axis_video_tdata[23]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h0000CC8000000000)) 
    \m_axis_video_tdata[23]_i_3 
       (.I0(header_cnt_reg[0]),
        .I1(state_reg[1]),
        .I2(header_cnt_reg[3]),
        .I3(header_cnt_reg[4]),
        .I4(header_cnt_reg[2]),
        .I5(header_cnt_reg[1]),
        .O(\m_axis_video_tdata[23]_i_3_n_1 ));
  LUT5 #(
    .INIT(32'h0000FFEF)) 
    \m_axis_video_tdata[2]_i_1 
       (.I0(state_reg[0]),
        .I1(state_reg[1]),
        .I2(state_reg[2]),
        .I3(bmp_header_dout[18]),
        .I4(\m_axis_video_tdata[22]_i_2_n_1 ),
        .O(\m_axis_video_tdata[2]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h545454FF54545454)) 
    \m_axis_video_tdata[3]_i_1 
       (.I0(\m_axis_video_tdata[19]_i_2_n_1 ),
        .I1(bmp_header_dout[19]),
        .I2(\m_axis_video_tdata[3]_i_2_n_1 ),
        .I3(header_cnt_reg[1]),
        .I4(\m_axis_video_tdata[6]_i_3_n_1 ),
        .I5(\m_axis_video_tdata[3]_i_3_n_1 ),
        .O(\m_axis_video_tdata[3]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \m_axis_video_tdata[3]_i_2 
       (.I0(state_reg[0]),
        .I1(state_reg[1]),
        .I2(state_reg[2]),
        .O(\m_axis_video_tdata[3]_i_2_n_1 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \m_axis_video_tdata[3]_i_3 
       (.I0(header_cnt_reg[4]),
        .I1(header_cnt_reg[0]),
        .I2(header_cnt_reg[3]),
        .O(\m_axis_video_tdata[3]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEFFEEF)) 
    \m_axis_video_tdata[4]_i_1 
       (.I0(\m_axis_video_tdata[4]_i_2_n_1 ),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(state_reg[2]),
        .I4(bmp_header_dout[20]),
        .I5(\m_axis_video_tdata[4]_i_3_n_1 ),
        .O(\m_axis_video_tdata[4]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \m_axis_video_tdata[4]_i_2 
       (.I0(header_cnt_reg[1]),
        .I1(header_cnt_reg[3]),
        .I2(header_cnt_reg[0]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[4]),
        .I5(state_reg[1]),
        .O(\m_axis_video_tdata[4]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \m_axis_video_tdata[4]_i_3 
       (.I0(header_cnt_reg[4]),
        .I1(state_reg[1]),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[0]),
        .I4(header_cnt_reg[3]),
        .I5(header_cnt_reg[2]),
        .O(\m_axis_video_tdata[4]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEAEAEAAA)) 
    \m_axis_video_tdata[5]_i_1 
       (.I0(\m_axis_video_tdata[6]_i_4_n_1 ),
        .I1(state_reg[1]),
        .I2(header_cnt_reg[4]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[3]),
        .I5(\m_axis_video_tdata[5]_i_2_n_1 ),
        .O(\m_axis_video_tdata[5]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAABAABAA)) 
    \m_axis_video_tdata[5]_i_2 
       (.I0(\m_axis_video_tdata[5]_i_3_n_1 ),
        .I1(header_cnt_reg[1]),
        .I2(header_cnt_reg[3]),
        .I3(header_cnt_reg[0]),
        .I4(header_cnt_reg[2]),
        .I5(\m_axis_video_tdata[5]_i_4_n_1 ),
        .O(\m_axis_video_tdata[5]_i_2_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT5 #(
    .INIT(32'hFF808080)) 
    \m_axis_video_tdata[5]_i_3 
       (.I0(header_cnt_reg[1]),
        .I1(header_cnt_reg[4]),
        .I2(state_reg[1]),
        .I3(bmp_header_dout[21]),
        .I4(state_reg[2]),
        .O(\m_axis_video_tdata[5]_i_3_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_video_tdata[5]_i_4 
       (.I0(header_cnt_reg[4]),
        .I1(state_reg[1]),
        .O(\m_axis_video_tdata[5]_i_4_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_axis_video_tdata[6]_i_1 
       (.I0(\m_axis_video_tdata[6]_i_2_n_1 ),
        .I1(\m_axis_video_tdata[6]_i_3_n_1 ),
        .I2(header_cnt_reg[4]),
        .I3(bmp_header_dout[22]),
        .I4(state_reg[2]),
        .I5(\m_axis_video_tdata[6]_i_4_n_1 ),
        .O(\m_axis_video_tdata[6]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'hA0A02882)) 
    \m_axis_video_tdata[6]_i_2 
       (.I0(\m_axis_video_tdata[6]_i_5_n_1 ),
        .I1(header_cnt_reg[3]),
        .I2(header_cnt_reg[4]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[1]),
        .O(\m_axis_video_tdata[6]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h7)) 
    \m_axis_video_tdata[6]_i_3 
       (.I0(header_cnt_reg[2]),
        .I1(state_reg[1]),
        .O(\m_axis_video_tdata[6]_i_3_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hEB)) 
    \m_axis_video_tdata[6]_i_4 
       (.I0(state_reg[0]),
        .I1(state_reg[1]),
        .I2(state_reg[2]),
        .O(\m_axis_video_tdata[6]_i_4_n_1 ));
  LUT6 #(
    .INIT(64'h5555555510555555)) 
    \m_axis_video_tdata[6]_i_5 
       (.I0(state_reg[2]),
        .I1(header_cnt_reg[2]),
        .I2(header_cnt_reg[3]),
        .I3(state_reg[1]),
        .I4(header_cnt_reg[0]),
        .I5(header_cnt_reg[1]),
        .O(\m_axis_video_tdata[6]_i_5_n_1 ));
  LUT5 #(
    .INIT(32'hFFEEFFFB)) 
    \m_axis_video_tdata[7]_i_1 
       (.I0(\m_axis_video_tdata[7]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(bmp_header_dout[23]),
        .I3(state_reg[0]),
        .I4(state_reg[1]),
        .O(\m_axis_video_tdata[7]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h8888888288888880)) 
    \m_axis_video_tdata[7]_i_2 
       (.I0(state_reg[1]),
        .I1(header_cnt_reg[4]),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[3]),
        .I5(header_cnt_reg[0]),
        .O(\m_axis_video_tdata[7]_i_2_n_1 ));
  LUT5 #(
    .INIT(32'hFFEEFFFB)) 
    \m_axis_video_tdata[8]_i_1 
       (.I0(\m_axis_video_tdata[8]_i_2_n_1 ),
        .I1(state_reg[2]),
        .I2(bmp_header_dout[8]),
        .I3(state_reg[0]),
        .I4(state_reg[1]),
        .O(\m_axis_video_tdata[8]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000000001610000)) 
    \m_axis_video_tdata[8]_i_2 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[1]),
        .I2(header_cnt_reg[2]),
        .I3(header_cnt_reg[0]),
        .I4(state_reg[1]),
        .I5(header_cnt_reg[4]),
        .O(\m_axis_video_tdata[8]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFAFFEFEF)) 
    \m_axis_video_tdata[9]_i_1 
       (.I0(\m_axis_video_tdata[9]_i_2_n_1 ),
        .I1(bmp_header_dout[9]),
        .I2(state_reg[2]),
        .I3(\m_axis_video_tdata[9]_i_3_n_1 ),
        .I4(state_reg[1]),
        .I5(state_reg[0]),
        .O(\m_axis_video_tdata[9]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h8900980000009800)) 
    \m_axis_video_tdata[9]_i_2 
       (.I0(header_cnt_reg[3]),
        .I1(header_cnt_reg[4]),
        .I2(header_cnt_reg[0]),
        .I3(state_reg[1]),
        .I4(header_cnt_reg[2]),
        .I5(header_cnt_reg[1]),
        .O(\m_axis_video_tdata[9]_i_2_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    \m_axis_video_tdata[9]_i_3 
       (.I0(header_cnt_reg[2]),
        .I1(header_cnt_reg[1]),
        .I2(header_cnt_reg[4]),
        .O(\m_axis_video_tdata[9]_i_3_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[0]_i_1_n_1 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[10]_i_1_n_1 ),
        .Q(Q[10]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[11]_i_1_n_1 ),
        .Q(Q[11]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[12]_i_1_n_1 ),
        .Q(Q[12]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[13]_i_1_n_1 ),
        .Q(Q[13]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[14]_i_1_n_1 ),
        .Q(Q[14]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[15]_i_1_n_1 ),
        .Q(Q[15]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[16]_i_1_n_1 ),
        .Q(Q[16]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[17]_i_1_n_1 ),
        .Q(Q[17]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[18]_i_1_n_1 ),
        .Q(Q[18]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[19]_i_1_n_1 ),
        .Q(Q[19]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[1]_i_1_n_1 ),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[20]_i_1_n_1 ),
        .Q(Q[20]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[21]_i_1_n_1 ),
        .Q(Q[21]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[22]_i_1_n_1 ),
        .Q(Q[22]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[23]_i_1_n_1 ),
        .Q(Q[23]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[2]_i_1_n_1 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[3]_i_1_n_1 ),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[4]_i_1_n_1 ),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[5]_i_1_n_1 ),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[6]_i_1_n_1 ),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[7]_i_1_n_1 ),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[8]_i_1_n_1 ),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \m_axis_video_tdata_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(valid_d_reg_0),
        .D(\m_axis_video_tdata[9]_i_1_n_1 ),
        .Q(Q[9]));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \m_axis_video_tlast_OBUF[0]_inst_i_1 
       (.I0(\m_axis_video_tlast_OBUF[0]_inst_i_2_n_1 ),
        .I1(pixel_cnt_reg[13]),
        .I2(pixel_cnt_reg[14]),
        .I3(pixel_cnt_reg[21]),
        .I4(pixel_cnt_reg[22]),
        .I5(\m_axis_video_tlast_OBUF[0]_inst_i_3_n_1 ),
        .O(m_axis_video_tlast_OBUF));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \m_axis_video_tlast_OBUF[0]_inst_i_2 
       (.I0(pixel_cnt_reg[5]),
        .I1(pixel_cnt_reg[8]),
        .I2(pixel_cnt_reg[3]),
        .I3(pixel_cnt_reg[7]),
        .O(\m_axis_video_tlast_OBUF[0]_inst_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFDFFFF)) 
    \m_axis_video_tlast_OBUF[0]_inst_i_3 
       (.I0(\m_axis_video_tlast_OBUF[0]_inst_i_4_n_1 ),
        .I1(\m_axis_video_tlast_OBUF[0]_inst_i_5_n_1 ),
        .I2(pixel_cnt_reg[2]),
        .I3(pixel_cnt_reg[4]),
        .I4(pixel_cnt_reg[20]),
        .I5(pixel_cnt_reg[23]),
        .O(\m_axis_video_tlast_OBUF[0]_inst_i_3_n_1 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \m_axis_video_tlast_OBUF[0]_inst_i_4 
       (.I0(pixel_cnt_reg[15]),
        .I1(pixel_cnt_reg[19]),
        .I2(pixel_cnt_reg[17]),
        .I3(pixel_cnt_reg[18]),
        .O(\m_axis_video_tlast_OBUF[0]_inst_i_4_n_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \m_axis_video_tlast_OBUF[0]_inst_i_5 
       (.I0(pixel_cnt_reg[16]),
        .I1(pixel_cnt_reg[11]),
        .I2(pixel_cnt_reg[9]),
        .I3(pixel_cnt_reg[1]),
        .I4(\m_axis_video_tlast_OBUF[0]_inst_i_6_n_1 ),
        .O(\m_axis_video_tlast_OBUF[0]_inst_i_5_n_1 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \m_axis_video_tlast_OBUF[0]_inst_i_6 
       (.I0(pixel_cnt_reg[0]),
        .I1(pixel_cnt_reg[10]),
        .I2(pixel_cnt_reg[12]),
        .I3(pixel_cnt_reg[6]),
        .O(\m_axis_video_tlast_OBUF[0]_inst_i_6_n_1 ));
  LUT4 #(
    .INIT(16'h00EF)) 
    m_axis_video_tvalid
       (.I0(state_r[1]),
        .I1(state_r[2]),
        .I2(state_r[0]),
        .I3(bmp_header_empty_r),
        .O(m_axis_video_tvalid_OBUF));
  LUT2 #(
    .INIT(4'h7)) 
    \pixel_cnt[0]_i_1 
       (.I0(bmp_header_empty),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[0]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h00000000000D0000)) 
    \pixel_cnt[0]_i_3 
       (.I0(\pixel_cnt[0]_i_8_n_1 ),
        .I1(\pixel_cnt[0]_i_9_n_1 ),
        .I2(state_reg[0]),
        .I3(state_reg[1]),
        .I4(state_reg[2]),
        .I5(pixel_cnt_reg[23]),
        .O(pixel_cnt1));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[0]_i_4 
       (.I0(pixel_cnt_reg[3]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[0]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[0]_i_5 
       (.I0(pixel_cnt_reg[2]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[0]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[0]_i_6 
       (.I0(pixel_cnt_reg[1]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[0]_i_6_n_1 ));
  LUT2 #(
    .INIT(4'h4)) 
    \pixel_cnt[0]_i_7 
       (.I0(pixel_cnt_reg[0]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[0]_i_7_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    \pixel_cnt[0]_i_8 
       (.I0(pixel_cnt_reg[16]),
        .I1(pixel_cnt_reg[12]),
        .I2(pixel_cnt_reg[13]),
        .I3(pixel_cnt_reg[14]),
        .I4(pixel_cnt_reg[15]),
        .O(\pixel_cnt[0]_i_8_n_1 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \pixel_cnt[0]_i_9 
       (.I0(pixel_cnt_reg[19]),
        .I1(pixel_cnt_reg[17]),
        .I2(pixel_cnt_reg[18]),
        .I3(pixel_cnt_reg[20]),
        .I4(pixel_cnt_reg[22]),
        .I5(pixel_cnt_reg[21]),
        .O(\pixel_cnt[0]_i_9_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[12]_i_2 
       (.I0(pixel_cnt_reg[15]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[12]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[12]_i_3 
       (.I0(pixel_cnt_reg[14]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[12]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[12]_i_4 
       (.I0(pixel_cnt_reg[13]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[12]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[12]_i_5 
       (.I0(pixel_cnt_reg[12]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[12]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[16]_i_2 
       (.I0(pixel_cnt_reg[19]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[16]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[16]_i_3 
       (.I0(pixel_cnt_reg[18]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[16]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[16]_i_4 
       (.I0(pixel_cnt_reg[17]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[16]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[16]_i_5 
       (.I0(pixel_cnt_reg[16]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[16]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[20]_i_2 
       (.I0(pixel_cnt_reg[22]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[20]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[20]_i_3 
       (.I0(pixel_cnt_reg[21]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[20]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[20]_i_4 
       (.I0(pixel_cnt_reg[20]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[20]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[4]_i_2 
       (.I0(pixel_cnt_reg[7]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[4]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[4]_i_3 
       (.I0(pixel_cnt_reg[6]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[4]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[4]_i_4 
       (.I0(pixel_cnt_reg[5]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[4]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[4]_i_5 
       (.I0(pixel_cnt_reg[4]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[4]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[8]_i_2 
       (.I0(pixel_cnt_reg[11]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[8]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[8]_i_3 
       (.I0(pixel_cnt_reg[10]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[8]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[8]_i_4 
       (.I0(pixel_cnt_reg[9]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[8]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \pixel_cnt[8]_i_5 
       (.I0(pixel_cnt_reg[8]),
        .I1(pixel_cnt1),
        .O(\pixel_cnt[8]_i_5_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[0] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[0]_i_2_n_8 ),
        .Q(pixel_cnt_reg[0]));
  CARRY4 \pixel_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\pixel_cnt_reg[0]_i_2_n_1 ,\pixel_cnt_reg[0]_i_2_n_2 ,\pixel_cnt_reg[0]_i_2_n_3 ,\pixel_cnt_reg[0]_i_2_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,pixel_cnt1}),
        .O({\pixel_cnt_reg[0]_i_2_n_5 ,\pixel_cnt_reg[0]_i_2_n_6 ,\pixel_cnt_reg[0]_i_2_n_7 ,\pixel_cnt_reg[0]_i_2_n_8 }),
        .S({\pixel_cnt[0]_i_4_n_1 ,\pixel_cnt[0]_i_5_n_1 ,\pixel_cnt[0]_i_6_n_1 ,\pixel_cnt[0]_i_7_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[10] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[8]_i_1_n_6 ),
        .Q(pixel_cnt_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[11] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[8]_i_1_n_5 ),
        .Q(pixel_cnt_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[12] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[12]_i_1_n_8 ),
        .Q(pixel_cnt_reg[12]));
  CARRY4 \pixel_cnt_reg[12]_i_1 
       (.CI(\pixel_cnt_reg[8]_i_1_n_1 ),
        .CO({\pixel_cnt_reg[12]_i_1_n_1 ,\pixel_cnt_reg[12]_i_1_n_2 ,\pixel_cnt_reg[12]_i_1_n_3 ,\pixel_cnt_reg[12]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pixel_cnt_reg[12]_i_1_n_5 ,\pixel_cnt_reg[12]_i_1_n_6 ,\pixel_cnt_reg[12]_i_1_n_7 ,\pixel_cnt_reg[12]_i_1_n_8 }),
        .S({\pixel_cnt[12]_i_2_n_1 ,\pixel_cnt[12]_i_3_n_1 ,\pixel_cnt[12]_i_4_n_1 ,\pixel_cnt[12]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[13] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[12]_i_1_n_7 ),
        .Q(pixel_cnt_reg[13]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[14] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[12]_i_1_n_6 ),
        .Q(pixel_cnt_reg[14]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[15] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[12]_i_1_n_5 ),
        .Q(pixel_cnt_reg[15]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[16] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[16]_i_1_n_8 ),
        .Q(pixel_cnt_reg[16]));
  CARRY4 \pixel_cnt_reg[16]_i_1 
       (.CI(\pixel_cnt_reg[12]_i_1_n_1 ),
        .CO({\pixel_cnt_reg[16]_i_1_n_1 ,\pixel_cnt_reg[16]_i_1_n_2 ,\pixel_cnt_reg[16]_i_1_n_3 ,\pixel_cnt_reg[16]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pixel_cnt_reg[16]_i_1_n_5 ,\pixel_cnt_reg[16]_i_1_n_6 ,\pixel_cnt_reg[16]_i_1_n_7 ,\pixel_cnt_reg[16]_i_1_n_8 }),
        .S({\pixel_cnt[16]_i_2_n_1 ,\pixel_cnt[16]_i_3_n_1 ,\pixel_cnt[16]_i_4_n_1 ,\pixel_cnt[16]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[17] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[16]_i_1_n_7 ),
        .Q(pixel_cnt_reg[17]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[18] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[16]_i_1_n_6 ),
        .Q(pixel_cnt_reg[18]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[19] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[16]_i_1_n_5 ),
        .Q(pixel_cnt_reg[19]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[1] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[0]_i_2_n_7 ),
        .Q(pixel_cnt_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[20] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[20]_i_1_n_8 ),
        .Q(pixel_cnt_reg[20]));
  CARRY4 \pixel_cnt_reg[20]_i_1 
       (.CI(\pixel_cnt_reg[16]_i_1_n_1 ),
        .CO({\pixel_cnt_reg[20]_i_1_n_1 ,\NLW_pixel_cnt_reg[20]_i_1_CO_UNCONNECTED [2],\pixel_cnt_reg[20]_i_1_n_3 ,\pixel_cnt_reg[20]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_pixel_cnt_reg[20]_i_1_O_UNCONNECTED [3],\pixel_cnt_reg[20]_i_1_n_6 ,\pixel_cnt_reg[20]_i_1_n_7 ,\pixel_cnt_reg[20]_i_1_n_8 }),
        .S({1'b1,\pixel_cnt[20]_i_2_n_1 ,\pixel_cnt[20]_i_3_n_1 ,\pixel_cnt[20]_i_4_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[21] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[20]_i_1_n_7 ),
        .Q(pixel_cnt_reg[21]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[22] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[20]_i_1_n_6 ),
        .Q(pixel_cnt_reg[22]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[23] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[20]_i_1_n_1 ),
        .Q(pixel_cnt_reg[23]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[2] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[0]_i_2_n_6 ),
        .Q(pixel_cnt_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[3] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[0]_i_2_n_5 ),
        .Q(pixel_cnt_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[4] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[4]_i_1_n_8 ),
        .Q(pixel_cnt_reg[4]));
  CARRY4 \pixel_cnt_reg[4]_i_1 
       (.CI(\pixel_cnt_reg[0]_i_2_n_1 ),
        .CO({\pixel_cnt_reg[4]_i_1_n_1 ,\pixel_cnt_reg[4]_i_1_n_2 ,\pixel_cnt_reg[4]_i_1_n_3 ,\pixel_cnt_reg[4]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pixel_cnt_reg[4]_i_1_n_5 ,\pixel_cnt_reg[4]_i_1_n_6 ,\pixel_cnt_reg[4]_i_1_n_7 ,\pixel_cnt_reg[4]_i_1_n_8 }),
        .S({\pixel_cnt[4]_i_2_n_1 ,\pixel_cnt[4]_i_3_n_1 ,\pixel_cnt[4]_i_4_n_1 ,\pixel_cnt[4]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[5] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[4]_i_1_n_7 ),
        .Q(pixel_cnt_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[6] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[4]_i_1_n_6 ),
        .Q(pixel_cnt_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[7] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[4]_i_1_n_5 ),
        .Q(pixel_cnt_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[8] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[8]_i_1_n_8 ),
        .Q(pixel_cnt_reg[8]));
  CARRY4 \pixel_cnt_reg[8]_i_1 
       (.CI(\pixel_cnt_reg[4]_i_1_n_1 ),
        .CO({\pixel_cnt_reg[8]_i_1_n_1 ,\pixel_cnt_reg[8]_i_1_n_2 ,\pixel_cnt_reg[8]_i_1_n_3 ,\pixel_cnt_reg[8]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pixel_cnt_reg[8]_i_1_n_5 ,\pixel_cnt_reg[8]_i_1_n_6 ,\pixel_cnt_reg[8]_i_1_n_7 ,\pixel_cnt_reg[8]_i_1_n_8 }),
        .S({\pixel_cnt[8]_i_2_n_1 ,\pixel_cnt[8]_i_3_n_1 ,\pixel_cnt[8]_i_4_n_1 ,\pixel_cnt[8]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \pixel_cnt_reg[9] 
       (.C(CLK),
        .CE(\pixel_cnt[0]_i_1_n_1 ),
        .CLR(valid_d_reg_0),
        .D(\pixel_cnt_reg[8]_i_1_n_7 ),
        .Q(pixel_cnt_reg[9]));
  LUT5 #(
    .INIT(32'hFFF5F0CF)) 
    \state[0]_i_1 
       (.I0(bmp_header_dout[24]),
        .I1(\state[2]_i_2_n_1 ),
        .I2(state_reg[2]),
        .I3(state_reg[1]),
        .I4(state_reg[0]),
        .O(n_state[0]));
  LUT5 #(
    .INIT(32'h00380008)) 
    \state[1]_i_1 
       (.I0(bmp_header_dout[24]),
        .I1(state_reg[0]),
        .I2(state_reg[1]),
        .I3(state_reg[2]),
        .I4(\state[2]_i_3_n_1 ),
        .O(n_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h00041104)) 
    \state[2]_i_1 
       (.I0(state_reg[0]),
        .I1(state_reg[2]),
        .I2(\state[2]_i_2_n_1 ),
        .I3(state_reg[1]),
        .I4(\state[2]_i_3_n_1 ),
        .O(\state[2]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \state[2]_i_2 
       (.I0(\state[2]_i_4_n_1 ),
        .I1(\state[2]_i_5_n_1 ),
        .I2(\state[2]_i_6_n_1 ),
        .I3(\state[2]_i_7_n_1 ),
        .I4(pixel_cnt_reg[16]),
        .I5(pixel_cnt_reg[23]),
        .O(\state[2]_i_2_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    \state[2]_i_3 
       (.I0(header_cnt_reg[4]),
        .I1(header_cnt_reg[0]),
        .I2(header_cnt_reg[1]),
        .I3(header_cnt_reg[2]),
        .I4(header_cnt_reg[3]),
        .O(\state[2]_i_3_n_1 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \state[2]_i_4 
       (.I0(pixel_cnt_reg[1]),
        .I1(pixel_cnt_reg[0]),
        .I2(pixel_cnt_reg[3]),
        .I3(pixel_cnt_reg[2]),
        .I4(\state[2]_i_8_n_1 ),
        .O(\state[2]_i_4_n_1 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \state[2]_i_5 
       (.I0(\m_axis_video_tlast_OBUF[0]_inst_i_4_n_1 ),
        .I1(pixel_cnt_reg[9]),
        .I2(pixel_cnt_reg[8]),
        .I3(pixel_cnt_reg[11]),
        .I4(pixel_cnt_reg[10]),
        .O(\state[2]_i_5_n_1 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \state[2]_i_6 
       (.I0(pixel_cnt_reg[20]),
        .I1(pixel_cnt_reg[21]),
        .I2(pixel_cnt_reg[22]),
        .I3(pixel_cnt_reg[12]),
        .O(\state[2]_i_6_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \state[2]_i_7 
       (.I0(pixel_cnt_reg[14]),
        .I1(pixel_cnt_reg[13]),
        .O(\state[2]_i_7_n_1 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \state[2]_i_8 
       (.I0(pixel_cnt_reg[6]),
        .I1(pixel_cnt_reg[7]),
        .I2(pixel_cnt_reg[4]),
        .I3(pixel_cnt_reg[5]),
        .O(\state[2]_i_8_n_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(state_reg[0]),
        .Q(state_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(state_reg[1]),
        .Q(state_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(state_reg[2]),
        .Q(state_r[2]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "S_WRITE_HEADER:010,S_WRITE_DATA:100,S_WAIT:001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(n_state[0]),
        .Q(state_reg[0]),
        .S(valid_d_reg_0));
  (* FSM_ENCODED_STATES = "S_WRITE_HEADER:010,S_WRITE_DATA:100,S_WAIT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(n_state[1]),
        .Q(state_reg[1]),
        .R(valid_d_reg_0));
  (* FSM_ENCODED_STATES = "S_WRITE_HEADER:010,S_WRITE_DATA:100,S_WAIT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\state[2]_i_1_n_1 ),
        .Q(state_reg[2]),
        .R(valid_d_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    valid_d_reg
       (.C(CLK),
        .CE(1'b1),
        .D(valid_d_reg_1),
        .Q(valid_d),
        .R(valid_d_reg_0));
endmodule

(* BW = "8" *) (* CH = "3" *) (* HD = "540" *) 
(* KSZ = "4" *) (* WD = "960" *) 
(* NotValidForBitStream *)
module Bic_top
   (clk_i,
    rst_n_i,
    srcBmp_axis_tvalid,
    srcBmp_axis_tready,
    srcBmp_axis_tdata,
    srcBmp_axis_tlast,
    srcBmp_axis_tuser,
    m_axis_video_tdata,
    m_axis_video_tvalid,
    m_axis_video_tready,
    m_axis_video_tlast);
  input clk_i;
  input rst_n_i;
  input srcBmp_axis_tvalid;
  output srcBmp_axis_tready;
  input [23:0]srcBmp_axis_tdata;
  input srcBmp_axis_tlast;
  input srcBmp_axis_tuser;
  output [23:0]m_axis_video_tdata;
  output [0:0]m_axis_video_tvalid;
  input [0:0]m_axis_video_tready;
  output [0:0]m_axis_video_tlast;

  wire Bic_A2W_dut_n_1;
  wire Bic_A2W_dut_n_4;
  wire Bic_valid;
  wire Bic_w2s_dut_n_3;
  wire Bicubic_dut_n_3;
  wire [24:24]bmp_header_din;
  wire bmp_header_full;
  wire bmp_header_wr;
  wire clk_i;
  wire clk_i_IBUF;
  wire clk_i_IBUF_BUFG;
  wire [23:0]dst_data_bgr;
  wire [23:0]dst_stream_data;
  wire [23:0]m_axis_video_tdata;
  wire [23:0]m_axis_video_tdata_OBUF;
  wire [0:0]m_axis_video_tlast;
  wire [0:0]m_axis_video_tlast_OBUF;
  wire [0:0]m_axis_video_tvalid;
  wire [0:0]m_axis_video_tvalid_OBUF;
  wire n_0_721_BUFG;
  wire n_0_721_BUFG_inst_n_1;
  wire [0:0]p_0_in;
  wire rst_n_i;
  wire rst_n_i_IBUF;
  wire [23:0]srcBmp_axis_tdata;
  wire [23:0]srcBmp_axis_tdata_IBUF;
  wire srcBmp_axis_tready;
  wire srcBmp_axis_tready_OBUF;
  wire srcBmp_axis_tvalid;
  wire srcBmp_axis_tvalid_IBUF;
  wire state;
  wire valid_d;
  wire [383:0]win_tdata;
  wire win_tready;
  wire win_tvalid;
  wire wr_cnt;
  wire [0:0]wr_cnt_reg;
  wire wr_en;

  Bic_A2W Bic_A2W_dut
       (.CLK(clk_i_IBUF_BUFG),
        .E(wr_en),
        .rst_n_i(Bic_A2W_dut_n_1),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .srcBmp_axis_tdata_IBUF(srcBmp_axis_tdata_IBUF),
        .srcBmp_axis_tready_OBUF(srcBmp_axis_tready_OBUF),
        .srcBmp_axis_tvalid_IBUF(srcBmp_axis_tvalid_IBUF),
        .state(state),
        .win_tdata(win_tdata),
        .win_tready(win_tready),
        .win_tready_reg(Bic_A2W_dut_n_4),
        .win_tvalid(win_tvalid));
  Bic_stream2bmp Bic_stream2bmp_dut
       (.CLK(clk_i_IBUF_BUFG),
        .Q(m_axis_video_tdata_OBUF),
        .din({bmp_header_din,dst_stream_data}),
        .full(bmp_header_full),
        .m_axis_video_tlast_OBUF(m_axis_video_tlast_OBUF),
        .m_axis_video_tvalid_OBUF(m_axis_video_tvalid_OBUF),
        .valid_d(valid_d),
        .valid_d_reg_0(Bic_A2W_dut_n_1),
        .valid_d_reg_1(Bic_w2s_dut_n_3),
        .wr_en(bmp_header_wr));
  Bic_w2s Bic_w2s_dut
       (.CLK(clk_i_IBUF_BUFG),
        .D(p_0_in),
        .E(Bicubic_dut_n_3),
        .\FSM_onehot_state_reg[2]_0 (wr_cnt),
        .\FSM_onehot_state_reg[3]_0 (Bic_w2s_dut_n_3),
        .Q(Bic_valid),
        .din(dst_data_bgr),
        .full(bmp_header_full),
        .\loop_cnt_reg[0]_0 (Bic_A2W_dut_n_1),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .valid_d(valid_d),
        .valid_d_reg({bmp_header_din,dst_stream_data}),
        .\wr_cnt_reg[0]_0 (wr_cnt_reg),
        .wr_en(bmp_header_wr));
  Bicubic Bicubic_dut
       (.CLK(clk_i_IBUF_BUFG),
        .D(p_0_in),
        .E(wr_en),
        .Q(Bic_valid),
        .din(dst_data_bgr),
        .\dv_reg[4]_0 (Bicubic_dut_n_3),
        .\h_cnt[9]_i_5_0 (Bic_A2W_dut_n_4),
        .n_0_721_BUFG_inst_n_1(n_0_721_BUFG_inst_n_1),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .srcBmp_axis_tvalid_IBUF(srcBmp_axis_tvalid_IBUF),
        .state(state),
        .u0(n_0_721_BUFG),
        .win_tdata(win_tdata),
        .win_tready(win_tready),
        .win_tready_reg_0(Bic_A2W_dut_n_1),
        .win_tvalid(win_tvalid),
        .\wr_cnt_reg[0] (wr_cnt_reg),
        .\wr_cnt_reg[3] (wr_cnt));
  BUFG clk_i_IBUF_BUFG_inst
       (.I(clk_i_IBUF),
        .O(clk_i_IBUF_BUFG));
  IBUF clk_i_IBUF_inst
       (.I(clk_i),
        .O(clk_i_IBUF));
  OBUF \m_axis_video_tdata_OBUF[0]_inst 
       (.I(m_axis_video_tdata_OBUF[0]),
        .O(m_axis_video_tdata[0]));
  OBUF \m_axis_video_tdata_OBUF[10]_inst 
       (.I(m_axis_video_tdata_OBUF[10]),
        .O(m_axis_video_tdata[10]));
  OBUF \m_axis_video_tdata_OBUF[11]_inst 
       (.I(m_axis_video_tdata_OBUF[11]),
        .O(m_axis_video_tdata[11]));
  OBUF \m_axis_video_tdata_OBUF[12]_inst 
       (.I(m_axis_video_tdata_OBUF[12]),
        .O(m_axis_video_tdata[12]));
  OBUF \m_axis_video_tdata_OBUF[13]_inst 
       (.I(m_axis_video_tdata_OBUF[13]),
        .O(m_axis_video_tdata[13]));
  OBUF \m_axis_video_tdata_OBUF[14]_inst 
       (.I(m_axis_video_tdata_OBUF[14]),
        .O(m_axis_video_tdata[14]));
  OBUF \m_axis_video_tdata_OBUF[15]_inst 
       (.I(m_axis_video_tdata_OBUF[15]),
        .O(m_axis_video_tdata[15]));
  OBUF \m_axis_video_tdata_OBUF[16]_inst 
       (.I(m_axis_video_tdata_OBUF[16]),
        .O(m_axis_video_tdata[16]));
  OBUF \m_axis_video_tdata_OBUF[17]_inst 
       (.I(m_axis_video_tdata_OBUF[17]),
        .O(m_axis_video_tdata[17]));
  OBUF \m_axis_video_tdata_OBUF[18]_inst 
       (.I(m_axis_video_tdata_OBUF[18]),
        .O(m_axis_video_tdata[18]));
  OBUF \m_axis_video_tdata_OBUF[19]_inst 
       (.I(m_axis_video_tdata_OBUF[19]),
        .O(m_axis_video_tdata[19]));
  OBUF \m_axis_video_tdata_OBUF[1]_inst 
       (.I(m_axis_video_tdata_OBUF[1]),
        .O(m_axis_video_tdata[1]));
  OBUF \m_axis_video_tdata_OBUF[20]_inst 
       (.I(m_axis_video_tdata_OBUF[20]),
        .O(m_axis_video_tdata[20]));
  OBUF \m_axis_video_tdata_OBUF[21]_inst 
       (.I(m_axis_video_tdata_OBUF[21]),
        .O(m_axis_video_tdata[21]));
  OBUF \m_axis_video_tdata_OBUF[22]_inst 
       (.I(m_axis_video_tdata_OBUF[22]),
        .O(m_axis_video_tdata[22]));
  OBUF \m_axis_video_tdata_OBUF[23]_inst 
       (.I(m_axis_video_tdata_OBUF[23]),
        .O(m_axis_video_tdata[23]));
  OBUF \m_axis_video_tdata_OBUF[2]_inst 
       (.I(m_axis_video_tdata_OBUF[2]),
        .O(m_axis_video_tdata[2]));
  OBUF \m_axis_video_tdata_OBUF[3]_inst 
       (.I(m_axis_video_tdata_OBUF[3]),
        .O(m_axis_video_tdata[3]));
  OBUF \m_axis_video_tdata_OBUF[4]_inst 
       (.I(m_axis_video_tdata_OBUF[4]),
        .O(m_axis_video_tdata[4]));
  OBUF \m_axis_video_tdata_OBUF[5]_inst 
       (.I(m_axis_video_tdata_OBUF[5]),
        .O(m_axis_video_tdata[5]));
  OBUF \m_axis_video_tdata_OBUF[6]_inst 
       (.I(m_axis_video_tdata_OBUF[6]),
        .O(m_axis_video_tdata[6]));
  OBUF \m_axis_video_tdata_OBUF[7]_inst 
       (.I(m_axis_video_tdata_OBUF[7]),
        .O(m_axis_video_tdata[7]));
  OBUF \m_axis_video_tdata_OBUF[8]_inst 
       (.I(m_axis_video_tdata_OBUF[8]),
        .O(m_axis_video_tdata[8]));
  OBUF \m_axis_video_tdata_OBUF[9]_inst 
       (.I(m_axis_video_tdata_OBUF[9]),
        .O(m_axis_video_tdata[9]));
  OBUF \m_axis_video_tlast_OBUF[0]_inst 
       (.I(m_axis_video_tlast_OBUF),
        .O(m_axis_video_tlast));
  OBUF \m_axis_video_tvalid_OBUF[0]_inst 
       (.I(m_axis_video_tvalid_OBUF),
        .O(m_axis_video_tvalid));
  BUFG n_0_721_BUFG_inst
       (.I(n_0_721_BUFG_inst_n_1),
        .O(n_0_721_BUFG));
  IBUF rst_n_i_IBUF_inst
       (.I(rst_n_i),
        .O(rst_n_i_IBUF));
  IBUF \srcBmp_axis_tdata_IBUF[0]_inst 
       (.I(srcBmp_axis_tdata[0]),
        .O(srcBmp_axis_tdata_IBUF[0]));
  IBUF \srcBmp_axis_tdata_IBUF[10]_inst 
       (.I(srcBmp_axis_tdata[10]),
        .O(srcBmp_axis_tdata_IBUF[10]));
  IBUF \srcBmp_axis_tdata_IBUF[11]_inst 
       (.I(srcBmp_axis_tdata[11]),
        .O(srcBmp_axis_tdata_IBUF[11]));
  IBUF \srcBmp_axis_tdata_IBUF[12]_inst 
       (.I(srcBmp_axis_tdata[12]),
        .O(srcBmp_axis_tdata_IBUF[12]));
  IBUF \srcBmp_axis_tdata_IBUF[13]_inst 
       (.I(srcBmp_axis_tdata[13]),
        .O(srcBmp_axis_tdata_IBUF[13]));
  IBUF \srcBmp_axis_tdata_IBUF[14]_inst 
       (.I(srcBmp_axis_tdata[14]),
        .O(srcBmp_axis_tdata_IBUF[14]));
  IBUF \srcBmp_axis_tdata_IBUF[15]_inst 
       (.I(srcBmp_axis_tdata[15]),
        .O(srcBmp_axis_tdata_IBUF[15]));
  IBUF \srcBmp_axis_tdata_IBUF[16]_inst 
       (.I(srcBmp_axis_tdata[16]),
        .O(srcBmp_axis_tdata_IBUF[16]));
  IBUF \srcBmp_axis_tdata_IBUF[17]_inst 
       (.I(srcBmp_axis_tdata[17]),
        .O(srcBmp_axis_tdata_IBUF[17]));
  IBUF \srcBmp_axis_tdata_IBUF[18]_inst 
       (.I(srcBmp_axis_tdata[18]),
        .O(srcBmp_axis_tdata_IBUF[18]));
  IBUF \srcBmp_axis_tdata_IBUF[19]_inst 
       (.I(srcBmp_axis_tdata[19]),
        .O(srcBmp_axis_tdata_IBUF[19]));
  IBUF \srcBmp_axis_tdata_IBUF[1]_inst 
       (.I(srcBmp_axis_tdata[1]),
        .O(srcBmp_axis_tdata_IBUF[1]));
  IBUF \srcBmp_axis_tdata_IBUF[20]_inst 
       (.I(srcBmp_axis_tdata[20]),
        .O(srcBmp_axis_tdata_IBUF[20]));
  IBUF \srcBmp_axis_tdata_IBUF[21]_inst 
       (.I(srcBmp_axis_tdata[21]),
        .O(srcBmp_axis_tdata_IBUF[21]));
  IBUF \srcBmp_axis_tdata_IBUF[22]_inst 
       (.I(srcBmp_axis_tdata[22]),
        .O(srcBmp_axis_tdata_IBUF[22]));
  IBUF \srcBmp_axis_tdata_IBUF[23]_inst 
       (.I(srcBmp_axis_tdata[23]),
        .O(srcBmp_axis_tdata_IBUF[23]));
  IBUF \srcBmp_axis_tdata_IBUF[2]_inst 
       (.I(srcBmp_axis_tdata[2]),
        .O(srcBmp_axis_tdata_IBUF[2]));
  IBUF \srcBmp_axis_tdata_IBUF[3]_inst 
       (.I(srcBmp_axis_tdata[3]),
        .O(srcBmp_axis_tdata_IBUF[3]));
  IBUF \srcBmp_axis_tdata_IBUF[4]_inst 
       (.I(srcBmp_axis_tdata[4]),
        .O(srcBmp_axis_tdata_IBUF[4]));
  IBUF \srcBmp_axis_tdata_IBUF[5]_inst 
       (.I(srcBmp_axis_tdata[5]),
        .O(srcBmp_axis_tdata_IBUF[5]));
  IBUF \srcBmp_axis_tdata_IBUF[6]_inst 
       (.I(srcBmp_axis_tdata[6]),
        .O(srcBmp_axis_tdata_IBUF[6]));
  IBUF \srcBmp_axis_tdata_IBUF[7]_inst 
       (.I(srcBmp_axis_tdata[7]),
        .O(srcBmp_axis_tdata_IBUF[7]));
  IBUF \srcBmp_axis_tdata_IBUF[8]_inst 
       (.I(srcBmp_axis_tdata[8]),
        .O(srcBmp_axis_tdata_IBUF[8]));
  IBUF \srcBmp_axis_tdata_IBUF[9]_inst 
       (.I(srcBmp_axis_tdata[9]),
        .O(srcBmp_axis_tdata_IBUF[9]));
  OBUF srcBmp_axis_tready_OBUF_inst
       (.I(srcBmp_axis_tready_OBUF),
        .O(srcBmp_axis_tready));
  IBUF srcBmp_axis_tvalid_IBUF_inst
       (.I(srcBmp_axis_tvalid),
        .O(srcBmp_axis_tvalid_IBUF));
endmodule

module Bic_w2s
   (\FSM_onehot_state_reg[2]_0 ,
    wr_en,
    \FSM_onehot_state_reg[3]_0 ,
    valid_d_reg,
    \wr_cnt_reg[0]_0 ,
    CLK,
    \loop_cnt_reg[0]_0 ,
    din,
    Q,
    full,
    valid_d,
    rst_n_i_IBUF,
    D,
    E);
  output [0:0]\FSM_onehot_state_reg[2]_0 ;
  output wr_en;
  output \FSM_onehot_state_reg[3]_0 ;
  output [24:0]valid_d_reg;
  output [0:0]\wr_cnt_reg[0]_0 ;
  input CLK;
  input \loop_cnt_reg[0]_0 ;
  input [23:0]din;
  input [0:0]Q;
  input full;
  input valid_d;
  input rst_n_i_IBUF;
  input [0:0]D;
  input [0:0]E;

  wire CLK;
  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_1 ;
  wire \FSM_onehot_state[2]_i_1_n_1 ;
  wire \FSM_onehot_state[2]_i_2_n_1 ;
  wire \FSM_onehot_state[2]_i_3_n_1 ;
  wire \FSM_onehot_state[2]_i_4_n_1 ;
  wire \FSM_onehot_state[3]_i_1_n_1 ;
  wire \FSM_onehot_state[3]_i_2_n_1 ;
  wire \FSM_onehot_state[3]_i_3_n_1 ;
  wire \FSM_onehot_state[3]_i_4_n_1 ;
  wire \FSM_onehot_state[4]_i_1_n_1 ;
  wire \FSM_onehot_state[4]_i_2_n_1 ;
  wire \FSM_onehot_state[4]_i_3_n_1 ;
  wire \FSM_onehot_state[4]_i_4_n_1 ;
  wire [0:0]\FSM_onehot_state_reg[2]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg_n_1_[0] ;
  wire \FSM_onehot_state_reg_n_1_[3] ;
  wire \FSM_onehot_state_reg_n_1_[4] ;
  wire [0:0]Q;
  wire bmp_header_inst_i_28_n_1;
  wire bmp_header_inst_i_29_n_1;
  wire bmp_header_inst_i_30_n_1;
  wire bmp_header_inst_i_31_n_1;
  wire bmp_header_inst_i_32_n_1;
  wire bmp_header_inst_i_33_n_1;
  wire bmp_header_inst_i_34_n_1;
  wire bmp_header_inst_i_35_n_1;
  wire bmp_header_inst_i_36_n_1;
  wire bmp_header_inst_i_37_n_1;
  wire bmp_header_inst_i_38_n_1;
  wire bmp_header_inst_i_39_n_1;
  wire bmp_header_inst_i_40_n_1;
  wire bmp_header_inst_i_41_n_1;
  wire bmp_header_inst_i_42_n_1;
  wire bmp_header_inst_i_43_n_1;
  wire bmp_header_inst_i_44_n_1;
  wire bmp_header_inst_i_45_n_1;
  wire bmp_header_inst_i_46_n_1;
  wire bmp_header_inst_i_47_n_1;
  wire bmp_header_inst_i_48_n_1;
  wire bmp_header_inst_i_49_n_1;
  wire bmp_header_inst_i_50_n_1;
  wire bmp_header_inst_i_51_n_1;
  wire [13:0]\data_count[0]__0 ;
  wire [13:0]\data_count[1]__0 ;
  wire [13:0]\data_count[2]__0 ;
  wire [13:0]\data_count[3]__0 ;
  wire [23:0]din;
  wire [23:0]\dout[0]_0 ;
  wire [23:0]\dout[1]_1 ;
  wire [23:0]\dout[2]_2 ;
  wire [23:0]\dout[3]_3 ;
  wire en_f;
  wire en_f_i_1_n_1;
  wire full;
  wire \h_cnt[0]_i_3_n_1 ;
  wire \h_cnt[0]_i_4_n_1 ;
  wire \h_cnt[0]_i_5_n_1 ;
  wire [11:0]h_cnt_reg;
  wire \h_cnt_reg[0]_i_2_n_1 ;
  wire \h_cnt_reg[0]_i_2_n_2 ;
  wire \h_cnt_reg[0]_i_2_n_3 ;
  wire \h_cnt_reg[0]_i_2_n_4 ;
  wire \h_cnt_reg[0]_i_2_n_5 ;
  wire \h_cnt_reg[0]_i_2_n_6 ;
  wire \h_cnt_reg[0]_i_2_n_7 ;
  wire \h_cnt_reg[0]_i_2_n_8 ;
  wire \h_cnt_reg[4]_i_1_n_1 ;
  wire \h_cnt_reg[4]_i_1_n_2 ;
  wire \h_cnt_reg[4]_i_1_n_3 ;
  wire \h_cnt_reg[4]_i_1_n_4 ;
  wire \h_cnt_reg[4]_i_1_n_5 ;
  wire \h_cnt_reg[4]_i_1_n_6 ;
  wire \h_cnt_reg[4]_i_1_n_7 ;
  wire \h_cnt_reg[4]_i_1_n_8 ;
  wire \h_cnt_reg[8]_i_1_n_2 ;
  wire \h_cnt_reg[8]_i_1_n_3 ;
  wire \h_cnt_reg[8]_i_1_n_4 ;
  wire \h_cnt_reg[8]_i_1_n_5 ;
  wire \h_cnt_reg[8]_i_1_n_6 ;
  wire \h_cnt_reg[8]_i_1_n_7 ;
  wire \h_cnt_reg[8]_i_1_n_8 ;
  wire line0_i_25_n_1;
  wire line0_i_33_n_1;
  wire line1_i_1_n_1;
  wire line1_i_3_n_1;
  wire line2_i_3_n_1;
  wire line3_i_3_n_1;
  wire [1:0]loop_cnt;
  wire \loop_cnt[0]_i_1_n_1 ;
  wire \loop_cnt[1]_i_1_n_1 ;
  wire \loop_cnt[1]_i_3_n_1 ;
  wire \loop_cnt[1]_i_4_n_1 ;
  wire \loop_cnt[1]_i_5_n_1 ;
  wire \loop_cnt_reg[0]_0 ;
  wire [3:1]p_0_in;
  wire rd_cnt1;
  wire \rd_cnt[0]_i_10_n_1 ;
  wire \rd_cnt[0]_i_1_n_1 ;
  wire \rd_cnt[0]_i_3_n_1 ;
  wire \rd_cnt[0]_i_4_n_1 ;
  wire \rd_cnt[0]_i_5_n_1 ;
  wire \rd_cnt[0]_i_6_n_1 ;
  wire \rd_cnt[0]_i_7_n_1 ;
  wire \rd_cnt[0]_i_8_n_1 ;
  wire \rd_cnt[0]_i_9_n_1 ;
  wire \rd_cnt[4]_i_2_n_1 ;
  wire \rd_cnt[4]_i_3_n_1 ;
  wire \rd_cnt[4]_i_4_n_1 ;
  wire \rd_cnt[4]_i_5_n_1 ;
  wire \rd_cnt[8]_i_2_n_1 ;
  wire \rd_cnt[8]_i_3_n_1 ;
  wire \rd_cnt[8]_i_4_n_1 ;
  wire [11:0]rd_cnt_reg;
  wire \rd_cnt_reg[0]_i_2_n_1 ;
  wire \rd_cnt_reg[0]_i_2_n_2 ;
  wire \rd_cnt_reg[0]_i_2_n_3 ;
  wire \rd_cnt_reg[0]_i_2_n_4 ;
  wire \rd_cnt_reg[0]_i_2_n_5 ;
  wire \rd_cnt_reg[0]_i_2_n_6 ;
  wire \rd_cnt_reg[0]_i_2_n_7 ;
  wire \rd_cnt_reg[0]_i_2_n_8 ;
  wire \rd_cnt_reg[4]_i_1_n_1 ;
  wire \rd_cnt_reg[4]_i_1_n_2 ;
  wire \rd_cnt_reg[4]_i_1_n_3 ;
  wire \rd_cnt_reg[4]_i_1_n_4 ;
  wire \rd_cnt_reg[4]_i_1_n_5 ;
  wire \rd_cnt_reg[4]_i_1_n_6 ;
  wire \rd_cnt_reg[4]_i_1_n_7 ;
  wire \rd_cnt_reg[4]_i_1_n_8 ;
  wire \rd_cnt_reg[8]_i_1_n_2 ;
  wire \rd_cnt_reg[8]_i_1_n_3 ;
  wire \rd_cnt_reg[8]_i_1_n_4 ;
  wire \rd_cnt_reg[8]_i_1_n_5 ;
  wire \rd_cnt_reg[8]_i_1_n_6 ;
  wire \rd_cnt_reg[8]_i_1_n_7 ;
  wire \rd_cnt_reg[8]_i_1_n_8 ;
  wire [3:0]rd_en;
  wire rst_n_i_IBUF;
  wire valid_d;
  wire valid_d_i_10_n_1;
  wire valid_d_i_11_n_1;
  wire valid_d_i_12_n_1;
  wire valid_d_i_13_n_1;
  wire valid_d_i_14_n_1;
  wire valid_d_i_15_n_1;
  wire valid_d_i_16_n_1;
  wire valid_d_i_2_n_1;
  wire valid_d_i_3_n_1;
  wire valid_d_i_4_n_1;
  wire valid_d_i_5_n_1;
  wire valid_d_i_6_n_1;
  wire valid_d_i_7_n_1;
  wire valid_d_i_8_n_1;
  wire valid_d_i_9_n_1;
  wire [24:0]valid_d_reg;
  wire w_cnt1;
  wire \w_cnt[0]_i_2_n_1 ;
  wire \w_cnt[0]_i_3_n_1 ;
  wire \w_cnt[0]_i_4_n_1 ;
  wire \w_cnt[0]_i_5_n_1 ;
  wire \w_cnt[0]_i_6_n_1 ;
  wire \w_cnt[4]_i_2_n_1 ;
  wire \w_cnt[4]_i_3_n_1 ;
  wire \w_cnt[4]_i_4_n_1 ;
  wire \w_cnt[4]_i_5_n_1 ;
  wire \w_cnt[8]_i_2_n_1 ;
  wire \w_cnt[8]_i_3_n_1 ;
  wire \w_cnt[8]_i_4_n_1 ;
  wire [11:0]w_cnt_reg;
  wire \w_cnt_reg[0]_i_1_n_1 ;
  wire \w_cnt_reg[0]_i_1_n_2 ;
  wire \w_cnt_reg[0]_i_1_n_3 ;
  wire \w_cnt_reg[0]_i_1_n_4 ;
  wire \w_cnt_reg[0]_i_1_n_5 ;
  wire \w_cnt_reg[0]_i_1_n_6 ;
  wire \w_cnt_reg[0]_i_1_n_7 ;
  wire \w_cnt_reg[0]_i_1_n_8 ;
  wire \w_cnt_reg[4]_i_1_n_1 ;
  wire \w_cnt_reg[4]_i_1_n_2 ;
  wire \w_cnt_reg[4]_i_1_n_3 ;
  wire \w_cnt_reg[4]_i_1_n_4 ;
  wire \w_cnt_reg[4]_i_1_n_5 ;
  wire \w_cnt_reg[4]_i_1_n_6 ;
  wire \w_cnt_reg[4]_i_1_n_7 ;
  wire \w_cnt_reg[4]_i_1_n_8 ;
  wire \w_cnt_reg[8]_i_1_n_2 ;
  wire \w_cnt_reg[8]_i_1_n_3 ;
  wire \w_cnt_reg[8]_i_1_n_4 ;
  wire \w_cnt_reg[8]_i_1_n_5 ;
  wire \w_cnt_reg[8]_i_1_n_6 ;
  wire \w_cnt_reg[8]_i_1_n_7 ;
  wire \w_cnt_reg[8]_i_1_n_8 ;
  wire [3:1]wr_cnt_reg;
  wire [0:0]\wr_cnt_reg[0]_0 ;
  wire wr_en;
  wire [3:2]wr_en_4;
  wire [3:3]\NLW_h_cnt_reg[8]_i_1_CO_UNCONNECTED ;
  wire NLW_line0_empty_UNCONNECTED;
  wire NLW_line0_full_UNCONNECTED;
  wire NLW_line1_empty_UNCONNECTED;
  wire NLW_line1_full_UNCONNECTED;
  wire NLW_line2_empty_UNCONNECTED;
  wire NLW_line2_full_UNCONNECTED;
  wire NLW_line3_empty_UNCONNECTED;
  wire NLW_line3_full_UNCONNECTED;
  wire [3:3]\NLW_rd_cnt_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_w_cnt_reg[8]_i_1_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_1_[0] ),
        .I1(Q),
        .O(\FSM_onehot_state[0]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(\FSM_onehot_state[2]_i_2_n_1 ),
        .I1(\FSM_onehot_state_reg[2]_0 ),
        .I2(\FSM_onehot_state[3]_i_2_n_1 ),
        .I3(\FSM_onehot_state_reg_n_1_[3] ),
        .O(\FSM_onehot_state[2]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_onehot_state[2]_i_2 
       (.I0(\FSM_onehot_state[2]_i_3_n_1 ),
        .I1(\FSM_onehot_state[2]_i_4_n_1 ),
        .I2(\data_count[3]__0 [3]),
        .I3(\data_count[3]__0 [2]),
        .I4(\data_count[3]__0 [11]),
        .I5(\data_count[3]__0 [0]),
        .O(\FSM_onehot_state[2]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_state[2]_i_3 
       (.I0(\data_count[3]__0 [12]),
        .I1(\data_count[3]__0 [5]),
        .I2(\data_count[3]__0 [1]),
        .I3(\data_count[3]__0 [8]),
        .I4(\data_count[3]__0 [10]),
        .I5(\data_count[3]__0 [13]),
        .O(\FSM_onehot_state[2]_i_3_n_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[2]_i_4 
       (.I0(\data_count[3]__0 [7]),
        .I1(\data_count[3]__0 [4]),
        .I2(\data_count[3]__0 [9]),
        .I3(\data_count[3]__0 [6]),
        .O(\FSM_onehot_state[2]_i_4_n_1 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state[3]_i_2_n_1 ),
        .I1(\FSM_onehot_state_reg_n_1_[3] ),
        .I2(\FSM_onehot_state[4]_i_2_n_1 ),
        .I3(\FSM_onehot_state_reg_n_1_[4] ),
        .O(\FSM_onehot_state[3]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(\FSM_onehot_state[3]_i_3_n_1 ),
        .I1(h_cnt_reg[0]),
        .I2(h_cnt_reg[9]),
        .I3(h_cnt_reg[1]),
        .I4(h_cnt_reg[8]),
        .I5(w_cnt1),
        .O(\FSM_onehot_state[3]_i_2_n_1 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \FSM_onehot_state[3]_i_3 
       (.I0(h_cnt_reg[6]),
        .I1(h_cnt_reg[11]),
        .I2(h_cnt_reg[2]),
        .I3(h_cnt_reg[5]),
        .I4(\FSM_onehot_state[3]_i_4_n_1 ),
        .O(\FSM_onehot_state[3]_i_3_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    \FSM_onehot_state[3]_i_4 
       (.I0(h_cnt_reg[10]),
        .I1(h_cnt_reg[7]),
        .I2(h_cnt_reg[3]),
        .I3(h_cnt_reg[4]),
        .O(\FSM_onehot_state[3]_i_4_n_1 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[4]_i_1 
       (.I0(\FSM_onehot_state[4]_i_2_n_1 ),
        .I1(\FSM_onehot_state_reg_n_1_[4] ),
        .I2(\FSM_onehot_state_reg_n_1_[0] ),
        .I3(Q),
        .O(\FSM_onehot_state[4]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    \FSM_onehot_state[4]_i_2 
       (.I0(\FSM_onehot_state[4]_i_3_n_1 ),
        .I1(h_cnt_reg[0]),
        .I2(h_cnt_reg[9]),
        .I3(h_cnt_reg[1]),
        .I4(h_cnt_reg[8]),
        .I5(w_cnt1),
        .O(\FSM_onehot_state[4]_i_2_n_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_state[4]_i_3 
       (.I0(h_cnt_reg[2]),
        .I1(h_cnt_reg[11]),
        .I2(h_cnt_reg[4]),
        .I3(h_cnt_reg[5]),
        .I4(\FSM_onehot_state[4]_i_4_n_1 ),
        .O(\FSM_onehot_state[4]_i_3_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[4]_i_4 
       (.I0(h_cnt_reg[10]),
        .I1(h_cnt_reg[7]),
        .I2(h_cnt_reg[6]),
        .I3(h_cnt_reg[3]),
        .O(\FSM_onehot_state[4]_i_4_n_1 ));
  (* FSM_ENCODED_STATES = "IDLE:00001,WRONLY:10000,WRRD:01000,RDONLY:00100,DONE:00010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_1 ),
        .PRE(\loop_cnt_reg[0]_0 ),
        .Q(\FSM_onehot_state_reg_n_1_[0] ));
  (* FSM_ENCODED_STATES = "IDLE:00001,WRONLY:10000,WRRD:01000,RDONLY:00100,DONE:00010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\FSM_onehot_state[2]_i_1_n_1 ),
        .Q(\FSM_onehot_state_reg[2]_0 ));
  (* FSM_ENCODED_STATES = "IDLE:00001,WRONLY:10000,WRRD:01000,RDONLY:00100,DONE:00010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\FSM_onehot_state[3]_i_1_n_1 ),
        .Q(\FSM_onehot_state_reg_n_1_[3] ));
  (* FSM_ENCODED_STATES = "IDLE:00001,WRONLY:10000,WRRD:01000,RDONLY:00100,DONE:00010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\FSM_onehot_state[4]_i_1_n_1 ),
        .Q(\FSM_onehot_state_reg_n_1_[4] ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_1
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(valid_d),
        .O(valid_d_reg[24]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_10
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_36_n_1),
        .O(valid_d_reg[15]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_11
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_37_n_1),
        .O(valid_d_reg[14]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_12
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_38_n_1),
        .O(valid_d_reg[13]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_13
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_39_n_1),
        .O(valid_d_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_14
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_40_n_1),
        .O(valid_d_reg[11]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_15
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_41_n_1),
        .O(valid_d_reg[10]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_16
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_42_n_1),
        .O(valid_d_reg[9]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_17
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_43_n_1),
        .O(valid_d_reg[8]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_18
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_44_n_1),
        .O(valid_d_reg[7]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_19
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_45_n_1),
        .O(valid_d_reg[6]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_2
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_28_n_1),
        .O(valid_d_reg[23]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_20
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_46_n_1),
        .O(valid_d_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_21
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_47_n_1),
        .O(valid_d_reg[4]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_22
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_48_n_1),
        .O(valid_d_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_23
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_49_n_1),
        .O(valid_d_reg[2]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_24
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_50_n_1),
        .O(valid_d_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_25
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_51_n_1),
        .O(valid_d_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_26
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(full),
        .O(wr_en));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_28
       (.I0(\dout[2]_2 [23]),
        .I1(\dout[1]_1 [23]),
        .I2(\dout[3]_3 [23]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [23]),
        .O(bmp_header_inst_i_28_n_1));
  LUT6 #(
    .INIT(64'h550F3300550F33FF)) 
    bmp_header_inst_i_29
       (.I0(\dout[3]_3 [22]),
        .I1(\dout[2]_2 [22]),
        .I2(\dout[1]_1 [22]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [22]),
        .O(bmp_header_inst_i_29_n_1));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_3
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_29_n_1),
        .O(valid_d_reg[22]));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_30
       (.I0(\dout[2]_2 [21]),
        .I1(\dout[1]_1 [21]),
        .I2(\dout[3]_3 [21]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [21]),
        .O(bmp_header_inst_i_30_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_31
       (.I0(\dout[2]_2 [20]),
        .I1(\dout[1]_1 [20]),
        .I2(\dout[3]_3 [20]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [20]),
        .O(bmp_header_inst_i_31_n_1));
  LUT6 #(
    .INIT(64'h550F3300550F33FF)) 
    bmp_header_inst_i_32
       (.I0(\dout[3]_3 [19]),
        .I1(\dout[2]_2 [19]),
        .I2(\dout[1]_1 [19]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [19]),
        .O(bmp_header_inst_i_32_n_1));
  LUT6 #(
    .INIT(64'h550F3300550F33FF)) 
    bmp_header_inst_i_33
       (.I0(\dout[3]_3 [18]),
        .I1(\dout[2]_2 [18]),
        .I2(\dout[1]_1 [18]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [18]),
        .O(bmp_header_inst_i_33_n_1));
  LUT6 #(
    .INIT(64'h0F0055330FFF5533)) 
    bmp_header_inst_i_34
       (.I0(\dout[2]_2 [17]),
        .I1(\dout[0]_0 [17]),
        .I2(\dout[3]_3 [17]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[1]_1 [17]),
        .O(bmp_header_inst_i_34_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_35
       (.I0(\dout[2]_2 [16]),
        .I1(\dout[1]_1 [16]),
        .I2(\dout[3]_3 [16]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [16]),
        .O(bmp_header_inst_i_35_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_36
       (.I0(\dout[2]_2 [15]),
        .I1(\dout[1]_1 [15]),
        .I2(\dout[3]_3 [15]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [15]),
        .O(bmp_header_inst_i_36_n_1));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    bmp_header_inst_i_37
       (.I0(\dout[3]_3 [14]),
        .I1(\dout[2]_2 [14]),
        .I2(\dout[0]_0 [14]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[1]_1 [14]),
        .O(bmp_header_inst_i_37_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_38
       (.I0(\dout[2]_2 [13]),
        .I1(\dout[1]_1 [13]),
        .I2(\dout[3]_3 [13]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [13]),
        .O(bmp_header_inst_i_38_n_1));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    bmp_header_inst_i_39
       (.I0(\dout[3]_3 [12]),
        .I1(\dout[2]_2 [12]),
        .I2(\dout[0]_0 [12]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[1]_1 [12]),
        .O(bmp_header_inst_i_39_n_1));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_4
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_30_n_1),
        .O(valid_d_reg[21]));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_40
       (.I0(\dout[2]_2 [11]),
        .I1(\dout[1]_1 [11]),
        .I2(\dout[3]_3 [11]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [11]),
        .O(bmp_header_inst_i_40_n_1));
  LUT6 #(
    .INIT(64'h550F3300550F33FF)) 
    bmp_header_inst_i_41
       (.I0(\dout[3]_3 [10]),
        .I1(\dout[2]_2 [10]),
        .I2(\dout[1]_1 [10]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [10]),
        .O(bmp_header_inst_i_41_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_42
       (.I0(\dout[2]_2 [9]),
        .I1(\dout[1]_1 [9]),
        .I2(\dout[3]_3 [9]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [9]),
        .O(bmp_header_inst_i_42_n_1));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    bmp_header_inst_i_43
       (.I0(\dout[3]_3 [8]),
        .I1(\dout[2]_2 [8]),
        .I2(\dout[0]_0 [8]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[1]_1 [8]),
        .O(bmp_header_inst_i_43_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_44
       (.I0(\dout[2]_2 [7]),
        .I1(\dout[1]_1 [7]),
        .I2(\dout[3]_3 [7]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [7]),
        .O(bmp_header_inst_i_44_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_45
       (.I0(\dout[2]_2 [6]),
        .I1(\dout[1]_1 [6]),
        .I2(\dout[3]_3 [6]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [6]),
        .O(bmp_header_inst_i_45_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_46
       (.I0(\dout[2]_2 [5]),
        .I1(\dout[1]_1 [5]),
        .I2(\dout[3]_3 [5]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [5]),
        .O(bmp_header_inst_i_46_n_1));
  LUT6 #(
    .INIT(64'h550F3300550F33FF)) 
    bmp_header_inst_i_47
       (.I0(\dout[3]_3 [4]),
        .I1(\dout[2]_2 [4]),
        .I2(\dout[1]_1 [4]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [4]),
        .O(bmp_header_inst_i_47_n_1));
  LUT6 #(
    .INIT(64'h550F3300550F33FF)) 
    bmp_header_inst_i_48
       (.I0(\dout[3]_3 [3]),
        .I1(\dout[2]_2 [3]),
        .I2(\dout[1]_1 [3]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [3]),
        .O(bmp_header_inst_i_48_n_1));
  LUT6 #(
    .INIT(64'h0F3355000F3355FF)) 
    bmp_header_inst_i_49
       (.I0(\dout[2]_2 [2]),
        .I1(\dout[1]_1 [2]),
        .I2(\dout[3]_3 [2]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[0]_0 [2]),
        .O(bmp_header_inst_i_49_n_1));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_5
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_31_n_1),
        .O(valid_d_reg[20]));
  LUT6 #(
    .INIT(64'h0F0055330FFF5533)) 
    bmp_header_inst_i_50
       (.I0(\dout[2]_2 [1]),
        .I1(\dout[0]_0 [1]),
        .I2(\dout[3]_3 [1]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[1]_1 [1]),
        .O(bmp_header_inst_i_50_n_1));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    bmp_header_inst_i_51
       (.I0(\dout[3]_3 [0]),
        .I1(\dout[2]_2 [0]),
        .I2(\dout[0]_0 [0]),
        .I3(loop_cnt[1]),
        .I4(loop_cnt[0]),
        .I5(\dout[1]_1 [0]),
        .O(bmp_header_inst_i_51_n_1));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_6
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_32_n_1),
        .O(valid_d_reg[19]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_7
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_33_n_1),
        .O(valid_d_reg[18]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_8
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_34_n_1),
        .O(valid_d_reg[17]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bmp_header_inst_i_9
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(bmp_header_inst_i_35_n_1),
        .O(valid_d_reg[16]));
  LUT3 #(
    .INIT(8'hFE)) 
    en_f_i_1
       (.I0(en_f),
        .I1(\FSM_onehot_state_reg_n_1_[3] ),
        .I2(\FSM_onehot_state_reg[2]_0 ),
        .O(en_f_i_1_n_1));
  FDCE #(
    .INIT(1'b0)) 
    en_f_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(en_f_i_1_n_1),
        .Q(en_f));
  LUT5 #(
    .INIT(32'h20000000)) 
    \h_cnt[0]_i_1__0 
       (.I0(\h_cnt[0]_i_3_n_1 ),
        .I1(\h_cnt[0]_i_4_n_1 ),
        .I2(w_cnt_reg[11]),
        .I3(w_cnt_reg[5]),
        .I4(Q),
        .O(w_cnt1));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \h_cnt[0]_i_3 
       (.I0(w_cnt_reg[7]),
        .I1(w_cnt_reg[4]),
        .I2(w_cnt_reg[0]),
        .I3(w_cnt_reg[10]),
        .I4(w_cnt_reg[3]),
        .I5(w_cnt_reg[9]),
        .O(\h_cnt[0]_i_3_n_1 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \h_cnt[0]_i_4 
       (.I0(w_cnt_reg[6]),
        .I1(w_cnt_reg[2]),
        .I2(w_cnt_reg[1]),
        .I3(w_cnt_reg[8]),
        .O(\h_cnt[0]_i_4_n_1 ));
  LUT1 #(
    .INIT(2'h1)) 
    \h_cnt[0]_i_5 
       (.I0(h_cnt_reg[0]),
        .O(\h_cnt[0]_i_5_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[0] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[0]_i_2_n_8 ),
        .Q(h_cnt_reg[0]));
  CARRY4 \h_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\h_cnt_reg[0]_i_2_n_1 ,\h_cnt_reg[0]_i_2_n_2 ,\h_cnt_reg[0]_i_2_n_3 ,\h_cnt_reg[0]_i_2_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\h_cnt_reg[0]_i_2_n_5 ,\h_cnt_reg[0]_i_2_n_6 ,\h_cnt_reg[0]_i_2_n_7 ,\h_cnt_reg[0]_i_2_n_8 }),
        .S({h_cnt_reg[3:1],\h_cnt[0]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[10] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[8]_i_1_n_6 ),
        .Q(h_cnt_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[11] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[8]_i_1_n_5 ),
        .Q(h_cnt_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[1] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[0]_i_2_n_7 ),
        .Q(h_cnt_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[2] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[0]_i_2_n_6 ),
        .Q(h_cnt_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[3] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[0]_i_2_n_5 ),
        .Q(h_cnt_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[4] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[4]_i_1_n_8 ),
        .Q(h_cnt_reg[4]));
  CARRY4 \h_cnt_reg[4]_i_1 
       (.CI(\h_cnt_reg[0]_i_2_n_1 ),
        .CO({\h_cnt_reg[4]_i_1_n_1 ,\h_cnt_reg[4]_i_1_n_2 ,\h_cnt_reg[4]_i_1_n_3 ,\h_cnt_reg[4]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\h_cnt_reg[4]_i_1_n_5 ,\h_cnt_reg[4]_i_1_n_6 ,\h_cnt_reg[4]_i_1_n_7 ,\h_cnt_reg[4]_i_1_n_8 }),
        .S(h_cnt_reg[7:4]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[5] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[4]_i_1_n_7 ),
        .Q(h_cnt_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[6] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[4]_i_1_n_6 ),
        .Q(h_cnt_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[7] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[4]_i_1_n_5 ),
        .Q(h_cnt_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[8] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[8]_i_1_n_8 ),
        .Q(h_cnt_reg[8]));
  CARRY4 \h_cnt_reg[8]_i_1 
       (.CI(\h_cnt_reg[4]_i_1_n_1 ),
        .CO({\NLW_h_cnt_reg[8]_i_1_CO_UNCONNECTED [3],\h_cnt_reg[8]_i_1_n_2 ,\h_cnt_reg[8]_i_1_n_3 ,\h_cnt_reg[8]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\h_cnt_reg[8]_i_1_n_5 ,\h_cnt_reg[8]_i_1_n_6 ,\h_cnt_reg[8]_i_1_n_7 ,\h_cnt_reg[8]_i_1_n_8 }),
        .S(h_cnt_reg[11:8]));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[9] 
       (.C(CLK),
        .CE(w_cnt1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\h_cnt_reg[8]_i_1_n_7 ),
        .Q(h_cnt_reg[9]));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_24x8192/fifo_24x8192.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_24x8192 line0
       (.clk(CLK),
        .data_count(\data_count[0]__0 ),
        .din(din),
        .dout(\dout[0]_0 ),
        .empty(NLW_line0_empty_UNCONNECTED),
        .full(NLW_line0_full_UNCONNECTED),
        .rd_en(rd_en[0]),
        .srst(\loop_cnt_reg[0]_0 ),
        .wr_en(line0_i_25_n_1));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    line0_i_25
       (.I0(wr_cnt_reg[3]),
        .I1(rst_n_i_IBUF),
        .I2(Q),
        .I3(wr_cnt_reg[2]),
        .O(line0_i_25_n_1));
  LUT6 #(
    .INIT(64'h00000000E0000000)) 
    line0_i_26
       (.I0(\FSM_onehot_state_reg_n_1_[3] ),
        .I1(\FSM_onehot_state_reg[2]_0 ),
        .I2(en_f),
        .I3(\rd_cnt[0]_i_1_n_1 ),
        .I4(rst_n_i_IBUF),
        .I5(line0_i_33_n_1),
        .O(rd_en[0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'hE)) 
    line0_i_33
       (.I0(loop_cnt[0]),
        .I1(loop_cnt[1]),
        .O(line0_i_33_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_24x8192/fifo_24x8192.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_24x8192 line1
       (.clk(CLK),
        .data_count(\data_count[1]__0 ),
        .din(din),
        .dout(\dout[1]_1 ),
        .empty(NLW_line1_empty_UNCONNECTED),
        .full(NLW_line1_full_UNCONNECTED),
        .rd_en(rd_en[1]),
        .srst(\loop_cnt_reg[0]_0 ),
        .wr_en(line1_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    line1_i_1
       (.I0(wr_cnt_reg[3]),
        .I1(wr_cnt_reg[2]),
        .I2(rst_n_i_IBUF),
        .I3(Q),
        .O(line1_i_1_n_1));
  LUT6 #(
    .INIT(64'hE000000000000000)) 
    line1_i_2
       (.I0(\FSM_onehot_state_reg_n_1_[3] ),
        .I1(\FSM_onehot_state_reg[2]_0 ),
        .I2(en_f),
        .I3(\rd_cnt[0]_i_1_n_1 ),
        .I4(line1_i_3_n_1),
        .I5(rst_n_i_IBUF),
        .O(rd_en[1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    line1_i_3
       (.I0(loop_cnt[0]),
        .I1(loop_cnt[1]),
        .O(line1_i_3_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_24x8192/fifo_24x8192.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_24x8192 line2
       (.clk(CLK),
        .data_count(\data_count[2]__0 ),
        .din(din),
        .dout(\dout[2]_2 ),
        .empty(NLW_line2_empty_UNCONNECTED),
        .full(NLW_line2_full_UNCONNECTED),
        .rd_en(rd_en[2]),
        .srst(\loop_cnt_reg[0]_0 ),
        .wr_en(wr_en_4[2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    line2_i_1
       (.I0(wr_cnt_reg[3]),
        .I1(rst_n_i_IBUF),
        .I2(Q),
        .I3(wr_cnt_reg[2]),
        .O(wr_en_4[2]));
  LUT6 #(
    .INIT(64'hE000000000000000)) 
    line2_i_2
       (.I0(\FSM_onehot_state_reg_n_1_[3] ),
        .I1(\FSM_onehot_state_reg[2]_0 ),
        .I2(en_f),
        .I3(\rd_cnt[0]_i_1_n_1 ),
        .I4(line2_i_3_n_1),
        .I5(rst_n_i_IBUF),
        .O(rd_en[2]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    line2_i_3
       (.I0(loop_cnt[1]),
        .I1(loop_cnt[0]),
        .O(line2_i_3_n_1));
  (* IMPORTED_FROM = "d:/VivadoProject/Bicubic/Bicubic.srcs/sources_1/ip/fifo_24x8192/fifo_24x8192.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
  fifo_24x8192 line3
       (.clk(CLK),
        .data_count(\data_count[3]__0 ),
        .din(din),
        .dout(\dout[3]_3 ),
        .empty(NLW_line3_empty_UNCONNECTED),
        .full(NLW_line3_full_UNCONNECTED),
        .rd_en(rd_en[3]),
        .srst(\loop_cnt_reg[0]_0 ),
        .wr_en(wr_en_4[3]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    line3_i_1
       (.I0(wr_cnt_reg[3]),
        .I1(wr_cnt_reg[2]),
        .I2(rst_n_i_IBUF),
        .I3(Q),
        .O(wr_en_4[3]));
  LUT6 #(
    .INIT(64'hE000000000000000)) 
    line3_i_2
       (.I0(\FSM_onehot_state_reg_n_1_[3] ),
        .I1(\FSM_onehot_state_reg[2]_0 ),
        .I2(en_f),
        .I3(\rd_cnt[0]_i_1_n_1 ),
        .I4(line3_i_3_n_1),
        .I5(rst_n_i_IBUF),
        .O(rd_en[3]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h8)) 
    line3_i_3
       (.I0(loop_cnt[0]),
        .I1(loop_cnt[1]),
        .O(line3_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \loop_cnt[0]_i_1 
       (.I0(rd_cnt1),
        .I1(loop_cnt[0]),
        .O(\loop_cnt[0]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \loop_cnt[1]_i_1 
       (.I0(loop_cnt[0]),
        .I1(rd_cnt1),
        .I2(loop_cnt[1]),
        .O(\loop_cnt[1]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFBA)) 
    \loop_cnt[1]_i_2 
       (.I0(valid_d_i_6_n_1),
        .I1(\FSM_onehot_state[2]_i_2_n_1 ),
        .I2(line3_i_3_n_1),
        .I3(valid_d_i_4_n_1),
        .I4(valid_d_i_3_n_1),
        .I5(\loop_cnt[1]_i_3_n_1 ),
        .O(rd_cnt1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    \loop_cnt[1]_i_3 
       (.I0(rd_cnt_reg[2]),
        .I1(rd_cnt_reg[7]),
        .I2(rd_cnt_reg[3]),
        .I3(rd_cnt_reg[9]),
        .I4(\loop_cnt[1]_i_4_n_1 ),
        .I5(\loop_cnt[1]_i_5_n_1 ),
        .O(\loop_cnt[1]_i_3_n_1 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \loop_cnt[1]_i_4 
       (.I0(rd_cnt_reg[10]),
        .I1(rd_cnt_reg[6]),
        .I2(rd_cnt_reg[0]),
        .I3(rd_cnt_reg[8]),
        .O(\loop_cnt[1]_i_4_n_1 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \loop_cnt[1]_i_5 
       (.I0(rd_cnt_reg[4]),
        .I1(rd_cnt_reg[1]),
        .I2(rd_cnt_reg[11]),
        .I3(rd_cnt_reg[5]),
        .O(\loop_cnt[1]_i_5_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \loop_cnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\loop_cnt[0]_i_1_n_1 ),
        .Q(loop_cnt[0]));
  FDCE #(
    .INIT(1'b0)) 
    \loop_cnt_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\loop_cnt[1]_i_1_n_1 ),
        .Q(loop_cnt[1]));
  LUT6 #(
    .INIT(64'h0503F50305F3F5F3)) 
    \rd_cnt[0]_i_1 
       (.I0(\rd_cnt[0]_i_3_n_1 ),
        .I1(\rd_cnt[0]_i_4_n_1 ),
        .I2(loop_cnt[1]),
        .I3(loop_cnt[0]),
        .I4(\FSM_onehot_state[2]_i_2_n_1 ),
        .I5(\rd_cnt[0]_i_5_n_1 ),
        .O(\rd_cnt[0]_i_1_n_1 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rd_cnt[0]_i_10 
       (.I0(rd_cnt_reg[0]),
        .I1(rd_cnt1),
        .O(\rd_cnt[0]_i_10_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \rd_cnt[0]_i_3 
       (.I0(valid_d_i_9_n_1),
        .I1(valid_d_i_8_n_1),
        .I2(\data_count[1]__0 [8]),
        .I3(\data_count[1]__0 [2]),
        .I4(\data_count[1]__0 [6]),
        .I5(\data_count[1]__0 [4]),
        .O(\rd_cnt[0]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \rd_cnt[0]_i_4 
       (.I0(valid_d_i_12_n_1),
        .I1(valid_d_i_11_n_1),
        .I2(\data_count[0]__0 [8]),
        .I3(\data_count[0]__0 [2]),
        .I4(\data_count[0]__0 [6]),
        .I5(\data_count[0]__0 [4]),
        .O(\rd_cnt[0]_i_4_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \rd_cnt[0]_i_5 
       (.I0(valid_d_i_16_n_1),
        .I1(valid_d_i_15_n_1),
        .I2(\data_count[2]__0 [8]),
        .I3(\data_count[2]__0 [2]),
        .I4(\data_count[2]__0 [6]),
        .I5(\data_count[2]__0 [4]),
        .O(\rd_cnt[0]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[0]_i_6 
       (.I0(rd_cnt_reg[0]),
        .I1(rd_cnt1),
        .O(\rd_cnt[0]_i_6_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[0]_i_7 
       (.I0(rd_cnt_reg[3]),
        .I1(rd_cnt1),
        .O(\rd_cnt[0]_i_7_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[0]_i_8 
       (.I0(rd_cnt_reg[2]),
        .I1(rd_cnt1),
        .O(\rd_cnt[0]_i_8_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[0]_i_9 
       (.I0(rd_cnt_reg[1]),
        .I1(rd_cnt1),
        .O(\rd_cnt[0]_i_9_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[4]_i_2 
       (.I0(rd_cnt_reg[7]),
        .I1(rd_cnt1),
        .O(\rd_cnt[4]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[4]_i_3 
       (.I0(rd_cnt_reg[6]),
        .I1(rd_cnt1),
        .O(\rd_cnt[4]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[4]_i_4 
       (.I0(rd_cnt_reg[5]),
        .I1(rd_cnt1),
        .O(\rd_cnt[4]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[4]_i_5 
       (.I0(rd_cnt_reg[4]),
        .I1(rd_cnt1),
        .O(\rd_cnt[4]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[8]_i_2 
       (.I0(rd_cnt_reg[11]),
        .I1(rd_cnt1),
        .O(\rd_cnt[8]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[8]_i_3 
       (.I0(rd_cnt_reg[10]),
        .I1(rd_cnt1),
        .O(\rd_cnt[8]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_cnt[8]_i_4 
       (.I0(rd_cnt_reg[9]),
        .I1(rd_cnt1),
        .O(\rd_cnt[8]_i_4_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[0] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[0]_i_2_n_8 ),
        .Q(rd_cnt_reg[0]));
  CARRY4 \rd_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\rd_cnt_reg[0]_i_2_n_1 ,\rd_cnt_reg[0]_i_2_n_2 ,\rd_cnt_reg[0]_i_2_n_3 ,\rd_cnt_reg[0]_i_2_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\rd_cnt[0]_i_6_n_1 }),
        .O({\rd_cnt_reg[0]_i_2_n_5 ,\rd_cnt_reg[0]_i_2_n_6 ,\rd_cnt_reg[0]_i_2_n_7 ,\rd_cnt_reg[0]_i_2_n_8 }),
        .S({\rd_cnt[0]_i_7_n_1 ,\rd_cnt[0]_i_8_n_1 ,\rd_cnt[0]_i_9_n_1 ,\rd_cnt[0]_i_10_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[10] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[8]_i_1_n_6 ),
        .Q(rd_cnt_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[11] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[8]_i_1_n_5 ),
        .Q(rd_cnt_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[1] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[0]_i_2_n_7 ),
        .Q(rd_cnt_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[2] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[0]_i_2_n_6 ),
        .Q(rd_cnt_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[3] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[0]_i_2_n_5 ),
        .Q(rd_cnt_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[4] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[4]_i_1_n_8 ),
        .Q(rd_cnt_reg[4]));
  CARRY4 \rd_cnt_reg[4]_i_1 
       (.CI(\rd_cnt_reg[0]_i_2_n_1 ),
        .CO({\rd_cnt_reg[4]_i_1_n_1 ,\rd_cnt_reg[4]_i_1_n_2 ,\rd_cnt_reg[4]_i_1_n_3 ,\rd_cnt_reg[4]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rd_cnt_reg[4]_i_1_n_5 ,\rd_cnt_reg[4]_i_1_n_6 ,\rd_cnt_reg[4]_i_1_n_7 ,\rd_cnt_reg[4]_i_1_n_8 }),
        .S({\rd_cnt[4]_i_2_n_1 ,\rd_cnt[4]_i_3_n_1 ,\rd_cnt[4]_i_4_n_1 ,\rd_cnt[4]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[5] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[4]_i_1_n_7 ),
        .Q(rd_cnt_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[6] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[4]_i_1_n_6 ),
        .Q(rd_cnt_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[7] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[4]_i_1_n_5 ),
        .Q(rd_cnt_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[8] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[8]_i_1_n_8 ),
        .Q(rd_cnt_reg[8]));
  CARRY4 \rd_cnt_reg[8]_i_1 
       (.CI(\rd_cnt_reg[4]_i_1_n_1 ),
        .CO({\NLW_rd_cnt_reg[8]_i_1_CO_UNCONNECTED [3],\rd_cnt_reg[8]_i_1_n_2 ,\rd_cnt_reg[8]_i_1_n_3 ,\rd_cnt_reg[8]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rd_cnt_reg[8]_i_1_n_5 ,\rd_cnt_reg[8]_i_1_n_6 ,\rd_cnt_reg[8]_i_1_n_7 ,\rd_cnt_reg[8]_i_1_n_8 }),
        .S({\rd_cnt[8]_i_2_n_1 ,\rd_cnt[8]_i_3_n_1 ,\rd_cnt[8]_i_4_n_1 ,rd_cnt_reg[8]}));
  FDCE #(
    .INIT(1'b0)) 
    \rd_cnt_reg[9] 
       (.C(CLK),
        .CE(\rd_cnt[0]_i_1_n_1 ),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\rd_cnt_reg[8]_i_1_n_7 ),
        .Q(rd_cnt_reg[9]));
  LUT6 #(
    .INIT(64'h5555555400000000)) 
    valid_d_i_1
       (.I0(valid_d_i_2_n_1),
        .I1(valid_d_i_3_n_1),
        .I2(valid_d_i_4_n_1),
        .I3(valid_d_i_5_n_1),
        .I4(valid_d_i_6_n_1),
        .I5(rst_n_i_IBUF),
        .O(\FSM_onehot_state_reg[3]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_10
       (.I0(\data_count[0]__0 [8]),
        .I1(\data_count[0]__0 [2]),
        .I2(\data_count[0]__0 [6]),
        .I3(\data_count[0]__0 [4]),
        .O(valid_d_i_10_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_11
       (.I0(\data_count[0]__0 [13]),
        .I1(\data_count[0]__0 [10]),
        .I2(\data_count[0]__0 [5]),
        .I3(\data_count[0]__0 [3]),
        .O(valid_d_i_11_n_1));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    valid_d_i_12
       (.I0(\data_count[0]__0 [12]),
        .I1(\data_count[0]__0 [0]),
        .I2(\data_count[0]__0 [1]),
        .I3(\data_count[0]__0 [7]),
        .I4(\data_count[0]__0 [9]),
        .I5(\data_count[0]__0 [11]),
        .O(valid_d_i_12_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_13
       (.I0(\data_count[3]__0 [3]),
        .I1(\data_count[3]__0 [2]),
        .I2(\data_count[3]__0 [11]),
        .I3(\data_count[3]__0 [0]),
        .O(valid_d_i_13_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_14
       (.I0(\data_count[2]__0 [8]),
        .I1(\data_count[2]__0 [2]),
        .I2(\data_count[2]__0 [6]),
        .I3(\data_count[2]__0 [4]),
        .O(valid_d_i_14_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_15
       (.I0(\data_count[2]__0 [13]),
        .I1(\data_count[2]__0 [10]),
        .I2(\data_count[2]__0 [5]),
        .I3(\data_count[2]__0 [3]),
        .O(valid_d_i_15_n_1));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    valid_d_i_16
       (.I0(\data_count[2]__0 [12]),
        .I1(\data_count[2]__0 [0]),
        .I2(\data_count[2]__0 [1]),
        .I3(\data_count[2]__0 [7]),
        .I4(\data_count[2]__0 [9]),
        .I5(\data_count[2]__0 [11]),
        .O(valid_d_i_16_n_1));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    valid_d_i_2
       (.I0(\FSM_onehot_state_reg_n_1_[3] ),
        .I1(\FSM_onehot_state_reg[2]_0 ),
        .I2(en_f),
        .O(valid_d_i_2_n_1));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h44404444)) 
    valid_d_i_3
       (.I0(loop_cnt[1]),
        .I1(loop_cnt[0]),
        .I2(valid_d_i_7_n_1),
        .I3(valid_d_i_8_n_1),
        .I4(valid_d_i_9_n_1),
        .O(valid_d_i_3_n_1));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h11101111)) 
    valid_d_i_4
       (.I0(loop_cnt[1]),
        .I1(loop_cnt[0]),
        .I2(valid_d_i_10_n_1),
        .I3(valid_d_i_11_n_1),
        .I4(valid_d_i_12_n_1),
        .O(valid_d_i_4_n_1));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h88808888)) 
    valid_d_i_5
       (.I0(loop_cnt[1]),
        .I1(loop_cnt[0]),
        .I2(valid_d_i_13_n_1),
        .I3(\FSM_onehot_state[2]_i_4_n_1 ),
        .I4(\FSM_onehot_state[2]_i_3_n_1 ),
        .O(valid_d_i_5_n_1));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h44404444)) 
    valid_d_i_6
       (.I0(loop_cnt[0]),
        .I1(loop_cnt[1]),
        .I2(valid_d_i_14_n_1),
        .I3(valid_d_i_15_n_1),
        .I4(valid_d_i_16_n_1),
        .O(valid_d_i_6_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_7
       (.I0(\data_count[1]__0 [8]),
        .I1(\data_count[1]__0 [2]),
        .I2(\data_count[1]__0 [6]),
        .I3(\data_count[1]__0 [4]),
        .O(valid_d_i_7_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    valid_d_i_8
       (.I0(\data_count[1]__0 [13]),
        .I1(\data_count[1]__0 [10]),
        .I2(\data_count[1]__0 [5]),
        .I3(\data_count[1]__0 [3]),
        .O(valid_d_i_8_n_1));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    valid_d_i_9
       (.I0(\data_count[1]__0 [12]),
        .I1(\data_count[1]__0 [0]),
        .I2(\data_count[1]__0 [1]),
        .I3(\data_count[1]__0 [7]),
        .I4(\data_count[1]__0 [9]),
        .I5(\data_count[1]__0 [11]),
        .O(valid_d_i_9_n_1));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[0]_i_2 
       (.I0(w_cnt_reg[0]),
        .I1(w_cnt1),
        .O(\w_cnt[0]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[0]_i_3 
       (.I0(w_cnt_reg[3]),
        .I1(w_cnt1),
        .O(\w_cnt[0]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[0]_i_4 
       (.I0(w_cnt_reg[2]),
        .I1(w_cnt1),
        .O(\w_cnt[0]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[0]_i_5 
       (.I0(w_cnt_reg[1]),
        .I1(w_cnt1),
        .O(\w_cnt[0]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h1)) 
    \w_cnt[0]_i_6 
       (.I0(w_cnt_reg[0]),
        .I1(w_cnt1),
        .O(\w_cnt[0]_i_6_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[4]_i_2 
       (.I0(w_cnt_reg[7]),
        .I1(w_cnt1),
        .O(\w_cnt[4]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[4]_i_3 
       (.I0(w_cnt_reg[6]),
        .I1(w_cnt1),
        .O(\w_cnt[4]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[4]_i_4 
       (.I0(w_cnt_reg[5]),
        .I1(w_cnt1),
        .O(\w_cnt[4]_i_4_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[4]_i_5 
       (.I0(w_cnt_reg[4]),
        .I1(w_cnt1),
        .O(\w_cnt[4]_i_5_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[8]_i_2 
       (.I0(w_cnt_reg[11]),
        .I1(w_cnt1),
        .O(\w_cnt[8]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[8]_i_3 
       (.I0(w_cnt_reg[10]),
        .I1(w_cnt1),
        .O(\w_cnt[8]_i_3_n_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \w_cnt[8]_i_4 
       (.I0(w_cnt_reg[9]),
        .I1(w_cnt1),
        .O(\w_cnt[8]_i_4_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[0] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[0]_i_1_n_8 ),
        .Q(w_cnt_reg[0]));
  CARRY4 \w_cnt_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\w_cnt_reg[0]_i_1_n_1 ,\w_cnt_reg[0]_i_1_n_2 ,\w_cnt_reg[0]_i_1_n_3 ,\w_cnt_reg[0]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\w_cnt[0]_i_2_n_1 }),
        .O({\w_cnt_reg[0]_i_1_n_5 ,\w_cnt_reg[0]_i_1_n_6 ,\w_cnt_reg[0]_i_1_n_7 ,\w_cnt_reg[0]_i_1_n_8 }),
        .S({\w_cnt[0]_i_3_n_1 ,\w_cnt[0]_i_4_n_1 ,\w_cnt[0]_i_5_n_1 ,\w_cnt[0]_i_6_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[10] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[8]_i_1_n_6 ),
        .Q(w_cnt_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[11] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[8]_i_1_n_5 ),
        .Q(w_cnt_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[1] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[0]_i_1_n_7 ),
        .Q(w_cnt_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[2] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[0]_i_1_n_6 ),
        .Q(w_cnt_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[3] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[0]_i_1_n_5 ),
        .Q(w_cnt_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[4] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[4]_i_1_n_8 ),
        .Q(w_cnt_reg[4]));
  CARRY4 \w_cnt_reg[4]_i_1 
       (.CI(\w_cnt_reg[0]_i_1_n_1 ),
        .CO({\w_cnt_reg[4]_i_1_n_1 ,\w_cnt_reg[4]_i_1_n_2 ,\w_cnt_reg[4]_i_1_n_3 ,\w_cnt_reg[4]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\w_cnt_reg[4]_i_1_n_5 ,\w_cnt_reg[4]_i_1_n_6 ,\w_cnt_reg[4]_i_1_n_7 ,\w_cnt_reg[4]_i_1_n_8 }),
        .S({\w_cnt[4]_i_2_n_1 ,\w_cnt[4]_i_3_n_1 ,\w_cnt[4]_i_4_n_1 ,\w_cnt[4]_i_5_n_1 }));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[5] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[4]_i_1_n_7 ),
        .Q(w_cnt_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[6] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[4]_i_1_n_6 ),
        .Q(w_cnt_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[7] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[4]_i_1_n_5 ),
        .Q(w_cnt_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[8] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[8]_i_1_n_8 ),
        .Q(w_cnt_reg[8]));
  CARRY4 \w_cnt_reg[8]_i_1 
       (.CI(\w_cnt_reg[4]_i_1_n_1 ),
        .CO({\NLW_w_cnt_reg[8]_i_1_CO_UNCONNECTED [3],\w_cnt_reg[8]_i_1_n_2 ,\w_cnt_reg[8]_i_1_n_3 ,\w_cnt_reg[8]_i_1_n_4 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\w_cnt_reg[8]_i_1_n_5 ,\w_cnt_reg[8]_i_1_n_6 ,\w_cnt_reg[8]_i_1_n_7 ,\w_cnt_reg[8]_i_1_n_8 }),
        .S({\w_cnt[8]_i_2_n_1 ,\w_cnt[8]_i_3_n_1 ,\w_cnt[8]_i_4_n_1 ,w_cnt_reg[8]}));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[9] 
       (.C(CLK),
        .CE(Q),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(\w_cnt_reg[8]_i_1_n_7 ),
        .Q(w_cnt_reg[9]));
  LUT3 #(
    .INIT(8'h28)) 
    \wr_cnt[1]_i_1 
       (.I0(Q),
        .I1(\wr_cnt_reg[0]_0 ),
        .I2(wr_cnt_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \wr_cnt[2]_i_1 
       (.I0(Q),
        .I1(wr_cnt_reg[1]),
        .I2(\wr_cnt_reg[0]_0 ),
        .I3(wr_cnt_reg[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \wr_cnt[3]_i_2 
       (.I0(Q),
        .I1(\wr_cnt_reg[0]_0 ),
        .I2(wr_cnt_reg[1]),
        .I3(wr_cnt_reg[2]),
        .I4(wr_cnt_reg[3]),
        .O(p_0_in[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_cnt_reg[0] 
       (.C(CLK),
        .CE(E),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(D),
        .Q(\wr_cnt_reg[0]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \wr_cnt_reg[1] 
       (.C(CLK),
        .CE(E),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(p_0_in[1]),
        .Q(wr_cnt_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_cnt_reg[2] 
       (.C(CLK),
        .CE(E),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(p_0_in[2]),
        .Q(wr_cnt_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_cnt_reg[3] 
       (.C(CLK),
        .CE(E),
        .CLR(\loop_cnt_reg[0]_0 ),
        .D(p_0_in[3]),
        .Q(wr_cnt_reg[3]));
endmodule

module Bicubic
   (win_tready,
    E,
    \dv_reg[4]_0 ,
    Q,
    D,
    n_0_721_BUFG_inst_n_1,
    din,
    CLK,
    win_tready_reg_0,
    win_tvalid,
    \h_cnt[9]_i_5_0 ,
    rst_n_i_IBUF,
    srcBmp_axis_tvalid_IBUF,
    state,
    \wr_cnt_reg[3] ,
    \wr_cnt_reg[0] ,
    win_tdata,
    u0);
  output win_tready;
  output [0:0]E;
  output [0:0]\dv_reg[4]_0 ;
  output [0:0]Q;
  output [0:0]D;
  output n_0_721_BUFG_inst_n_1;
  output [23:0]din;
  input CLK;
  input win_tready_reg_0;
  input win_tvalid;
  input \h_cnt[9]_i_5_0 ;
  input rst_n_i_IBUF;
  input srcBmp_axis_tvalid_IBUF;
  input state;
  input [0:0]\wr_cnt_reg[3] ;
  input [0:0]\wr_cnt_reg[0] ;
  input [383:0]win_tdata;
  input [0:0]u0;

  wire Bic_CAL_ch0_n_1;
  wire Bic_CAL_ch0_n_2;
  wire Bic_CAL_ch0_n_3;
  wire Bic_CAL_ch0_n_4;
  wire Bic_CAL_ch1_n_1;
  wire Bic_CAL_ch1_n_10;
  wire Bic_CAL_ch1_n_11;
  wire Bic_CAL_ch1_n_12;
  wire Bic_CAL_ch1_n_13;
  wire Bic_CAL_ch1_n_14;
  wire Bic_CAL_ch1_n_15;
  wire Bic_CAL_ch1_n_16;
  wire Bic_CAL_ch1_n_17;
  wire Bic_CAL_ch1_n_18;
  wire Bic_CAL_ch1_n_19;
  wire Bic_CAL_ch1_n_2;
  wire Bic_CAL_ch1_n_20;
  wire Bic_CAL_ch1_n_21;
  wire Bic_CAL_ch1_n_22;
  wire Bic_CAL_ch1_n_23;
  wire Bic_CAL_ch1_n_24;
  wire Bic_CAL_ch1_n_25;
  wire Bic_CAL_ch1_n_26;
  wire Bic_CAL_ch1_n_27;
  wire Bic_CAL_ch1_n_3;
  wire Bic_CAL_ch1_n_5;
  wire Bic_CAL_ch1_n_6;
  wire Bic_CAL_ch1_n_7;
  wire Bic_CAL_ch1_n_8;
  wire Bic_CAL_ch1_n_9;
  wire Bic_CAL_ch2_n_1;
  wire Bic_CAL_ch2_n_10;
  wire Bic_CAL_ch2_n_100;
  wire Bic_CAL_ch2_n_101;
  wire Bic_CAL_ch2_n_102;
  wire Bic_CAL_ch2_n_103;
  wire Bic_CAL_ch2_n_104;
  wire Bic_CAL_ch2_n_105;
  wire Bic_CAL_ch2_n_106;
  wire Bic_CAL_ch2_n_107;
  wire Bic_CAL_ch2_n_108;
  wire Bic_CAL_ch2_n_109;
  wire Bic_CAL_ch2_n_11;
  wire Bic_CAL_ch2_n_110;
  wire Bic_CAL_ch2_n_111;
  wire Bic_CAL_ch2_n_112;
  wire Bic_CAL_ch2_n_113;
  wire Bic_CAL_ch2_n_114;
  wire Bic_CAL_ch2_n_115;
  wire Bic_CAL_ch2_n_116;
  wire Bic_CAL_ch2_n_117;
  wire Bic_CAL_ch2_n_118;
  wire Bic_CAL_ch2_n_119;
  wire Bic_CAL_ch2_n_120;
  wire Bic_CAL_ch2_n_121;
  wire Bic_CAL_ch2_n_122;
  wire Bic_CAL_ch2_n_123;
  wire Bic_CAL_ch2_n_124;
  wire Bic_CAL_ch2_n_125;
  wire Bic_CAL_ch2_n_126;
  wire Bic_CAL_ch2_n_19;
  wire Bic_CAL_ch2_n_2;
  wire Bic_CAL_ch2_n_20;
  wire Bic_CAL_ch2_n_21;
  wire Bic_CAL_ch2_n_22;
  wire Bic_CAL_ch2_n_23;
  wire Bic_CAL_ch2_n_24;
  wire Bic_CAL_ch2_n_25;
  wire Bic_CAL_ch2_n_26;
  wire Bic_CAL_ch2_n_27;
  wire Bic_CAL_ch2_n_28;
  wire Bic_CAL_ch2_n_3;
  wire Bic_CAL_ch2_n_30;
  wire Bic_CAL_ch2_n_31;
  wire Bic_CAL_ch2_n_32;
  wire Bic_CAL_ch2_n_33;
  wire Bic_CAL_ch2_n_34;
  wire Bic_CAL_ch2_n_35;
  wire Bic_CAL_ch2_n_36;
  wire Bic_CAL_ch2_n_37;
  wire Bic_CAL_ch2_n_38;
  wire Bic_CAL_ch2_n_39;
  wire Bic_CAL_ch2_n_4;
  wire Bic_CAL_ch2_n_40;
  wire Bic_CAL_ch2_n_41;
  wire Bic_CAL_ch2_n_42;
  wire Bic_CAL_ch2_n_43;
  wire Bic_CAL_ch2_n_44;
  wire Bic_CAL_ch2_n_45;
  wire Bic_CAL_ch2_n_46;
  wire Bic_CAL_ch2_n_47;
  wire Bic_CAL_ch2_n_48;
  wire Bic_CAL_ch2_n_49;
  wire Bic_CAL_ch2_n_5;
  wire Bic_CAL_ch2_n_50;
  wire Bic_CAL_ch2_n_51;
  wire Bic_CAL_ch2_n_52;
  wire Bic_CAL_ch2_n_53;
  wire Bic_CAL_ch2_n_54;
  wire Bic_CAL_ch2_n_55;
  wire Bic_CAL_ch2_n_56;
  wire Bic_CAL_ch2_n_57;
  wire Bic_CAL_ch2_n_58;
  wire Bic_CAL_ch2_n_59;
  wire Bic_CAL_ch2_n_6;
  wire Bic_CAL_ch2_n_60;
  wire Bic_CAL_ch2_n_61;
  wire Bic_CAL_ch2_n_62;
  wire Bic_CAL_ch2_n_63;
  wire Bic_CAL_ch2_n_64;
  wire Bic_CAL_ch2_n_65;
  wire Bic_CAL_ch2_n_66;
  wire Bic_CAL_ch2_n_67;
  wire Bic_CAL_ch2_n_68;
  wire Bic_CAL_ch2_n_69;
  wire Bic_CAL_ch2_n_7;
  wire Bic_CAL_ch2_n_70;
  wire Bic_CAL_ch2_n_71;
  wire Bic_CAL_ch2_n_72;
  wire Bic_CAL_ch2_n_73;
  wire Bic_CAL_ch2_n_74;
  wire Bic_CAL_ch2_n_75;
  wire Bic_CAL_ch2_n_76;
  wire Bic_CAL_ch2_n_77;
  wire Bic_CAL_ch2_n_78;
  wire Bic_CAL_ch2_n_79;
  wire Bic_CAL_ch2_n_8;
  wire Bic_CAL_ch2_n_80;
  wire Bic_CAL_ch2_n_81;
  wire Bic_CAL_ch2_n_82;
  wire Bic_CAL_ch2_n_83;
  wire Bic_CAL_ch2_n_84;
  wire Bic_CAL_ch2_n_85;
  wire Bic_CAL_ch2_n_86;
  wire Bic_CAL_ch2_n_87;
  wire Bic_CAL_ch2_n_88;
  wire Bic_CAL_ch2_n_89;
  wire Bic_CAL_ch2_n_9;
  wire Bic_CAL_ch2_n_90;
  wire Bic_CAL_ch2_n_91;
  wire Bic_CAL_ch2_n_92;
  wire Bic_CAL_ch2_n_93;
  wire Bic_CAL_ch2_n_94;
  wire Bic_CAL_ch2_n_95;
  wire Bic_CAL_ch2_n_96;
  wire Bic_CAL_ch2_n_97;
  wire Bic_CAL_ch2_n_98;
  wire Bic_CAL_ch2_n_99;
  wire CLK;
  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_state[0]_i_2_n_1 ;
  wire \FSM_sequential_state[0]_i_3_n_1 ;
  wire \FSM_sequential_state[0]_i_4_n_1 ;
  wire \FSM_sequential_state[1]_i_2_n_1 ;
  wire \FSM_sequential_state[1]_i_3_n_1 ;
  wire \FSM_sequential_state[1]_i_4_n_1 ;
  wire \FSM_sequential_state[1]_i_5_n_1 ;
  wire [0:0]Q;
  wire [127:0]ch0_win_data;
  wire [127:0]ch1_win_data;
  wire [127:0]ch2_win_data;
  wire ch2_win_data__0;
  wire [12:1]coef;
  wire [23:0]din;
  wire [3:0]dv;
  wire [0:0]\dv_reg[4]_0 ;
  wire flag_i_1_n_1;
  wire flag_i_2_n_1;
  wire flag_i_3_n_1;
  wire flag_reg_n_1;
  wire [9:0]h_cnt;
  wire \h_cnt[6]_i_2_n_1 ;
  wire \h_cnt[9]_i_1_n_1 ;
  wire \h_cnt[9]_i_3_n_1 ;
  wire \h_cnt[9]_i_4_n_1 ;
  wire \h_cnt[9]_i_5_0 ;
  wire \h_cnt[9]_i_5_n_1 ;
  wire \h_cnt[9]_i_6_n_1 ;
  wire \h_cnt[9]_i_7_n_1 ;
  wire \h_cnt[9]_i_9_n_1 ;
  wire \h_cnt_reg_n_1_[0] ;
  wire \h_cnt_reg_n_1_[1] ;
  wire \h_cnt_reg_n_1_[2] ;
  wire \h_cnt_reg_n_1_[3] ;
  wire \h_cnt_reg_n_1_[4] ;
  wire \h_cnt_reg_n_1_[5] ;
  wire \h_cnt_reg_n_1_[6] ;
  wire \h_cnt_reg_n_1_[7] ;
  wire \h_cnt_reg_n_1_[8] ;
  wire \h_cnt_reg_n_1_[9] ;
  wire n_0_721_BUFG_inst_n_1;
  wire [1:0]next_state__0;
  wire [0:0]p_4_out;
  wire rst_n_i_IBUF;
  wire srcBmp_axis_tvalid_IBUF;
  wire state;
  wire [1:0]state_0;
  wire [0:0]u0;
  wire [9:0]w_cnt;
  wire \w_cnt[4]_i_1_n_1 ;
  wire \w_cnt[5]_i_2_n_1 ;
  wire \w_cnt[9]_i_1_n_1 ;
  wire \w_cnt[9]_i_3_n_1 ;
  wire \w_cnt_reg_n_1_[0] ;
  wire \w_cnt_reg_n_1_[1] ;
  wire \w_cnt_reg_n_1_[2] ;
  wire \w_cnt_reg_n_1_[3] ;
  wire \w_cnt_reg_n_1_[4] ;
  wire \w_cnt_reg_n_1_[5] ;
  wire \w_cnt_reg_n_1_[6] ;
  wire \w_cnt_reg_n_1_[7] ;
  wire \w_cnt_reg_n_1_[8] ;
  wire \w_cnt_reg_n_1_[9] ;
  wire [4:1]win_cnt;
  wire \win_cnt[0]_i_1_n_1 ;
  wire \win_cnt[3]_i_2_n_1 ;
  wire \win_cnt[4]_i_2_n_1 ;
  wire \win_cnt[4]_i_3_n_1 ;
  wire \win_cnt_reg_n_1_[0] ;
  wire \win_cnt_reg_n_1_[1] ;
  wire \win_cnt_reg_n_1_[2] ;
  wire \win_cnt_reg_n_1_[3] ;
  wire \win_cnt_reg_n_1_[4] ;
  wire [383:0]win_tdata;
  wire win_tready;
  wire win_tready_i_1_n_1;
  wire win_tready_reg_0;
  wire win_tvalid;
  wire [0:0]\wr_cnt_reg[0] ;
  wire [0:0]\wr_cnt_reg[3] ;

  Bic_CAL__xdcDup__1 Bic_CAL_ch0
       (.CLK(CLK),
        .Q(ch0_win_data),
        .add_1_0_i_27_0({coef[12],coef[10],coef[8],coef[5:1],Bic_CAL_ch2_n_1}),
        .ch2_win_data__0(ch2_win_data__0),
        .coef0({Bic_CAL_ch0_n_1,Bic_CAL_ch0_n_2,Bic_CAL_ch0_n_3,Bic_CAL_ch0_n_4}),
        .coef1({Bic_CAL_ch2_n_19,Bic_CAL_ch1_n_13,Bic_CAL_ch2_n_20,Bic_CAL_ch2_n_21,Bic_CAL_ch2_n_22,Bic_CAL_ch2_n_23,Bic_CAL_ch1_n_14,Bic_CAL_ch1_n_15,Bic_CAL_ch2_n_24,Bic_CAL_ch2_n_25,Bic_CAL_ch2_n_26,Bic_CAL_ch2_n_11,Bic_CAL_ch2_n_27,Bic_CAL_ch2_n_28}),
        .coef10({Bic_CAL_ch2_n_31,Bic_CAL_ch2_n_32,Bic_CAL_ch2_n_33,Bic_CAL_ch2_n_34,Bic_CAL_ch2_n_35,Bic_CAL_ch2_n_36,Bic_CAL_ch2_n_37,Bic_CAL_ch2_n_38,Bic_CAL_ch2_n_39,Bic_CAL_ch2_n_40,Bic_CAL_ch2_n_41,Bic_CAL_ch2_n_42,Bic_CAL_ch2_n_43}),
        .coef11({Bic_CAL_ch2_n_71,Bic_CAL_ch2_n_72,Bic_CAL_ch2_n_73,Bic_CAL_ch2_n_74,Bic_CAL_ch2_n_75,Bic_CAL_ch1_n_11,Bic_CAL_ch1_n_12,Bic_CAL_ch2_n_76,Bic_CAL_ch2_n_77,Bic_CAL_ch2_n_78,Bic_CAL_ch2_n_79}),
        .coef12({Bic_CAL_ch2_n_51,Bic_CAL_ch2_n_52,Bic_CAL_ch2_n_53,Bic_CAL_ch2_n_54,Bic_CAL_ch2_n_55,Bic_CAL_ch1_n_23}),
        .coef13({Bic_CAL_ch1_n_24,Bic_CAL_ch2_n_80,Bic_CAL_ch1_n_25,Bic_CAL_ch2_n_81,Bic_CAL_ch2_n_82,Bic_CAL_ch2_n_83,Bic_CAL_ch1_n_26}),
        .coef14({Bic_CAL_ch2_n_92,Bic_CAL_ch2_n_93,Bic_CAL_ch2_n_94,Bic_CAL_ch2_n_95,Bic_CAL_ch2_n_96,Bic_CAL_ch2_n_97,Bic_CAL_ch2_n_98}),
        .coef15({Bic_CAL_ch2_n_86,Bic_CAL_ch2_n_87,Bic_CAL_ch2_n_88,Bic_CAL_ch2_n_89,Bic_CAL_ch2_n_90,Bic_CAL_ch2_n_91}),
        .coef2({Bic_CAL_ch2_n_2,Bic_CAL_ch2_n_3,Bic_CAL_ch2_n_4,Bic_CAL_ch1_n_1,Bic_CAL_ch2_n_5,Bic_CAL_ch1_n_2,Bic_CAL_ch2_n_6,Bic_CAL_ch2_n_7,Bic_CAL_ch2_n_8,Bic_CAL_ch1_n_3,Bic_CAL_ch2_n_9,Bic_CAL_ch2_n_10}),
        .coef3({Bic_CAL_ch1_n_27,Bic_CAL_ch2_n_44,Bic_CAL_ch2_n_45,Bic_CAL_ch2_n_46,Bic_CAL_ch2_n_47,Bic_CAL_ch2_n_48,Bic_CAL_ch2_n_49,Bic_CAL_ch2_n_50}),
        .coef4({Bic_CAL_ch2_n_59,Bic_CAL_ch2_n_60,Bic_CAL_ch2_n_61,Bic_CAL_ch2_n_62,Bic_CAL_ch2_n_63,Bic_CAL_ch2_n_64,Bic_CAL_ch2_n_65}),
        .coef5({Bic_CAL_ch1_n_5,Bic_CAL_ch2_n_66,Bic_CAL_ch1_n_6,Bic_CAL_ch1_n_7,Bic_CAL_ch2_n_67,Bic_CAL_ch2_n_68,Bic_CAL_ch1_n_8,Bic_CAL_ch2_n_69,Bic_CAL_ch2_n_70,Bic_CAL_ch1_n_9}),
        .coef6({Bic_CAL_ch2_n_118,Bic_CAL_ch2_n_119,Bic_CAL_ch2_n_120,Bic_CAL_ch2_n_121,Bic_CAL_ch2_n_122,Bic_CAL_ch2_n_123,Bic_CAL_ch1_n_10,Bic_CAL_ch2_n_124,Bic_CAL_ch2_n_125,Bic_CAL_ch2_n_126}),
        .coef7({Bic_CAL_ch2_n_111,Bic_CAL_ch2_n_112,Bic_CAL_ch2_n_113,Bic_CAL_ch2_n_114,Bic_CAL_ch2_n_115,Bic_CAL_ch2_n_116,Bic_CAL_ch2_n_117}),
        .coef8({Bic_CAL_ch1_n_16,Bic_CAL_ch2_n_106,Bic_CAL_ch2_n_107,Bic_CAL_ch2_n_108,Bic_CAL_ch2_n_109,Bic_CAL_ch2_n_110,Bic_CAL_ch1_n_17,Bic_CAL_ch2_n_84,Bic_CAL_ch2_n_85,Bic_CAL_ch2_n_56,Bic_CAL_ch1_n_18,Bic_CAL_ch1_n_19}),
        .coef9({Bic_CAL_ch1_n_20,Bic_CAL_ch2_n_99,Bic_CAL_ch1_n_21,Bic_CAL_ch2_n_100,Bic_CAL_ch2_n_101,Bic_CAL_ch2_n_102,Bic_CAL_ch2_n_103,Bic_CAL_ch2_n_104,Bic_CAL_ch1_n_22,Bic_CAL_ch2_n_105,Bic_CAL_ch2_n_57,Bic_CAL_ch2_n_58}),
        .din(din[7:0]),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .u5_0(\win_cnt_reg_n_1_[1] ),
        .u5_1(\win_cnt_reg_n_1_[3] ),
        .u5_2(\win_cnt_reg_n_1_[4] ),
        .u5_3(\win_cnt_reg_n_1_[0] ),
        .u5_4(\win_cnt_reg_n_1_[2] ));
  Bic_CAL__xdcDup__2 Bic_CAL_ch1
       (.CLK(CLK),
        .Q(ch1_win_data),
        .add_1_0_i_27__0_0({coef[12],coef[10],coef[8],coef[5:2],Bic_CAL_ch2_n_1}),
        .add_1_0_i_54__0_0({Bic_CAL_ch2_n_19,Bic_CAL_ch2_n_20,Bic_CAL_ch2_n_21,Bic_CAL_ch2_n_22,Bic_CAL_ch2_n_23,Bic_CAL_ch2_n_24,Bic_CAL_ch2_n_25,Bic_CAL_ch2_n_26,Bic_CAL_ch2_n_11,Bic_CAL_ch2_n_27,Bic_CAL_ch2_n_28}),
        .add_1_1_i_27__0_0({Bic_CAL_ch2_n_2,Bic_CAL_ch2_n_3,Bic_CAL_ch2_n_4,Bic_CAL_ch2_n_5,Bic_CAL_ch2_n_6,Bic_CAL_ch2_n_7,Bic_CAL_ch2_n_8,Bic_CAL_ch2_n_9,Bic_CAL_ch2_n_10}),
        .add_1_1_i_54__0_0({Bic_CAL_ch2_n_44,Bic_CAL_ch2_n_45,Bic_CAL_ch2_n_46,Bic_CAL_ch2_n_47,Bic_CAL_ch2_n_48,Bic_CAL_ch2_n_49,Bic_CAL_ch2_n_50}),
        .add_1_2_i_54__0_0({Bic_CAL_ch2_n_66,Bic_CAL_ch2_n_67,Bic_CAL_ch2_n_68,Bic_CAL_ch2_n_69,Bic_CAL_ch2_n_70}),
        .add_1_3_i_27__0_0({Bic_CAL_ch2_n_118,Bic_CAL_ch2_n_119,Bic_CAL_ch2_n_120,Bic_CAL_ch2_n_121,Bic_CAL_ch2_n_122,Bic_CAL_ch2_n_123,Bic_CAL_ch2_n_124,Bic_CAL_ch2_n_125,Bic_CAL_ch2_n_126}),
        .add_1_4_i_27__0_0({Bic_CAL_ch2_n_106,Bic_CAL_ch2_n_107,Bic_CAL_ch2_n_108,Bic_CAL_ch2_n_109,Bic_CAL_ch2_n_110,Bic_CAL_ch2_n_84,Bic_CAL_ch2_n_85,Bic_CAL_ch2_n_56}),
        .add_1_4_i_54__0_0({Bic_CAL_ch2_n_99,Bic_CAL_ch2_n_100,Bic_CAL_ch2_n_101,Bic_CAL_ch2_n_102,Bic_CAL_ch2_n_103,Bic_CAL_ch2_n_104,Bic_CAL_ch2_n_105,Bic_CAL_ch2_n_57,Bic_CAL_ch2_n_58}),
        .add_1_5_i_54__0_0({Bic_CAL_ch2_n_71,Bic_CAL_ch2_n_72,Bic_CAL_ch2_n_73,Bic_CAL_ch2_n_74,Bic_CAL_ch2_n_75,Bic_CAL_ch2_n_76,Bic_CAL_ch2_n_77,Bic_CAL_ch2_n_78,Bic_CAL_ch2_n_79}),
        .add_1_6_i_27__0_0({Bic_CAL_ch2_n_51,Bic_CAL_ch2_n_52,Bic_CAL_ch2_n_53,Bic_CAL_ch2_n_54,Bic_CAL_ch2_n_55}),
        .add_1_6_i_54__0_0({Bic_CAL_ch2_n_80,Bic_CAL_ch2_n_81,Bic_CAL_ch2_n_82,Bic_CAL_ch2_n_83}),
        .ch2_win_data__0(ch2_win_data__0),
        .coef0({Bic_CAL_ch0_n_1,Bic_CAL_ch0_n_2,Bic_CAL_ch0_n_3,Bic_CAL_ch0_n_4}),
        .coef1({Bic_CAL_ch1_n_13,Bic_CAL_ch1_n_14,Bic_CAL_ch1_n_15}),
        .coef10({Bic_CAL_ch2_n_31,Bic_CAL_ch2_n_32,Bic_CAL_ch2_n_33,Bic_CAL_ch2_n_34,Bic_CAL_ch2_n_35,Bic_CAL_ch2_n_36,Bic_CAL_ch2_n_37,Bic_CAL_ch2_n_38,Bic_CAL_ch2_n_39,Bic_CAL_ch2_n_40,Bic_CAL_ch2_n_41,Bic_CAL_ch2_n_42,Bic_CAL_ch2_n_43}),
        .coef11({Bic_CAL_ch1_n_11,Bic_CAL_ch1_n_12}),
        .coef12(Bic_CAL_ch1_n_23),
        .coef13({Bic_CAL_ch1_n_24,Bic_CAL_ch1_n_25,Bic_CAL_ch1_n_26}),
        .coef14({Bic_CAL_ch2_n_92,Bic_CAL_ch2_n_93,Bic_CAL_ch2_n_94,Bic_CAL_ch2_n_95,Bic_CAL_ch2_n_96,Bic_CAL_ch2_n_97,Bic_CAL_ch2_n_98}),
        .coef15({Bic_CAL_ch2_n_86,Bic_CAL_ch2_n_87,Bic_CAL_ch2_n_88,Bic_CAL_ch2_n_89,Bic_CAL_ch2_n_90,Bic_CAL_ch2_n_91}),
        .coef2({Bic_CAL_ch1_n_1,Bic_CAL_ch1_n_2,Bic_CAL_ch1_n_3,coef[1]}),
        .coef3(Bic_CAL_ch1_n_27),
        .coef4({Bic_CAL_ch2_n_59,Bic_CAL_ch2_n_60,Bic_CAL_ch2_n_61,Bic_CAL_ch2_n_62,Bic_CAL_ch2_n_63,Bic_CAL_ch2_n_64,Bic_CAL_ch2_n_65}),
        .coef5({Bic_CAL_ch1_n_5,Bic_CAL_ch1_n_6,Bic_CAL_ch1_n_7,Bic_CAL_ch1_n_8,Bic_CAL_ch1_n_9}),
        .coef6(Bic_CAL_ch1_n_10),
        .coef7({Bic_CAL_ch2_n_111,Bic_CAL_ch2_n_112,Bic_CAL_ch2_n_113,Bic_CAL_ch2_n_114,Bic_CAL_ch2_n_115,Bic_CAL_ch2_n_116,Bic_CAL_ch2_n_117}),
        .coef8({Bic_CAL_ch1_n_16,Bic_CAL_ch1_n_17,Bic_CAL_ch1_n_18,Bic_CAL_ch1_n_19}),
        .coef9({Bic_CAL_ch1_n_20,Bic_CAL_ch1_n_21,Bic_CAL_ch1_n_22}),
        .din(din[15:8]),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .u11_i_7_0(\win_cnt_reg_n_1_[0] ),
        .u11_i_7_1(\win_cnt_reg_n_1_[1] ),
        .u11_i_7_2(\win_cnt_reg_n_1_[2] ),
        .u11_i_7_3(\win_cnt_reg_n_1_[4] ),
        .u11_i_7_4(\win_cnt_reg_n_1_[3] ));
  Bic_CAL Bic_CAL_ch2
       (.B({Bic_CAL_ch2_n_1,Bic_CAL_ch2_n_2,Bic_CAL_ch2_n_3,Bic_CAL_ch2_n_4,Bic_CAL_ch2_n_5,Bic_CAL_ch2_n_6,Bic_CAL_ch2_n_7,Bic_CAL_ch2_n_8,Bic_CAL_ch2_n_9,Bic_CAL_ch2_n_10,Bic_CAL_ch2_n_11,coef[2]}),
        .CLK(CLK),
        .\FSM_sequential_state_reg[1] (Bic_CAL_ch2_n_30),
        .Q(state_0),
        .add_1_0_i_27__1_0(ch2_win_data),
        .add_1_1_i_54__1_0(Bic_CAL_ch1_n_27),
        .add_1_3_i_27__1_0(Bic_CAL_ch1_n_10),
        .add_1_4_i_27__1_0({Bic_CAL_ch1_n_16,Bic_CAL_ch1_n_17,Bic_CAL_ch1_n_18,Bic_CAL_ch1_n_19}),
        .add_1_4_i_54__1_0({Bic_CAL_ch1_n_20,Bic_CAL_ch1_n_21,Bic_CAL_ch1_n_22}),
        .ch2_win_data__0(ch2_win_data__0),
        .coef0({Bic_CAL_ch0_n_1,Bic_CAL_ch0_n_2,Bic_CAL_ch0_n_3,Bic_CAL_ch0_n_4,coef[1]}),
        .coef1({Bic_CAL_ch1_n_13,Bic_CAL_ch1_n_14,Bic_CAL_ch1_n_15}),
        .coef10({Bic_CAL_ch2_n_31,Bic_CAL_ch2_n_32,Bic_CAL_ch2_n_33,Bic_CAL_ch2_n_34,Bic_CAL_ch2_n_35,Bic_CAL_ch2_n_36,Bic_CAL_ch2_n_37,Bic_CAL_ch2_n_38,Bic_CAL_ch2_n_39,Bic_CAL_ch2_n_40,Bic_CAL_ch2_n_41,Bic_CAL_ch2_n_42,Bic_CAL_ch2_n_43}),
        .coef11({Bic_CAL_ch1_n_11,Bic_CAL_ch1_n_12}),
        .coef12(Bic_CAL_ch1_n_23),
        .coef13({Bic_CAL_ch1_n_24,Bic_CAL_ch1_n_25,Bic_CAL_ch1_n_26}),
        .coef14({Bic_CAL_ch2_n_92,Bic_CAL_ch2_n_93,Bic_CAL_ch2_n_94,Bic_CAL_ch2_n_95,Bic_CAL_ch2_n_96,Bic_CAL_ch2_n_97,Bic_CAL_ch2_n_98}),
        .coef15({Bic_CAL_ch2_n_86,Bic_CAL_ch2_n_87,Bic_CAL_ch2_n_88,Bic_CAL_ch2_n_89,Bic_CAL_ch2_n_90,Bic_CAL_ch2_n_91}),
        .coef2({Bic_CAL_ch1_n_1,Bic_CAL_ch1_n_2,Bic_CAL_ch1_n_3}),
        .coef3({Bic_CAL_ch2_n_44,Bic_CAL_ch2_n_45,Bic_CAL_ch2_n_46,Bic_CAL_ch2_n_47,Bic_CAL_ch2_n_48,Bic_CAL_ch2_n_49,Bic_CAL_ch2_n_50}),
        .coef4({Bic_CAL_ch2_n_59,Bic_CAL_ch2_n_60,Bic_CAL_ch2_n_61,Bic_CAL_ch2_n_62,Bic_CAL_ch2_n_63,Bic_CAL_ch2_n_64,Bic_CAL_ch2_n_65}),
        .coef5({Bic_CAL_ch1_n_5,Bic_CAL_ch1_n_6,Bic_CAL_ch1_n_7,Bic_CAL_ch1_n_8,Bic_CAL_ch1_n_9}),
        .coef6({Bic_CAL_ch2_n_118,Bic_CAL_ch2_n_119,Bic_CAL_ch2_n_120,Bic_CAL_ch2_n_121,Bic_CAL_ch2_n_122,Bic_CAL_ch2_n_123,Bic_CAL_ch2_n_124,Bic_CAL_ch2_n_125,Bic_CAL_ch2_n_126}),
        .coef7({Bic_CAL_ch2_n_111,Bic_CAL_ch2_n_112,Bic_CAL_ch2_n_113,Bic_CAL_ch2_n_114,Bic_CAL_ch2_n_115,Bic_CAL_ch2_n_116,Bic_CAL_ch2_n_117}),
        .coef8({Bic_CAL_ch2_n_106,Bic_CAL_ch2_n_107,Bic_CAL_ch2_n_108,Bic_CAL_ch2_n_109,Bic_CAL_ch2_n_110}),
        .coef9({Bic_CAL_ch2_n_99,Bic_CAL_ch2_n_100,Bic_CAL_ch2_n_101,Bic_CAL_ch2_n_102,Bic_CAL_ch2_n_103,Bic_CAL_ch2_n_104,Bic_CAL_ch2_n_105}),
        .din(din[23:16]),
        .rst_n_i_IBUF(rst_n_i_IBUF),
        .u2_i_5_0(\win_cnt_reg_n_1_[1] ),
        .u7_i_5_0(\win_cnt_reg_n_1_[4] ),
        .u7_i_5_1(\win_cnt_reg_n_1_[3] ),
        .u7_i_5_2(\win_cnt_reg_n_1_[0] ),
        .u7_i_5_3(\win_cnt_reg_n_1_[2] ),
        .\win_cnt_reg[0] ({coef[12],coef[10],coef[8],coef[5:3]}),
        .\win_cnt_reg[0]_0 ({Bic_CAL_ch2_n_51,Bic_CAL_ch2_n_52,Bic_CAL_ch2_n_53,Bic_CAL_ch2_n_54,Bic_CAL_ch2_n_55,Bic_CAL_ch2_n_56,Bic_CAL_ch2_n_57,Bic_CAL_ch2_n_58}),
        .\win_cnt_reg[0]_1 ({Bic_CAL_ch2_n_80,Bic_CAL_ch2_n_81,Bic_CAL_ch2_n_82,Bic_CAL_ch2_n_83,Bic_CAL_ch2_n_84,Bic_CAL_ch2_n_85}),
        .\win_cnt_reg[2] ({Bic_CAL_ch2_n_19,Bic_CAL_ch2_n_20,Bic_CAL_ch2_n_21,Bic_CAL_ch2_n_22,Bic_CAL_ch2_n_23,Bic_CAL_ch2_n_24,Bic_CAL_ch2_n_25,Bic_CAL_ch2_n_26,Bic_CAL_ch2_n_27,Bic_CAL_ch2_n_28}),
        .\win_cnt_reg[2]_0 ({Bic_CAL_ch2_n_71,Bic_CAL_ch2_n_72,Bic_CAL_ch2_n_73,Bic_CAL_ch2_n_74,Bic_CAL_ch2_n_75,Bic_CAL_ch2_n_76,Bic_CAL_ch2_n_77,Bic_CAL_ch2_n_78,Bic_CAL_ch2_n_79}),
        .\win_cnt_reg[3] ({Bic_CAL_ch2_n_66,Bic_CAL_ch2_n_67,Bic_CAL_ch2_n_68,Bic_CAL_ch2_n_69,Bic_CAL_ch2_n_70}));
  (* SOFT_HLUTNM = "soft_lutpair1334" *) 
  LUT5 #(
    .INIT(32'h35F504C4)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(\FSM_sequential_state[0]_i_2_n_1 ),
        .I1(state_0[1]),
        .I2(state_0[0]),
        .I3(win_tvalid),
        .I4(\FSM_sequential_state[1]_i_2_n_1 ),
        .O(next_state__0[0]));
  LUT6 #(
    .INIT(64'h7F7F7FFF7F7F7F7F)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(state_0[1]),
        .I1(win_tvalid),
        .I2(win_tready),
        .I3(flag_i_2_n_1),
        .I4(\FSM_sequential_state[0]_i_3_n_1 ),
        .I5(\FSM_sequential_state[0]_i_4_n_1 ),
        .O(\FSM_sequential_state[0]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_state[0]_i_3 
       (.I0(\h_cnt_reg_n_1_[1] ),
        .I1(\h_cnt_reg_n_1_[0] ),
        .I2(\w_cnt_reg_n_1_[4] ),
        .I3(\w_cnt_reg_n_1_[7] ),
        .I4(\w_cnt_reg_n_1_[0] ),
        .I5(\w_cnt_reg_n_1_[1] ),
        .O(\FSM_sequential_state[0]_i_3_n_1 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \FSM_sequential_state[0]_i_4 
       (.I0(flag_i_3_n_1),
        .I1(\FSM_sequential_state[1]_i_4_n_1 ),
        .I2(\w_cnt_reg_n_1_[6] ),
        .I3(flag_reg_n_1),
        .I4(\w_cnt_reg_n_1_[8] ),
        .O(\FSM_sequential_state[0]_i_4_n_1 ));
  LUT6 #(
    .INIT(64'hFFFF555503330000)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(\FSM_sequential_state[1]_i_2_n_1 ),
        .I1(\FSM_sequential_state[1]_i_3_n_1 ),
        .I2(win_tvalid),
        .I3(win_tready),
        .I4(state_0[1]),
        .I5(state_0[0]),
        .O(next_state__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair1341" *) 
  LUT5 #(
    .INIT(32'hFFF7FFFF)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(\win_cnt_reg_n_1_[2] ),
        .I1(\win_cnt_reg_n_1_[1] ),
        .I2(\win_cnt_reg_n_1_[0] ),
        .I3(\win_cnt_reg_n_1_[4] ),
        .I4(\win_cnt_reg_n_1_[3] ),
        .O(\FSM_sequential_state[1]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \FSM_sequential_state[1]_i_3 
       (.I0(\w_cnt_reg_n_1_[8] ),
        .I1(flag_reg_n_1),
        .I2(\w_cnt_reg_n_1_[6] ),
        .I3(\FSM_sequential_state[1]_i_4_n_1 ),
        .I4(flag_i_3_n_1),
        .I5(\FSM_sequential_state[1]_i_5_n_1 ),
        .O(\FSM_sequential_state[1]_i_3_n_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_state[1]_i_4 
       (.I0(\w_cnt_reg_n_1_[9] ),
        .I1(\w_cnt_reg_n_1_[2] ),
        .I2(\w_cnt_reg_n_1_[5] ),
        .I3(\w_cnt_reg_n_1_[3] ),
        .O(\FSM_sequential_state[1]_i_4_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair1335" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_state[1]_i_5 
       (.I0(\h_cnt_reg_n_1_[5] ),
        .I1(\h_cnt_reg_n_1_[7] ),
        .I2(\h_cnt_reg_n_1_[6] ),
        .I3(\h_cnt_reg_n_1_[4] ),
        .I4(\FSM_sequential_state[0]_i_3_n_1 ),
        .O(\FSM_sequential_state[1]_i_5_n_1 ));
  (* FSM_ENCODED_STATES = "IDLE:11,DONE:00,DOING:01,WAIT:10" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(next_state__0[0]),
        .PRE(win_tready_reg_0),
        .Q(state_0[0]));
  (* FSM_ENCODED_STATES = "IDLE:11,DONE:00,DOING:01,WAIT:10" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(next_state__0[1]),
        .PRE(win_tready_reg_0),
        .Q(state_0[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[0] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[0]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[100] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[100]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[100]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[101] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[101]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[101]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[102] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[102]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[102]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[103] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[103]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[103]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[104] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[104]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[104]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[105] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[105]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[105]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[106] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[106]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[106]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[107] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[107]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[107]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[108] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[108]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[108]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[109] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[109]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[109]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[10] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[10]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[10]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[110] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[110]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[110]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[111] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[111]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[111]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[112] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[112]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[112]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[113] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[113]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[113]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[114] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[114]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[114]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[115] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[115]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[115]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[116] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[116]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[116]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[117] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[117]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[117]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[118] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[118]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[118]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[119] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[119]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[119]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[11] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[11]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[11]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[120] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[120]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[120]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[121] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[121]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[121]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[122] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[122]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[122]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[123] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[123]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[123]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[124] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[124]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[124]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[125] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[125]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[125]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[126] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[126]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[126]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[127] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[127]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[127]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[12] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[12]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[12]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[13] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[13]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[14] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[14]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[15] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[15]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[16] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[16]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[16]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[17] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[17]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[18] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[18]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[19] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[19]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[1] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[1]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[20] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[20]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[20]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[21] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[21]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[21]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[22] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[22]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[22]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[23] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[23]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[23]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[24] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[24]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[24]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[25] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[25]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[25]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[26] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[26]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[26]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[27] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[27]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[27]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[28] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[28]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[29] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[29]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[2] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[2]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[30] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[30]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[31] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[31]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[31]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[32] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[32]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[32]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[33] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[33]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[33]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[34] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[34]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[34]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[35] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[35]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[35]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[36] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[36]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[36]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[37] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[37]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[37]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[38] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[38]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[38]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[39] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[39]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[39]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[3] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[3]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[40] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[40]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[40]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[41] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[41]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[41]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[42] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[42]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[42]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[43] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[43]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[43]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[44] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[44]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[44]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[45] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[45]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[45]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[46] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[46]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[46]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[47] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[47]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[47]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[48] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[48]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[48]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[49] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[49]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[49]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[4] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[4]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[4]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[50] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[50]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[50]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[51] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[51]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[51]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[52] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[52]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[52]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[53] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[53]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[53]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[54] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[54]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[54]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[55] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[55]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[55]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[56] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[56]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[56]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[57] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[57]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[57]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[58] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[58]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[58]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[59] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[59]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[59]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[5] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[5]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[5]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[60] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[60]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[60]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[61] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[61]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[61]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[62] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[62]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[62]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[63] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[63]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[63]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[64] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[64]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[64]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[65] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[65]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[65]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[66] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[66]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[66]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[67] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[67]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[67]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[68] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[68]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[68]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[69] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[69]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[69]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[6] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[6]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[70] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[70]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[70]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[71] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[71]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[71]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[72] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[72]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[72]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[73] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[73]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[73]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[74] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[74]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[74]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[75] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[75]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[75]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[76] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[76]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[76]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[77] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[77]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[77]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[78] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[78]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[78]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[79] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[79]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[79]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[7] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[7]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[80] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[80]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[80]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[81] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[81]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[81]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[82] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[82]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[82]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[83] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[83]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[83]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[84] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[84]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[84]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[85] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[85]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[85]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[86] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[86]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[86]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[87] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[87]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[87]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[88] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[88]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[88]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[89] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[89]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[89]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[8] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[8]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[8]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[90] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[90]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[90]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[91] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[91]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[91]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[92] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[92]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[92]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[93] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[93]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[93]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[94] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[94]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[94]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[95] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[95]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[95]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[96] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[96]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[96]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[97] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[97]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[97]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[98] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[98]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[98]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[99] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[99]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[99]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch0_win_data_reg[9] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[9]),
        .G(u0),
        .GE(1'b1),
        .Q(ch0_win_data[9]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[0] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[128]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[100] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[228]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[100]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[101] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[229]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[101]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[102] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[230]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[102]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[103] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[231]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[103]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[104] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[232]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[104]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[105] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[233]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[105]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[106] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[234]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[106]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[107] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[235]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[107]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[108] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[236]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[108]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[109] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[237]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[109]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[10] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[138]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[10]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[110] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[238]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[110]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[111] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[239]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[111]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[112] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[240]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[112]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[113] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[241]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[113]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[114] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[242]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[114]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[115] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[243]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[115]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[116] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[244]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[116]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[117] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[245]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[117]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[118] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[246]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[118]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[119] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[247]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[119]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[11] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[139]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[11]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[120] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[248]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[120]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[121] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[249]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[121]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[122] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[250]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[122]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[123] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[251]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[123]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[124] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[252]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[124]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[125] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[253]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[125]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[126] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[254]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[126]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[127] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[255]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[127]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[12] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[140]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[12]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[13] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[141]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[14] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[142]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[15] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[143]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[16] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[144]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[16]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[17] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[145]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[18] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[146]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[19] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[147]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[1] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[129]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[20] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[148]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[20]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[21] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[149]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[21]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[22] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[150]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[22]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[23] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[151]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[23]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[24] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[152]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[24]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[25] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[153]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[25]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[26] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[154]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[26]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[27] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[155]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[27]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[28] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[156]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[29] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[157]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[2] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[130]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[30] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[158]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[31] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[159]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[31]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[32] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[160]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[32]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[33] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[161]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[33]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[34] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[162]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[34]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[35] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[163]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[35]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[36] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[164]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[36]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[37] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[165]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[37]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[38] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[166]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[38]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[39] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[167]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[39]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[3] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[131]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[40] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[168]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[40]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[41] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[169]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[41]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[42] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[170]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[42]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[43] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[171]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[43]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[44] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[172]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[44]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[45] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[173]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[45]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[46] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[174]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[46]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[47] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[175]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[47]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[48] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[176]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[48]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[49] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[177]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[49]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[4] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[132]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[4]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[50] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[178]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[50]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[51] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[179]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[51]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[52] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[180]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[52]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[53] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[181]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[53]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[54] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[182]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[54]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[55] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[183]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[55]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[56] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[184]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[56]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[57] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[185]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[57]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[58] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[186]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[58]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[59] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[187]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[59]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[5] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[133]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[5]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[60] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[188]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[60]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[61] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[189]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[61]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[62] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[190]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[62]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[63] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[191]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[63]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[64] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[192]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[64]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[65] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[193]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[65]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[66] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[194]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[66]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[67] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[195]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[67]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[68] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[196]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[68]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[69] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[197]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[69]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[6] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[134]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[70] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[198]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[70]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[71] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[199]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[71]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[72] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[200]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[72]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[73] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[201]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[73]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[74] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[202]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[74]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[75] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[203]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[75]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[76] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[204]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[76]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[77] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[205]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[77]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[78] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[206]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[78]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[79] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[207]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[79]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[7] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[135]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[80] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[208]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[80]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[81] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[209]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[81]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[82] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[210]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[82]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[83] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[211]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[83]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[84] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[212]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[84]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[85] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[213]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[85]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[86] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[214]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[86]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[87] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[215]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[87]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[88] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[216]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[88]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[89] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[217]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[89]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[8] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[136]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[8]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[90] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[218]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[90]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[91] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[219]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[91]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[92] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[220]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[92]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[93] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[221]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[93]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[94] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[222]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[94]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[95] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[223]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[95]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[96] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[224]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[96]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[97] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[225]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[97]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[98] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[226]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[98]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[99] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[227]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[99]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch1_win_data_reg[9] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[137]),
        .G(u0),
        .GE(1'b1),
        .Q(ch1_win_data[9]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[0] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[256]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[100] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[356]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[100]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[101] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[357]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[101]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[102] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[358]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[102]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[103] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[359]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[103]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[104] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[360]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[104]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[105] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[361]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[105]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[106] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[362]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[106]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[107] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[363]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[107]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[108] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[364]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[108]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[109] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[365]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[109]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[10] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[266]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[10]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[110] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[366]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[110]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[111] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[367]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[111]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[112] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[368]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[112]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[113] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[369]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[113]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[114] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[370]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[114]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[115] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[371]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[115]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[116] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[372]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[116]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[117] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[373]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[117]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[118] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[374]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[118]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[119] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[375]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[119]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[11] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[267]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[11]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[120] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[376]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[120]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[121] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[377]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[121]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[122] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[378]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[122]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[123] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[379]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[123]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[124] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[380]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[124]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[125] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[381]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[125]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[126] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[382]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[126]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[127] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[383]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[127]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[12] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[268]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[12]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[13] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[269]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[14] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[270]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[15] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[271]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[16] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[272]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[16]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[17] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[273]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[18] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[274]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[19] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[275]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[1] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[257]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[20] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[276]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[20]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[21] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[277]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[21]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[22] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[278]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[22]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[23] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[279]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[23]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[24] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[280]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[24]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[25] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[281]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[25]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[26] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[282]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[26]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[27] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[283]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[27]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[28] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[284]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[29] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[285]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[2] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[258]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[30] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[286]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[31] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[287]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[31]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[32] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[288]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[32]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[33] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[289]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[33]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[34] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[290]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[34]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[35] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[291]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[35]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[36] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[292]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[36]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[37] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[293]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[37]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[38] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[294]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[38]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[39] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[295]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[39]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[3] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[259]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[40] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[296]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[40]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[41] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[297]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[41]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[42] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[298]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[42]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[43] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[299]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[43]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[44] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[300]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[44]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[45] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[301]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[45]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[46] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[302]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[46]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[47] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[303]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[47]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[48] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[304]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[48]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[49] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[305]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[49]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[4] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[260]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[4]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[50] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[306]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[50]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[51] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[307]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[51]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[52] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[308]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[52]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[53] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[309]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[53]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[54] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[310]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[54]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[55] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[311]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[55]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[56] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[312]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[56]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[57] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[313]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[57]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[58] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[314]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[58]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[59] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[315]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[59]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[5] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[261]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[5]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[60] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[316]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[60]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[61] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[317]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[61]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[62] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[318]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[62]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[63] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[319]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[63]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[64] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[320]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[64]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[65] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[321]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[65]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[66] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[322]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[66]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[67] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[323]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[67]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[68] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[324]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[68]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[69] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[325]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[69]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[6] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[262]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[70] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[326]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[70]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[71] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[327]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[71]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[72] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[328]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[72]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[73] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[329]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[73]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[74] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[330]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[74]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[75] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[331]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[75]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[76] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[332]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[76]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[77] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[333]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[77]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[78] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[334]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[78]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[79] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[335]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[79]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[7] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[263]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[80] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[336]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[80]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[81] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[337]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[81]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[82] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[338]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[82]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[83] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[339]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[83]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[84] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[340]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[84]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[85] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[341]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[85]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[86] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[342]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[86]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[87] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[343]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[87]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[88] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[344]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[88]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[89] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[345]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[89]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[8] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[264]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[8]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[90] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[346]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[90]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[91] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[347]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[91]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[92] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[348]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[92]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[93] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[349]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[93]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[94] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[350]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[94]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[95] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[351]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[95]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[96] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[352]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[96]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[97] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[353]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[97]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[98] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[354]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[98]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[99] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[355]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[99]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ch2_win_data_reg[9] 
       (.CLR(ch2_win_data__0),
        .D(win_tdata[265]),
        .G(u0),
        .GE(1'b1),
        .Q(ch2_win_data[9]));
  (* SOFT_HLUTNM = "soft_lutpair1338" *) 
  LUT4 #(
    .INIT(16'h6066)) 
    \dv[0]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(win_tvalid),
        .I3(win_tready),
        .O(p_4_out));
  FDCE #(
    .INIT(1'b0)) 
    \dv_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(p_4_out),
        .Q(dv[0]));
  FDCE #(
    .INIT(1'b0)) 
    \dv_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(dv[0]),
        .Q(dv[1]));
  FDCE #(
    .INIT(1'b0)) 
    \dv_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(dv[1]),
        .Q(dv[2]));
  FDCE #(
    .INIT(1'b0)) 
    \dv_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(dv[2]),
        .Q(dv[3]));
  FDCE #(
    .INIT(1'b0)) 
    \dv_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(dv[3]),
        .Q(Q));
  (* SOFT_HLUTNM = "soft_lutpair1339" *) 
  LUT5 #(
    .INIT(32'hFFFF0010)) 
    flag_i_1
       (.I0(flag_i_2_n_1),
        .I1(flag_i_3_n_1),
        .I2(\h_cnt_reg_n_1_[0] ),
        .I3(\h_cnt_reg_n_1_[1] ),
        .I4(flag_reg_n_1),
        .O(flag_i_1_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1335" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    flag_i_2
       (.I0(\h_cnt_reg_n_1_[4] ),
        .I1(\h_cnt_reg_n_1_[6] ),
        .I2(\h_cnt_reg_n_1_[7] ),
        .I3(\h_cnt_reg_n_1_[5] ),
        .O(flag_i_2_n_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    flag_i_3
       (.I0(\h_cnt_reg_n_1_[8] ),
        .I1(\h_cnt_reg_n_1_[2] ),
        .I2(\h_cnt_reg_n_1_[9] ),
        .I3(\h_cnt_reg_n_1_[3] ),
        .O(flag_i_3_n_1));
  FDCE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(flag_i_1_n_1),
        .Q(flag_reg_n_1));
  LUT3 #(
    .INIT(8'h08)) 
    \genblk3[0].fifo_0_i_10 
       (.I0(srcBmp_axis_tvalid_IBUF),
        .I1(win_tready),
        .I2(state),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair1342" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \h_cnt[0]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\h_cnt_reg_n_1_[0] ),
        .O(h_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair1342" *) 
  LUT4 #(
    .INIT(16'h0660)) 
    \h_cnt[1]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\h_cnt_reg_n_1_[1] ),
        .I3(\h_cnt_reg_n_1_[0] ),
        .O(h_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair1333" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \h_cnt[2]_i_1 
       (.I0(\h_cnt[9]_i_5_n_1 ),
        .I1(\h_cnt_reg_n_1_[0] ),
        .I2(\h_cnt_reg_n_1_[1] ),
        .I3(\h_cnt_reg_n_1_[2] ),
        .O(h_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair1333" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \h_cnt[3]_i_1 
       (.I0(\h_cnt[9]_i_5_n_1 ),
        .I1(\h_cnt_reg_n_1_[1] ),
        .I2(\h_cnt_reg_n_1_[0] ),
        .I3(\h_cnt_reg_n_1_[2] ),
        .I4(\h_cnt_reg_n_1_[3] ),
        .O(h_cnt[3]));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \h_cnt[4]_i_1 
       (.I0(\h_cnt[9]_i_5_n_1 ),
        .I1(\h_cnt_reg_n_1_[2] ),
        .I2(\h_cnt_reg_n_1_[0] ),
        .I3(\h_cnt_reg_n_1_[1] ),
        .I4(\h_cnt_reg_n_1_[3] ),
        .I5(\h_cnt_reg_n_1_[4] ),
        .O(h_cnt[4]));
  LUT6 #(
    .INIT(64'h6066666606000000)) 
    \h_cnt[5]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\h_cnt[6]_i_2_n_1 ),
        .I3(\h_cnt_reg_n_1_[4] ),
        .I4(\h_cnt_reg_n_1_[3] ),
        .I5(\h_cnt_reg_n_1_[5] ),
        .O(h_cnt[5]));
  LUT6 #(
    .INIT(64'hAA2AAAAA00800000)) 
    \h_cnt[6]_i_1 
       (.I0(Bic_CAL_ch2_n_30),
        .I1(\h_cnt_reg_n_1_[3] ),
        .I2(\h_cnt_reg_n_1_[4] ),
        .I3(\h_cnt[6]_i_2_n_1 ),
        .I4(\h_cnt_reg_n_1_[5] ),
        .I5(\h_cnt_reg_n_1_[6] ),
        .O(h_cnt[6]));
  LUT3 #(
    .INIT(8'h7F)) 
    \h_cnt[6]_i_2 
       (.I0(\h_cnt_reg_n_1_[1] ),
        .I1(\h_cnt_reg_n_1_[0] ),
        .I2(\h_cnt_reg_n_1_[2] ),
        .O(\h_cnt[6]_i_2_n_1 ));
  LUT5 #(
    .INIT(32'h60660600)) 
    \h_cnt[7]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\h_cnt[9]_i_4_n_1 ),
        .I3(\h_cnt_reg_n_1_[6] ),
        .I4(\h_cnt_reg_n_1_[7] ),
        .O(h_cnt[7]));
  LUT6 #(
    .INIT(64'h6666066600006000)) 
    \h_cnt[8]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\h_cnt_reg_n_1_[7] ),
        .I3(\h_cnt_reg_n_1_[6] ),
        .I4(\h_cnt[9]_i_4_n_1 ),
        .I5(\h_cnt_reg_n_1_[8] ),
        .O(h_cnt[8]));
  LUT1 #(
    .INIT(2'h1)) 
    \h_cnt[9]_i_1 
       (.I0(\h_cnt[9]_i_3_n_1 ),
        .O(\h_cnt[9]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hAAAA6AAA00000000)) 
    \h_cnt[9]_i_2 
       (.I0(\h_cnt_reg_n_1_[9] ),
        .I1(\h_cnt_reg_n_1_[8] ),
        .I2(\h_cnt_reg_n_1_[7] ),
        .I3(\h_cnt_reg_n_1_[6] ),
        .I4(\h_cnt[9]_i_4_n_1 ),
        .I5(\h_cnt[9]_i_5_n_1 ),
        .O(h_cnt[9]));
  (* SOFT_HLUTNM = "soft_lutpair1343" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \h_cnt[9]_i_3 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\h_cnt[9]_i_6_n_1 ),
        .O(\h_cnt[9]_i_3_n_1 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \h_cnt[9]_i_4 
       (.I0(\h_cnt_reg_n_1_[3] ),
        .I1(\h_cnt_reg_n_1_[4] ),
        .I2(\h_cnt_reg_n_1_[1] ),
        .I3(\h_cnt_reg_n_1_[0] ),
        .I4(\h_cnt_reg_n_1_[2] ),
        .I5(\h_cnt_reg_n_1_[5] ),
        .O(\h_cnt[9]_i_4_n_1 ));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
    \h_cnt[9]_i_5 
       (.I0(Bic_CAL_ch2_n_30),
        .I1(\h_cnt_reg_n_1_[6] ),
        .I2(\h_cnt_reg_n_1_[7] ),
        .I3(\h_cnt_reg_n_1_[5] ),
        .I4(\h_cnt[9]_i_7_n_1 ),
        .I5(\h_cnt[9]_i_6_n_1 ),
        .O(\h_cnt[9]_i_5_n_1 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \h_cnt[9]_i_6 
       (.I0(\w_cnt[9]_i_3_n_1 ),
        .I1(\w_cnt_reg_n_1_[8] ),
        .I2(\w_cnt_reg_n_1_[7] ),
        .I3(\w_cnt_reg_n_1_[9] ),
        .I4(\w_cnt_reg_n_1_[6] ),
        .I5(\h_cnt[9]_i_5_0 ),
        .O(\h_cnt[9]_i_6_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    \h_cnt[9]_i_7 
       (.I0(\h_cnt_reg_n_1_[9] ),
        .I1(\h_cnt_reg_n_1_[3] ),
        .I2(\h_cnt_reg_n_1_[4] ),
        .I3(\h_cnt[9]_i_9_n_1 ),
        .I4(\h_cnt_reg_n_1_[2] ),
        .I5(\h_cnt_reg_n_1_[8] ),
        .O(\h_cnt[9]_i_7_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair1339" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \h_cnt[9]_i_9 
       (.I0(\h_cnt_reg_n_1_[0] ),
        .I1(\h_cnt_reg_n_1_[1] ),
        .O(\h_cnt[9]_i_9_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[0] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[0]),
        .Q(\h_cnt_reg_n_1_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[1] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[1]),
        .Q(\h_cnt_reg_n_1_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[2] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[2]),
        .Q(\h_cnt_reg_n_1_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[3] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[3]),
        .Q(\h_cnt_reg_n_1_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[4] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[4]),
        .Q(\h_cnt_reg_n_1_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[5] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[5]),
        .Q(\h_cnt_reg_n_1_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[6] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[6]),
        .Q(\h_cnt_reg_n_1_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[7] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[7]),
        .Q(\h_cnt_reg_n_1_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[8] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[8]),
        .Q(\h_cnt_reg_n_1_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \h_cnt_reg[9] 
       (.C(CLK),
        .CE(\h_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(h_cnt[9]),
        .Q(\h_cnt_reg_n_1_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair1334" *) 
  LUT2 #(
    .INIT(4'h1)) 
    n_0_721_BUFG_inst_i_1
       (.I0(state_0[0]),
        .I1(\FSM_sequential_state[0]_i_2_n_1 ),
        .O(n_0_721_BUFG_inst_n_1));
  (* SOFT_HLUTNM = "soft_lutpair1343" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \w_cnt[0]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\w_cnt_reg_n_1_[0] ),
        .O(w_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair1340" *) 
  LUT4 #(
    .INIT(16'h0660)) 
    \w_cnt[1]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\w_cnt_reg_n_1_[1] ),
        .I3(\w_cnt_reg_n_1_[0] ),
        .O(w_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair1340" *) 
  LUT5 #(
    .INIT(32'h06666000)) 
    \w_cnt[2]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\w_cnt_reg_n_1_[0] ),
        .I3(\w_cnt_reg_n_1_[1] ),
        .I4(\w_cnt_reg_n_1_[2] ),
        .O(w_cnt[2]));
  LUT6 #(
    .INIT(64'h0666666660000000)) 
    \w_cnt[3]_i_1 
       (.I0(state_0[0]),
        .I1(state_0[1]),
        .I2(\w_cnt_reg_n_1_[1] ),
        .I3(\w_cnt_reg_n_1_[0] ),
        .I4(\w_cnt_reg_n_1_[2] ),
        .I5(\w_cnt_reg_n_1_[3] ),
        .O(w_cnt[3]));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \w_cnt[4]_i_1 
       (.I0(\w_cnt_reg_n_1_[1] ),
        .I1(\w_cnt_reg_n_1_[0] ),
        .I2(\w_cnt_reg_n_1_[3] ),
        .I3(\w_cnt_reg_n_1_[2] ),
        .I4(\w_cnt_reg_n_1_[4] ),
        .I5(Bic_CAL_ch2_n_30),
        .O(\w_cnt[4]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'hAAAA2AAA00008000)) 
    \w_cnt[5]_i_1 
       (.I0(Bic_CAL_ch2_n_30),
        .I1(\w_cnt_reg_n_1_[4] ),
        .I2(\w_cnt_reg_n_1_[2] ),
        .I3(\w_cnt_reg_n_1_[3] ),
        .I4(\w_cnt[5]_i_2_n_1 ),
        .I5(\w_cnt_reg_n_1_[5] ),
        .O(w_cnt[5]));
  LUT2 #(
    .INIT(4'h7)) 
    \w_cnt[5]_i_2 
       (.I0(\w_cnt_reg_n_1_[0] ),
        .I1(\w_cnt_reg_n_1_[1] ),
        .O(\w_cnt[5]_i_2_n_1 ));
  LUT3 #(
    .INIT(8'h28)) 
    \w_cnt[6]_i_1 
       (.I0(\h_cnt[9]_i_3_n_1 ),
        .I1(\w_cnt[9]_i_3_n_1 ),
        .I2(\w_cnt_reg_n_1_[6] ),
        .O(w_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair1336" *) 
  LUT4 #(
    .INIT(16'h6A00)) 
    \w_cnt[7]_i_1 
       (.I0(\w_cnt_reg_n_1_[7] ),
        .I1(\w_cnt[9]_i_3_n_1 ),
        .I2(\w_cnt_reg_n_1_[6] ),
        .I3(\h_cnt[9]_i_3_n_1 ),
        .O(w_cnt[7]));
  (* SOFT_HLUTNM = "soft_lutpair1336" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \w_cnt[8]_i_1 
       (.I0(\h_cnt[9]_i_3_n_1 ),
        .I1(\w_cnt_reg_n_1_[7] ),
        .I2(\w_cnt_reg_n_1_[6] ),
        .I3(\w_cnt[9]_i_3_n_1 ),
        .I4(\w_cnt_reg_n_1_[8] ),
        .O(w_cnt[8]));
  LUT4 #(
    .INIT(16'hF88F)) 
    \w_cnt[9]_i_1 
       (.I0(win_tready),
        .I1(win_tvalid),
        .I2(state_0[0]),
        .I3(state_0[1]),
        .O(\w_cnt[9]_i_1_n_1 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \w_cnt[9]_i_2 
       (.I0(\h_cnt[9]_i_3_n_1 ),
        .I1(\w_cnt_reg_n_1_[7] ),
        .I2(\w_cnt_reg_n_1_[6] ),
        .I3(\w_cnt[9]_i_3_n_1 ),
        .I4(\w_cnt_reg_n_1_[8] ),
        .I5(\w_cnt_reg_n_1_[9] ),
        .O(w_cnt[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \w_cnt[9]_i_3 
       (.I0(\w_cnt_reg_n_1_[5] ),
        .I1(\w_cnt_reg_n_1_[1] ),
        .I2(\w_cnt_reg_n_1_[0] ),
        .I3(\w_cnt_reg_n_1_[3] ),
        .I4(\w_cnt_reg_n_1_[2] ),
        .I5(\w_cnt_reg_n_1_[4] ),
        .O(\w_cnt[9]_i_3_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[0] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[0]),
        .Q(\w_cnt_reg_n_1_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[1] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[1]),
        .Q(\w_cnt_reg_n_1_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[2] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[2]),
        .Q(\w_cnt_reg_n_1_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[3] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[3]),
        .Q(\w_cnt_reg_n_1_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[4] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(\w_cnt[4]_i_1_n_1 ),
        .Q(\w_cnt_reg_n_1_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[5] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[5]),
        .Q(\w_cnt_reg_n_1_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[6] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[6]),
        .Q(\w_cnt_reg_n_1_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[7] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[7]),
        .Q(\w_cnt_reg_n_1_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[8] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[8]),
        .Q(\w_cnt_reg_n_1_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \w_cnt_reg[9] 
       (.C(CLK),
        .CE(\w_cnt[9]_i_1_n_1 ),
        .CLR(win_tready_reg_0),
        .D(w_cnt[9]),
        .Q(\w_cnt_reg_n_1_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair1337" *) 
  LUT4 #(
    .INIT(16'h0151)) 
    \win_cnt[0]_i_1 
       (.I0(\win_cnt_reg_n_1_[0] ),
        .I1(\FSM_sequential_state[0]_i_2_n_1 ),
        .I2(state_0[0]),
        .I3(state_0[1]),
        .O(\win_cnt[0]_i_1_n_1 ));
  (* SOFT_HLUTNM = "soft_lutpair1337" *) 
  LUT5 #(
    .INIT(32'h00066606)) 
    \win_cnt[1]_i_1 
       (.I0(\win_cnt_reg_n_1_[0] ),
        .I1(\win_cnt_reg_n_1_[1] ),
        .I2(\FSM_sequential_state[0]_i_2_n_1 ),
        .I3(state_0[0]),
        .I4(state_0[1]),
        .O(win_cnt[1]));
  LUT6 #(
    .INIT(64'h001D1D001D001D00)) 
    \win_cnt[2]_i_1 
       (.I0(\FSM_sequential_state[0]_i_2_n_1 ),
        .I1(state_0[0]),
        .I2(state_0[1]),
        .I3(\win_cnt_reg_n_1_[2] ),
        .I4(\win_cnt_reg_n_1_[0] ),
        .I5(\win_cnt_reg_n_1_[1] ),
        .O(win_cnt[2]));
  LUT6 #(
    .INIT(64'h1D1D001D00001D00)) 
    \win_cnt[3]_i_1 
       (.I0(\FSM_sequential_state[0]_i_2_n_1 ),
        .I1(state_0[0]),
        .I2(state_0[1]),
        .I3(\win_cnt_reg_n_1_[0] ),
        .I4(\win_cnt[3]_i_2_n_1 ),
        .I5(\win_cnt_reg_n_1_[3] ),
        .O(win_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair1341" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \win_cnt[3]_i_2 
       (.I0(\win_cnt_reg_n_1_[2] ),
        .I1(\win_cnt_reg_n_1_[1] ),
        .O(\win_cnt[3]_i_2_n_1 ));
  LUT6 #(
    .INIT(64'h000000D2D2D200D2)) 
    \win_cnt[4]_i_1 
       (.I0(\win_cnt[4]_i_2_n_1 ),
        .I1(\win_cnt[4]_i_3_n_1 ),
        .I2(\win_cnt_reg_n_1_[4] ),
        .I3(\FSM_sequential_state[0]_i_2_n_1 ),
        .I4(state_0[0]),
        .I5(state_0[1]),
        .O(win_cnt[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \win_cnt[4]_i_2 
       (.I0(\win_cnt_reg_n_1_[2] ),
        .I1(\win_cnt_reg_n_1_[0] ),
        .O(\win_cnt[4]_i_2_n_1 ));
  LUT2 #(
    .INIT(4'h7)) 
    \win_cnt[4]_i_3 
       (.I0(\win_cnt_reg_n_1_[3] ),
        .I1(\win_cnt_reg_n_1_[1] ),
        .O(\win_cnt[4]_i_3_n_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \win_cnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(\win_cnt[0]_i_1_n_1 ),
        .Q(\win_cnt_reg_n_1_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \win_cnt_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(win_cnt[1]),
        .Q(\win_cnt_reg_n_1_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \win_cnt_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(win_cnt[2]),
        .Q(\win_cnt_reg_n_1_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \win_cnt_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(win_cnt[3]),
        .Q(\win_cnt_reg_n_1_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \win_cnt_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(win_cnt[4]),
        .Q(\win_cnt_reg_n_1_[4] ));
  (* SOFT_HLUTNM = "soft_lutpair1338" *) 
  LUT5 #(
    .INIT(32'hFF001500)) 
    win_tready_i_1
       (.I0(\FSM_sequential_state[1]_i_3_n_1 ),
        .I1(win_tvalid),
        .I2(win_tready),
        .I3(state_0[1]),
        .I4(state_0[0]),
        .O(win_tready_i_1_n_1));
  FDCE #(
    .INIT(1'b0)) 
    win_tready_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(win_tready_reg_0),
        .D(win_tready_i_1_n_1),
        .Q(win_tready));
  (* SOFT_HLUTNM = "soft_lutpair1344" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \wr_cnt[0]_i_1 
       (.I0(Q),
        .I1(\wr_cnt_reg[0] ),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair1344" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \wr_cnt[3]_i_1 
       (.I0(Q),
        .I1(\wr_cnt_reg[3] ),
        .O(\dv_reg[4]_0 ));
endmodule

(* CHECK_LICENSE_TYPE = "add_27,c_addsub_v12_0_14,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
module add_27
   (A,
    B,
    CLK,
    S);
  (* x_interface_info = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [26:0]A;
  (* x_interface_info = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [26:0]B;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input CLK;
  (* x_interface_info = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [27:0]S;

  wire [26:0]A;
  wire [26:0]B;
  wire CLK;
  wire [27:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "27" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000000000000000000000" *) 
  (* C_B_WIDTH = "27" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "28" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_27_c_addsub_v12_0_14 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "add_28,c_addsub_v12_0_14,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
module add_28
   (A,
    B,
    CLK,
    S);
  (* x_interface_info = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [27:0]A;
  (* x_interface_info = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [27:0]B;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input CLK;
  (* x_interface_info = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [28:0]S;

  wire [27:0]A;
  wire [27:0]B;
  wire CLK;
  wire [28:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "28" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "0000000000000000000000000000" *) 
  (* C_B_WIDTH = "28" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "29" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_28_c_addsub_v12_0_14 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "add_29,c_addsub_v12_0_14,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
module add_29
   (A,
    B,
    CLK,
    S);
  (* x_interface_info = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [28:0]A;
  (* x_interface_info = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [28:0]B;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input CLK;
  (* x_interface_info = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [29:0]S;

  wire [28:0]A;
  wire [28:0]B;
  wire CLK;
  wire [29:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "29" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "00000000000000000000000000000" *) 
  (* C_B_WIDTH = "29" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "30" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_29_c_addsub_v12_0_14 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "add_30,c_addsub_v12_0_14,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "c_addsub_v12_0_14,Vivado 2019.2" *) 
module add_30
   (A,
    B,
    CLK,
    S);
  (* x_interface_info = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [29:0]A;
  (* x_interface_info = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [29:0]B;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input CLK;
  (* x_interface_info = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [29:0]S;

  wire [29:0]A;
  wire [29:0]B;
  wire CLK;
  wire [29:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "30" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000000000000000000000000" *) 
  (* C_B_WIDTH = "30" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "30" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_30_c_addsub_v12_0_14 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_24x8192,fifo_generator_v13_2_5,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
module fifo_24x8192
   (clk,
    srst,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty,
    data_count);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input clk;
  input srst;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [23:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [23:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output [13:0]data_count;

  wire clk;
  wire [13:0]data_count;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [13:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [13:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "14" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "24" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "24" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "1" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "8kx4" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "8191" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "8190" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "14" *) 
  (* C_RD_DEPTH = "8192" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "13" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "14" *) 
  (* C_WR_DEPTH = "8192" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "13" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  fifo_24x8192_fifo_generator_v13_2_5 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(data_count),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[13:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[13:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_25x32,fifo_generator_v13_2_5,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
module fifo_25x32
   (clk,
    srst,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty,
    data_count);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input clk;
  input srst;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [24:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [24:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output [5:0]data_count;

  wire clk;
  wire [5:0]data_count;
  wire [24:0]din;
  wire [24:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [5:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [5:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "6" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "25" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "25" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "1" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "6" *) 
  (* C_RD_DEPTH = "32" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "5" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "6" *) 
  (* C_WR_DEPTH = "32" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "5" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  fifo_25x32_fifo_generator_v13_2_5 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(data_count),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[5:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[5:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_8x4096,fifo_generator_v13_2_5,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_5,Vivado 2019.2" *) 
module fifo_8x4096
   (clk,
    srst,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty,
    data_count);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input clk;
  input srst;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [7:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [7:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output [12:0]data_count;

  wire clk;
  wire [12:0]data_count;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [12:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [12:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "13" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "8" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "8" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "1" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "4kx9" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "4095" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "4094" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "13" *) 
  (* C_RD_DEPTH = "4096" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "12" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "13" *) 
  (* C_WR_DEPTH = "4096" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "12" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  fifo_8x4096_fifo_generator_v13_2_5 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(data_count),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[12:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[12:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "mult_8x19,mult_gen_v12_0_16,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "mult_gen_v12_0_16,Vivado 2019.2" *) 
module mult_8x19
   (CLK,
    A,
    B,
    P);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, PHASE 0.000, INSERT_VIP 0" *) input CLK;
  (* x_interface_info = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [7:0]A;
  (* x_interface_info = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [18:0]B;
  (* x_interface_info = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* x_interface_parameter = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [26:0]P;

  wire [7:0]A;
  wire [18:0]B;
  wire CLK;
  wire [26:0]P;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  (* C_A_TYPE = "1" *) 
  (* C_A_WIDTH = "8" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "19" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "1" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "0" *) 
  (* C_OUT_HIGH = "26" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* c_optimize_goal = "1" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  mult_8x19_mult_gen_v12_0_16 U0
       (.A(A),
        .B(B),
        .CE(1'b1),
        .CLK(CLK),
        .P(P),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* C_ADD_MODE = "0" *) (* C_AINIT_VAL = "0" *) (* C_A_TYPE = "0" *) 
(* C_A_WIDTH = "27" *) (* C_BORROW_LOW = "1" *) (* C_BYPASS_LOW = "0" *) 
(* C_B_CONSTANT = "0" *) (* C_B_TYPE = "0" *) (* C_B_VALUE = "000000000000000000000000000" *) 
(* C_B_WIDTH = "27" *) (* C_CE_OVERRIDES_BYPASS = "1" *) (* C_CE_OVERRIDES_SCLR = "0" *) 
(* C_HAS_BYPASS = "0" *) (* C_HAS_CE = "0" *) (* C_HAS_C_IN = "0" *) 
(* C_HAS_C_OUT = "0" *) (* C_HAS_SCLR = "0" *) (* C_HAS_SINIT = "0" *) 
(* C_HAS_SSET = "0" *) (* C_IMPLEMENTATION = "1" *) (* C_LATENCY = "1" *) 
(* C_OUT_WIDTH = "28" *) (* C_SCLR_OVERRIDES_SSET = "1" *) (* C_SINIT_VAL = "0" *) 
(* C_VERBOSITY = "0" *) (* C_XDEVICEFAMILY = "zynq" *) (* ORIG_REF_NAME = "c_addsub_v12_0_14" *) 
(* downgradeipidentifiedwarnings = "yes" *) 
module add_27_c_addsub_v12_0_14
   (A,
    B,
    CLK,
    ADD,
    C_IN,
    CE,
    BYPASS,
    SCLR,
    SSET,
    SINIT,
    C_OUT,
    S);
  input [26:0]A;
  input [26:0]B;
  input CLK;
  input ADD;
  input C_IN;
  input CE;
  input BYPASS;
  input SCLR;
  input SSET;
  input SINIT;
  output C_OUT;
  output [27:0]S;

  wire \<const0> ;
  wire [26:0]A;
  wire ADD;
  wire [26:0]B;
  wire CLK;
  wire [27:0]S;
  wire NLW_xst_addsub_C_OUT_UNCONNECTED;

  assign C_OUT = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "27" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000000000000000000000" *) 
  (* C_B_WIDTH = "27" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "28" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_27_c_addsub_v12_0_14_viv xst_addsub
       (.A(A),
        .ADD(ADD),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b0),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_xst_addsub_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* C_ADD_MODE = "0" *) (* C_AINIT_VAL = "0" *) (* C_A_TYPE = "0" *) 
(* C_A_WIDTH = "28" *) (* C_BORROW_LOW = "1" *) (* C_BYPASS_LOW = "0" *) 
(* C_B_CONSTANT = "0" *) (* C_B_TYPE = "0" *) (* C_B_VALUE = "0000000000000000000000000000" *) 
(* C_B_WIDTH = "28" *) (* C_CE_OVERRIDES_BYPASS = "1" *) (* C_CE_OVERRIDES_SCLR = "0" *) 
(* C_HAS_BYPASS = "0" *) (* C_HAS_CE = "0" *) (* C_HAS_C_IN = "0" *) 
(* C_HAS_C_OUT = "0" *) (* C_HAS_SCLR = "0" *) (* C_HAS_SINIT = "0" *) 
(* C_HAS_SSET = "0" *) (* C_IMPLEMENTATION = "1" *) (* C_LATENCY = "1" *) 
(* C_OUT_WIDTH = "29" *) (* C_SCLR_OVERRIDES_SSET = "1" *) (* C_SINIT_VAL = "0" *) 
(* C_VERBOSITY = "0" *) (* C_XDEVICEFAMILY = "zynq" *) (* ORIG_REF_NAME = "c_addsub_v12_0_14" *) 
(* downgradeipidentifiedwarnings = "yes" *) 
module add_28_c_addsub_v12_0_14
   (A,
    B,
    CLK,
    ADD,
    C_IN,
    CE,
    BYPASS,
    SCLR,
    SSET,
    SINIT,
    C_OUT,
    S);
  input [27:0]A;
  input [27:0]B;
  input CLK;
  input ADD;
  input C_IN;
  input CE;
  input BYPASS;
  input SCLR;
  input SSET;
  input SINIT;
  output C_OUT;
  output [28:0]S;

  wire \<const0> ;
  wire [27:0]A;
  wire ADD;
  wire [27:0]B;
  wire CLK;
  wire [28:0]S;
  wire NLW_xst_addsub_C_OUT_UNCONNECTED;

  assign C_OUT = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "28" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "0000000000000000000000000000" *) 
  (* C_B_WIDTH = "28" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "29" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_28_c_addsub_v12_0_14_viv xst_addsub
       (.A(A),
        .ADD(ADD),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b0),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_xst_addsub_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* C_ADD_MODE = "0" *) (* C_AINIT_VAL = "0" *) (* C_A_TYPE = "0" *) 
(* C_A_WIDTH = "29" *) (* C_BORROW_LOW = "1" *) (* C_BYPASS_LOW = "0" *) 
(* C_B_CONSTANT = "0" *) (* C_B_TYPE = "0" *) (* C_B_VALUE = "00000000000000000000000000000" *) 
(* C_B_WIDTH = "29" *) (* C_CE_OVERRIDES_BYPASS = "1" *) (* C_CE_OVERRIDES_SCLR = "0" *) 
(* C_HAS_BYPASS = "0" *) (* C_HAS_CE = "0" *) (* C_HAS_C_IN = "0" *) 
(* C_HAS_C_OUT = "0" *) (* C_HAS_SCLR = "0" *) (* C_HAS_SINIT = "0" *) 
(* C_HAS_SSET = "0" *) (* C_IMPLEMENTATION = "1" *) (* C_LATENCY = "1" *) 
(* C_OUT_WIDTH = "30" *) (* C_SCLR_OVERRIDES_SSET = "1" *) (* C_SINIT_VAL = "0" *) 
(* C_VERBOSITY = "0" *) (* C_XDEVICEFAMILY = "zynq" *) (* ORIG_REF_NAME = "c_addsub_v12_0_14" *) 
(* downgradeipidentifiedwarnings = "yes" *) 
module add_29_c_addsub_v12_0_14
   (A,
    B,
    CLK,
    ADD,
    C_IN,
    CE,
    BYPASS,
    SCLR,
    SSET,
    SINIT,
    C_OUT,
    S);
  input [28:0]A;
  input [28:0]B;
  input CLK;
  input ADD;
  input C_IN;
  input CE;
  input BYPASS;
  input SCLR;
  input SSET;
  input SINIT;
  output C_OUT;
  output [29:0]S;

  wire \<const0> ;
  wire [28:0]A;
  wire ADD;
  wire [28:0]B;
  wire CLK;
  wire [29:0]S;
  wire NLW_xst_addsub_C_OUT_UNCONNECTED;

  assign C_OUT = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "29" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "00000000000000000000000000000" *) 
  (* C_B_WIDTH = "29" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "30" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_29_c_addsub_v12_0_14_viv xst_addsub
       (.A(A),
        .ADD(ADD),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b0),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_xst_addsub_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* C_ADD_MODE = "0" *) (* C_AINIT_VAL = "0" *) (* C_A_TYPE = "0" *) 
(* C_A_WIDTH = "30" *) (* C_BORROW_LOW = "1" *) (* C_BYPASS_LOW = "0" *) 
(* C_B_CONSTANT = "0" *) (* C_B_TYPE = "0" *) (* C_B_VALUE = "000000000000000000000000000000" *) 
(* C_B_WIDTH = "30" *) (* C_CE_OVERRIDES_BYPASS = "1" *) (* C_CE_OVERRIDES_SCLR = "0" *) 
(* C_HAS_BYPASS = "0" *) (* C_HAS_CE = "0" *) (* C_HAS_C_IN = "0" *) 
(* C_HAS_C_OUT = "0" *) (* C_HAS_SCLR = "0" *) (* C_HAS_SINIT = "0" *) 
(* C_HAS_SSET = "0" *) (* C_IMPLEMENTATION = "1" *) (* C_LATENCY = "1" *) 
(* C_OUT_WIDTH = "30" *) (* C_SCLR_OVERRIDES_SSET = "1" *) (* C_SINIT_VAL = "0" *) 
(* C_VERBOSITY = "0" *) (* C_XDEVICEFAMILY = "zynq" *) (* ORIG_REF_NAME = "c_addsub_v12_0_14" *) 
(* downgradeipidentifiedwarnings = "yes" *) 
module add_30_c_addsub_v12_0_14
   (A,
    B,
    CLK,
    ADD,
    C_IN,
    CE,
    BYPASS,
    SCLR,
    SSET,
    SINIT,
    C_OUT,
    S);
  input [29:0]A;
  input [29:0]B;
  input CLK;
  input ADD;
  input C_IN;
  input CE;
  input BYPASS;
  input SCLR;
  input SSET;
  input SINIT;
  output C_OUT;
  output [29:0]S;

  wire \<const0> ;
  wire [29:0]A;
  wire ADD;
  wire [29:0]B;
  wire CLK;
  wire [29:0]S;
  wire NLW_xst_addsub_C_OUT_UNCONNECTED;

  assign C_OUT = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "30" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000000000000000000000000" *) 
  (* C_B_WIDTH = "30" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "1" *) 
  (* C_OUT_WIDTH = "30" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  add_30_c_addsub_v12_0_14_viv xst_addsub
       (.A(A),
        .ADD(ADD),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b0),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_xst_addsub_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module fifo_24x8192_blk_mem_gen_generic_cstr
   (D,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en,
    ena_array,
    enb_array,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 );
  output [23:0]D;
  output \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [23:0]din;
  input ram_wr_en;
  input [1:0]ena_array;
  input [1:0]enb_array;
  input \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;

  wire [23:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [12:0]Q;
  wire clk;
  wire [23:0]din;
  wire [1:0]ena_array;
  wire [1:0]enb_array;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;
  wire ram_wr_en;
  wire \ramloop[2].ram.r_n_0 ;
  wire \ramloop[2].ram.r_n_1 ;
  wire \ramloop[2].ram.r_n_2 ;
  wire \ramloop[2].ram.r_n_3 ;
  wire \ramloop[2].ram.r_n_4 ;
  wire \ramloop[2].ram.r_n_5 ;
  wire \ramloop[2].ram.r_n_6 ;
  wire \ramloop[2].ram.r_n_7 ;
  wire \ramloop[2].ram.r_n_8 ;
  wire \ramloop[3].ram.r_n_0 ;
  wire \ramloop[3].ram.r_n_1 ;
  wire \ramloop[3].ram.r_n_2 ;
  wire \ramloop[3].ram.r_n_3 ;
  wire \ramloop[3].ram.r_n_4 ;
  wire \ramloop[3].ram.r_n_5 ;
  wire \ramloop[3].ram.r_n_6 ;
  wire \ramloop[3].ram.r_n_7 ;
  wire \ramloop[3].ram.r_n_8 ;
  wire \ramloop[4].ram.r_n_0 ;
  wire \ramloop[4].ram.r_n_1 ;
  wire \ramloop[4].ram.r_n_2 ;
  wire \ramloop[4].ram.r_n_3 ;
  wire \ramloop[4].ram.r_n_4 ;
  wire \ramloop[4].ram.r_n_5 ;
  wire \ramloop[4].ram.r_n_6 ;
  wire \ramloop[4].ram.r_n_7 ;
  wire \ramloop[4].ram.r_n_8 ;
  wire \ramloop[5].ram.r_n_0 ;
  wire \ramloop[5].ram.r_n_1 ;
  wire \ramloop[5].ram.r_n_2 ;
  wire \ramloop[5].ram.r_n_3 ;
  wire \ramloop[5].ram.r_n_4 ;
  wire \ramloop[5].ram.r_n_5 ;
  wire \ramloop[5].ram.r_n_6 ;
  wire \ramloop[5].ram.r_n_7 ;
  wire \ramloop[5].ram.r_n_8 ;
  wire srst;

  fifo_24x8192_blk_mem_gen_mux__parameterized0 \has_mux_b.B 
       (.D(D[23:6]),
        .DOBDO({\ramloop[3].ram.r_n_0 ,\ramloop[3].ram.r_n_1 ,\ramloop[3].ram.r_n_2 ,\ramloop[3].ram.r_n_3 ,\ramloop[3].ram.r_n_4 ,\ramloop[3].ram.r_n_5 ,\ramloop[3].ram.r_n_6 ,\ramloop[3].ram.r_n_7 }),
        .DOPBDOP(\ramloop[3].ram.r_n_8 ),
        .clk(clk),
        .\goreg_bm.dout_i_reg[13] ({\ramloop[2].ram.r_n_0 ,\ramloop[2].ram.r_n_1 ,\ramloop[2].ram.r_n_2 ,\ramloop[2].ram.r_n_3 ,\ramloop[2].ram.r_n_4 ,\ramloop[2].ram.r_n_5 ,\ramloop[2].ram.r_n_6 ,\ramloop[2].ram.r_n_7 }),
        .\goreg_bm.dout_i_reg[14] (\ramloop[2].ram.r_n_8 ),
        .\goreg_bm.dout_i_reg[22] ({\ramloop[5].ram.r_n_0 ,\ramloop[5].ram.r_n_1 ,\ramloop[5].ram.r_n_2 ,\ramloop[5].ram.r_n_3 ,\ramloop[5].ram.r_n_4 ,\ramloop[5].ram.r_n_5 ,\ramloop[5].ram.r_n_6 ,\ramloop[5].ram.r_n_7 }),
        .\goreg_bm.dout_i_reg[22]_0 ({\ramloop[4].ram.r_n_0 ,\ramloop[4].ram.r_n_1 ,\ramloop[4].ram.r_n_2 ,\ramloop[4].ram.r_n_3 ,\ramloop[4].ram.r_n_4 ,\ramloop[4].ram.r_n_5 ,\ramloop[4].ram.r_n_6 ,\ramloop[4].ram.r_n_7 }),
        .\goreg_bm.dout_i_reg[23] (\ramloop[5].ram.r_n_8 ),
        .\goreg_bm.dout_i_reg[23]_0 (\ramloop[4].ram.r_n_8 ),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_1 (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ));
  fifo_24x8192_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D[1:0]),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din[1:0]),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
  fifo_24x8192_blk_mem_gen_prim_width__parameterized0 \ramloop[1].ram.r 
       (.D(D[5:2]),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din[5:2]),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
  fifo_24x8192_blk_mem_gen_prim_width__parameterized1 \ramloop[2].ram.r 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ({\ramloop[2].ram.r_n_0 ,\ramloop[2].ram.r_n_1 ,\ramloop[2].ram.r_n_2 ,\ramloop[2].ram.r_n_3 ,\ramloop[2].ram.r_n_4 ,\ramloop[2].ram.r_n_5 ,\ramloop[2].ram.r_n_6 ,\ramloop[2].ram.r_n_7 }),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\ramloop[2].ram.r_n_8 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 [11:0]),
        .Q(Q[11:0]),
        .clk(clk),
        .din(din[14:6]),
        .ena_array(ena_array[0]),
        .enb_array(enb_array[0]),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
  fifo_24x8192_blk_mem_gen_prim_width__parameterized2 \ramloop[3].ram.r 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 [11:0]),
        .DOBDO({\ramloop[3].ram.r_n_0 ,\ramloop[3].ram.r_n_1 ,\ramloop[3].ram.r_n_2 ,\ramloop[3].ram.r_n_3 ,\ramloop[3].ram.r_n_4 ,\ramloop[3].ram.r_n_5 ,\ramloop[3].ram.r_n_6 ,\ramloop[3].ram.r_n_7 }),
        .DOPBDOP(\ramloop[3].ram.r_n_8 ),
        .Q(Q[11:0]),
        .clk(clk),
        .din(din[14:6]),
        .ena_array(ena_array[1]),
        .enb_array(enb_array[1]),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
  fifo_24x8192_blk_mem_gen_prim_width__parameterized3 \ramloop[4].ram.r 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ({\ramloop[4].ram.r_n_0 ,\ramloop[4].ram.r_n_1 ,\ramloop[4].ram.r_n_2 ,\ramloop[4].ram.r_n_3 ,\ramloop[4].ram.r_n_4 ,\ramloop[4].ram.r_n_5 ,\ramloop[4].ram.r_n_6 ,\ramloop[4].ram.r_n_7 }),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\ramloop[4].ram.r_n_8 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 [11:0]),
        .Q(Q[11:0]),
        .clk(clk),
        .din(din[23:15]),
        .ena_array(ena_array[0]),
        .enb_array(enb_array[0]),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
  fifo_24x8192_blk_mem_gen_prim_width__parameterized4 \ramloop[5].ram.r 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ({\ramloop[5].ram.r_n_0 ,\ramloop[5].ram.r_n_1 ,\ramloop[5].ram.r_n_2 ,\ramloop[5].ram.r_n_3 ,\ramloop[5].ram.r_n_4 ,\ramloop[5].ram.r_n_5 ,\ramloop[5].ram.r_n_6 ,\ramloop[5].ram.r_n_7 }),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\ramloop[5].ram.r_n_8 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 [11:0]),
        .Q(Q[11:0]),
        .clk(clk),
        .din(din[23:15]),
        .ena_array(ena_array[1]),
        .enb_array(enb_array[1]),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_mux" *) 
module fifo_24x8192_blk_mem_gen_mux__parameterized0
   (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ,
    D,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_1 ,
    clk,
    DOBDO,
    \goreg_bm.dout_i_reg[13] ,
    DOPBDOP,
    \goreg_bm.dout_i_reg[14] ,
    \goreg_bm.dout_i_reg[22] ,
    \goreg_bm.dout_i_reg[22]_0 ,
    \goreg_bm.dout_i_reg[23] ,
    \goreg_bm.dout_i_reg[23]_0 );
  output \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;
  output [17:0]D;
  input \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_1 ;
  input clk;
  input [7:0]DOBDO;
  input [7:0]\goreg_bm.dout_i_reg[13] ;
  input [0:0]DOPBDOP;
  input [0:0]\goreg_bm.dout_i_reg[14] ;
  input [7:0]\goreg_bm.dout_i_reg[22] ;
  input [7:0]\goreg_bm.dout_i_reg[22]_0 ;
  input [0:0]\goreg_bm.dout_i_reg[23] ;
  input [0:0]\goreg_bm.dout_i_reg[23]_0 ;

  wire [17:0]D;
  wire [7:0]DOBDO;
  wire [0:0]DOPBDOP;
  wire clk;
  wire [7:0]\goreg_bm.dout_i_reg[13] ;
  wire [0:0]\goreg_bm.dout_i_reg[14] ;
  wire [7:0]\goreg_bm.dout_i_reg[22] ;
  wire [7:0]\goreg_bm.dout_i_reg[22]_0 ;
  wire [0:0]\goreg_bm.dout_i_reg[23] ;
  wire [0:0]\goreg_bm.dout_i_reg[23]_0 ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_1 ;

  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[10]_i_1 
       (.I0(DOBDO[4]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [4]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[11]_i_1 
       (.I0(DOBDO[5]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[12]_i_1 
       (.I0(DOBDO[6]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[13]_i_1 
       (.I0(DOBDO[7]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [7]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[14]_i_1 
       (.I0(DOPBDOP),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[14] ),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[15]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [0]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [0]),
        .O(D[9]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[16]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [1]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [1]),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[17]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [2]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [2]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[18]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [3]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [3]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[19]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [4]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [4]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[20]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [5]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [5]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[21]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [6]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [6]),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[22]_i_1 
       (.I0(\goreg_bm.dout_i_reg[22] [7]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[22]_0 [7]),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[23]_i_2 
       (.I0(\goreg_bm.dout_i_reg[23] ),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[23]_0 ),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[6]_i_1 
       (.I0(DOBDO[0]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[7]_i_1 
       (.I0(DOBDO[1]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[8]_i_1 
       (.I0(DOBDO[2]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \goreg_bm.dout_i[9]_i_1 
       (.I0(DOBDO[3]),
        .I1(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .I2(\goreg_bm.dout_i_reg[13] [3]),
        .O(D[3]));
  FDRE #(
    .INIT(1'b0)) 
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_1 ),
        .Q(\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_24x8192_blk_mem_gen_prim_width
   (D,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ,
    din,
    ram_wr_en);
  output [1:0]D;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ;
  input [1:0]din;
  input ram_wr_en;

  wire [1:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ;
  wire [12:0]Q;
  wire clk;
  wire [1:0]din;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_2 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_24x8192_blk_mem_gen_prim_width__parameterized0
   (D,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en);
  output [3:0]D;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [3:0]din;
  input ram_wr_en;

  wire [3:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [12:0]Q;
  wire clk;
  wire [3:0]din;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_24x8192_blk_mem_gen_prim_width__parameterized1
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en);
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  output [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [8:0]din;
  input ram_wr_en;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_24x8192_blk_mem_gen_prim_width__parameterized2
   (DOBDO,
    DOPBDOP,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din,
    ram_wr_en);
  output [7:0]DOBDO;
  output [0:0]DOPBDOP;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [8:0]din;
  input ram_wr_en;

  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [7:0]DOBDO;
  wire [0:0]DOPBDOP;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized2 \prim_noinit.ram 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .DOBDO(DOBDO),
        .DOPBDOP(DOPBDOP),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_24x8192_blk_mem_gen_prim_width__parameterized3
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en);
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  output [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [8:0]din;
  input ram_wr_en;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized3 \prim_noinit.ram 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_24x8192_blk_mem_gen_prim_width__parameterized4
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en);
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  output [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [8:0]din;
  input ram_wr_en;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized4 \prim_noinit.ram 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_24x8192_blk_mem_gen_prim_wrapper
   (D,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_2 ,
    din,
    ram_wr_en);
  output [1:0]D;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_2 ;
  input [1:0]din;
  input ram_wr_en;

  wire [1:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_2 ;
  wire [12:0]Q;
  wire clk;
  wire [1:0]din;
  wire ram_wr_en;
  wire srst;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:2]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(2),
    .READ_WIDTH_B(2),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(2),
    .WRITE_WIDTH_B(2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR({Q,1'b0}),
        .ADDRBWRADDR({\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_2 ,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:2],D}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_0 ),
        .ENBWREN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_1 ),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized0
   (D,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,
    din,
    ram_wr_en);
  output [3:0]D;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  input [3:0]din;
  input ram_wr_en;

  wire [3:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  wire [12:0]Q;
  wire clk;
  wire [3:0]din;
  wire ram_wr_en;
  wire srst;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:4],D}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .ENBWREN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({ram_wr_en,ram_wr_en,ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized1
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,
    din,
    ram_wr_en);
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  output [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  input [8:0]din;
  input ram_wr_en;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,din[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:8],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 }),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:1],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena_array),
        .ENBWREN(enb_array),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({ram_wr_en,ram_wr_en,ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized2
   (DOBDO,
    DOPBDOP,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    din,
    ram_wr_en);
  output [7:0]DOBDO;
  output [0:0]DOPBDOP;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input [8:0]din;
  input ram_wr_en;

  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [7:0]DOBDO;
  wire [0:0]DOPBDOP;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,din[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:8],DOBDO}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:1],DOPBDOP}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena_array),
        .ENBWREN(enb_array),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({ram_wr_en,ram_wr_en,ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized3
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,
    din,
    ram_wr_en);
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  output [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  input [8:0]din;
  input ram_wr_en;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,din[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:8],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 }),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:1],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena_array),
        .ENBWREN(enb_array),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({ram_wr_en,ram_wr_en,ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_24x8192_blk_mem_gen_prim_wrapper__parameterized4
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    clk,
    ena_array,
    enb_array,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,
    din,
    ram_wr_en);
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  output [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input clk;
  input [0:0]ena_array;
  input [0:0]enb_array;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  input [8:0]din;
  input ram_wr_en;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ;
  wire [11:0]Q;
  wire clk;
  wire [8:0]din;
  wire [0:0]ena_array;
  wire [0:0]enb_array;
  wire ram_wr_en;
  wire srst;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_2 ,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,din[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:8],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 }),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:1],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena_array),
        .ENBWREN(enb_array),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({ram_wr_en,ram_wr_en,ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module fifo_24x8192_blk_mem_gen_top
   (D,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en,
    ena_array,
    enb_array,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 );
  output [23:0]D;
  output \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [23:0]din;
  input ram_wr_en;
  input [1:0]ena_array;
  input [1:0]enb_array;
  input \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;

  wire [23:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [12:0]Q;
  wire clk;
  wire [23:0]din;
  wire [1:0]ena_array;
  wire [1:0]enb_array;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module fifo_24x8192_blk_mem_gen_v8_4_4
   (D,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en,
    ena_array,
    enb_array,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 );
  output [23:0]D;
  output \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [23:0]din;
  input ram_wr_en;
  input [1:0]ena_array;
  input [1:0]enb_array;
  input \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;

  wire [23:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [12:0]Q;
  wire clk;
  wire [23:0]din;
  wire [1:0]ena_array;
  wire [1:0]enb_array;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module fifo_24x8192_blk_mem_gen_v8_4_4_synth
   (D,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en,
    ena_array,
    enb_array,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 );
  output [23:0]D;
  output \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [23:0]din;
  input ram_wr_en;
  input [1:0]ena_array;
  input [1:0]enb_array;
  input \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;

  wire [23:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [12:0]Q;
  wire clk;
  wire [23:0]din;
  wire [1:0]ena_array;
  wire [1:0]enb_array;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ;
  wire ram_wr_en;
  wire srst;

  fifo_24x8192_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 ),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_24x8192_compare
   (comp0,
    \gmux.gm[6].gms.ms_0 ,
    v1_reg);
  output comp0;
  input [5:0]\gmux.gm[6].gms.ms_0 ;
  input [0:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire carrynet_5;
  wire comp0;
  wire [5:0]\gmux.gm[6].gms.ms_0 ;
  wire [0:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(\gmux.gm[6].gms.ms_0 [3:0]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3],comp0,carrynet_5,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3],1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3],v1_reg,\gmux.gm[6].gms.ms_0 [5:4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_24x8192_compare_0
   (ram_full_comb,
    \gmux.gm[6].gms.ms_0 ,
    v1_reg_0,
    wr_en,
    comp0,
    ram_rd_en,
    out);
  output ram_full_comb;
  input [5:0]\gmux.gm[6].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input wr_en;
  input comp0;
  input ram_rd_en;
  input out;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire carrynet_5;
  wire comp0;
  wire comp1;
  wire [5:0]\gmux.gm[6].gms.ms_0 ;
  wire out;
  wire ram_full_comb;
  wire ram_rd_en;
  wire [0:0]v1_reg_0;
  wire wr_en;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(\gmux.gm[6].gms.ms_0 [3:0]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3],comp1,carrynet_5,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3],1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3],v1_reg_0,\gmux.gm[6].gms.ms_0 [5:4]}));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    ram_full_fb_i_i_1
       (.I0(wr_en),
        .I1(comp1),
        .I2(comp0),
        .I3(ram_rd_en),
        .I4(out),
        .O(ram_full_comb));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_24x8192_compare_1
   (comp0,
    \gmux.gm[1].gms.ms_0 ,
    \gmux.gm[2].gms.ms_0 ,
    \gmux.gm[3].gms.ms_0 ,
    \gmux.gm[4].gms.ms_0 ,
    \gmux.gm[5].gms.ms_0 ,
    \gmux.gm[6].gms.ms_0 ,
    ram_empty_i_reg);
  output comp0;
  input \gmux.gm[1].gms.ms_0 ;
  input \gmux.gm[2].gms.ms_0 ;
  input \gmux.gm[3].gms.ms_0 ;
  input \gmux.gm[4].gms.ms_0 ;
  input \gmux.gm[5].gms.ms_0 ;
  input \gmux.gm[6].gms.ms_0 ;
  input ram_empty_i_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire carrynet_5;
  wire comp0;
  wire \gmux.gm[1].gms.ms_0 ;
  wire \gmux.gm[2].gms.ms_0 ;
  wire \gmux.gm[3].gms.ms_0 ;
  wire \gmux.gm[4].gms.ms_0 ;
  wire \gmux.gm[5].gms.ms_0 ;
  wire \gmux.gm[6].gms.ms_0 ;
  wire ram_empty_i_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S({\gmux.gm[4].gms.ms_0 ,\gmux.gm[3].gms.ms_0 ,\gmux.gm[2].gms.ms_0 ,\gmux.gm[1].gms.ms_0 }));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3],comp0,carrynet_5,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3],1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3],ram_empty_i_reg,\gmux.gm[6].gms.ms_0 ,\gmux.gm[5].gms.ms_0 }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_24x8192_compare_2
   (ram_full_fb_i_reg,
    v1_reg,
    ram_empty_i_reg,
    E,
    comp0,
    ram_empty_i_reg_0,
    wr_en,
    out);
  output ram_full_fb_i_reg;
  input [5:0]v1_reg;
  input [0:0]ram_empty_i_reg;
  input [0:0]E;
  input comp0;
  input ram_empty_i_reg_0;
  input wr_en;
  input out;

  wire [0:0]E;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire carrynet_5;
  wire comp0;
  wire comp1;
  wire out;
  wire [0:0]ram_empty_i_reg;
  wire ram_empty_i_reg_0;
  wire ram_full_fb_i_reg;
  wire [5:0]v1_reg;
  wire wr_en;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:3]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3],comp1,carrynet_5,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3],1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3],ram_empty_i_reg,v1_reg[5:4]}));
  LUT6 #(
    .INIT(64'hFF0FFFFF88008888)) 
    ram_empty_fb_i_i_1
       (.I0(E),
        .I1(comp1),
        .I2(comp0),
        .I3(ram_empty_i_reg_0),
        .I4(wr_en),
        .I5(out),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "dc_ss_fwft" *) 
module fifo_24x8192_dc_ss_fwft
   (data_count,
    srst,
    cntr_en,
    O,
    clk,
    \count_reg[7] ,
    \count_reg[11] ,
    \count_reg[13] );
  output [13:0]data_count;
  input srst;
  input cntr_en;
  input [3:0]O;
  input clk;
  input [3:0]\count_reg[7] ;
  input [3:0]\count_reg[11] ;
  input [1:0]\count_reg[13] ;

  wire [3:0]O;
  wire clk;
  wire cntr_en;
  wire [3:0]\count_reg[11] ;
  wire [1:0]\count_reg[13] ;
  wire [3:0]\count_reg[7] ;
  wire [13:0]data_count;
  wire srst;

  fifo_24x8192_updn_cntr dc
       (.O(O),
        .clk(clk),
        .cntr_en(cntr_en),
        .\count_reg[11]_0 (\count_reg[11] ),
        .\count_reg[13]_0 (\count_reg[13] ),
        .\count_reg[7]_0 (\count_reg[7] ),
        .data_count(data_count),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module fifo_24x8192_fifo_generator_ramfifo
   (empty,
    full,
    dout,
    data_count,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [23:0]dout;
  output [13:0]data_count;
  input clk;
  input srst;
  input [23:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [13:0]data_count;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire [1:0]\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ena_array ;
  wire [1:0]\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/enb_array ;
  wire \gntv_or_sync_fifo.gl0.rd_n_46 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_47 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_0 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_32 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_33 ;
  wire \gr1.gdcf.dc/cntr_en ;
  wire [6:6]\grss.rsts/c2/v1_reg ;
  wire [5:0]\gwss.wsts/c0/v1_reg ;
  wire [5:0]\gwss.wsts/c1/v1_reg ;
  wire ram_rd_en;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_en;
  wire [12:0]rd_pntr;
  wire [12:12]rd_pntr_plus1;
  wire sel_pipe;
  wire srst;
  wire valid_fwft;
  wire wr_en;
  wire [12:0]wr_pntr;
  wire [11:0]wr_pntr_plus1;

  fifo_24x8192_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.D(rd_pntr_plus1),
        .E(ram_regout_en),
        .Q(rd_pntr),
        .clk(clk),
        .cntr_en(\gr1.gdcf.dc/cntr_en ),
        .data_count(data_count),
        .empty(empty),
        .enb_array(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/enb_array ),
        .\gc0.count_d1_reg[12] (\gntv_or_sync_fifo.gl0.rd_n_47 ),
        .\gmux.gm[5].gms.ms (wr_pntr[11:0]),
        .\gmux.gm[5].gms.ms_0 (wr_pntr_plus1),
        .out(valid_fwft),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_46 ),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gl0.wr_n_33 ),
        .ram_empty_i_reg_0(\grss.rsts/c2/v1_reg ),
        .ram_empty_i_reg_1(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .ram_rd_en(ram_rd_en),
        .rd_en(rd_en),
        .sel_pipe(sel_pipe),
        .srst(srst),
        .v1_reg(\gwss.wsts/c0/v1_reg ),
        .v1_reg_0(\gwss.wsts/c1/v1_reg ),
        .wr_en(wr_en));
  fifo_24x8192_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.D(wr_pntr_plus1),
        .Q(wr_pntr),
        .clk(clk),
        .cntr_en(\gr1.gdcf.dc/cntr_en ),
        .\count_reg[13] (valid_fwft),
        .ena_array(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ena_array ),
        .full(full),
        .\gcc0.gc0.count_d1_reg[12] (\grss.rsts/c2/v1_reg ),
        .\gcc0.gc0.count_d1_reg[12]_0 (\gntv_or_sync_fifo.gl0.wr_n_33 ),
        .\gmux.gm[6].gms.ms (\gwss.wsts/c0/v1_reg ),
        .\gmux.gm[6].gms.ms_0 (\gwss.wsts/c1/v1_reg ),
        .\gmux.gm[6].gms.ms_1 (rd_pntr[12]),
        .\gmux.gm[6].gms.ms_2 (rd_pntr_plus1),
        .out(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .ram_rd_en(ram_rd_en),
        .ram_wr_en(ram_wr_en),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en),
        .wr_en_0(\gntv_or_sync_fifo.gl0.wr_n_32 ));
  fifo_24x8192_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\gntv_or_sync_fifo.gl0.wr_n_32 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\gntv_or_sync_fifo.gl0.rd_n_46 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (rd_pntr),
        .E(ram_regout_en),
        .Q(wr_pntr),
        .clk(clk),
        .din(din),
        .dout(dout),
        .ena_array(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ena_array ),
        .enb_array(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/enb_array ),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] (\gntv_or_sync_fifo.gl0.rd_n_47 ),
        .ram_wr_en(ram_wr_en),
        .sel_pipe(sel_pipe),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module fifo_24x8192_fifo_generator_top
   (empty,
    full,
    dout,
    data_count,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [23:0]dout;
  output [13:0]data_count;
  input clk;
  input srst;
  input [23:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [13:0]data_count;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_24x8192_fifo_generator_ramfifo \grf.rf 
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "14" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "24" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "24" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "1" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "8kx4" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "8191" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "8190" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "14" *) 
(* C_RD_DEPTH = "8192" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "13" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "14" *) 
(* C_WR_DEPTH = "8192" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "13" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module fifo_24x8192_fifo_generator_v13_2_5
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [23:0]din;
  input wr_en;
  input rd_en;
  input [12:0]prog_empty_thresh;
  input [12:0]prog_empty_thresh_assert;
  input [12:0]prog_empty_thresh_negate;
  input [12:0]prog_full_thresh;
  input [12:0]prog_full_thresh_assert;
  input [12:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [23:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [13:0]data_count;
  output [13:0]rd_data_count;
  output [13:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [13:0]data_count;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[13] = \<const0> ;
  assign rd_data_count[12] = \<const0> ;
  assign rd_data_count[11] = \<const0> ;
  assign rd_data_count[10] = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[13] = \<const0> ;
  assign wr_data_count[12] = \<const0> ;
  assign wr_data_count[11] = \<const0> ;
  assign wr_data_count[10] = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  fifo_24x8192_fifo_generator_v13_2_5_synth inst_fifo_gen
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module fifo_24x8192_fifo_generator_v13_2_5_synth
   (empty,
    full,
    dout,
    data_count,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [23:0]dout;
  output [13:0]data_count;
  input clk;
  input srst;
  input [23:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [13:0]data_count;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_24x8192_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module fifo_24x8192_memory
   (sel_pipe,
    dout,
    clk,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ,
    din,
    ram_wr_en,
    ena_array,
    enb_array,
    \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ,
    E);
  output sel_pipe;
  output [23:0]dout;
  input clk;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input srst;
  input [12:0]Q;
  input [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  input [23:0]din;
  input ram_wr_en;
  input [1:0]ena_array;
  input [1:0]enb_array;
  input \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  input [0:0]E;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire [12:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ;
  wire [0:0]E;
  wire [12:0]Q;
  wire clk;
  wire [23:0]din;
  wire [23:0]dout;
  wire [23:6]dout_mem;
  wire [1:0]ena_array;
  wire [1:0]enb_array;
  wire \gbm.gbmg.gbmga.ngecc.bmg_n_18 ;
  wire \gbm.gbmg.gbmga.ngecc.bmg_n_19 ;
  wire \gbm.gbmg.gbmga.ngecc.bmg_n_20 ;
  wire \gbm.gbmg.gbmga.ngecc.bmg_n_21 ;
  wire [1:0]\inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ram_doutb ;
  wire \no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ;
  wire ram_wr_en;
  wire sel_pipe;
  wire srst;

  fifo_24x8192_blk_mem_gen_v8_4_4 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D({dout_mem,\gbm.gbmg.gbmga.ngecc.bmg_n_18 ,\gbm.gbmg.gbmga.ngecc.bmg_n_19 ,\gbm.gbmg.gbmga.ngecc.bmg_n_20 ,\gbm.gbmg.gbmga.ngecc.bmg_n_21 ,\inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ram_doutb }),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_1 ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ena_array(ena_array),
        .enb_array(enb_array),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] (sel_pipe),
        .\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0]_0 (\no_softecc_sel_reg.ce_pri.sel_pipe_reg[0] ),
        .ram_wr_en(ram_wr_en),
        .srst(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ram_doutb [0]),
        .Q(dout[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[10]),
        .Q(dout[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[11]),
        .Q(dout[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[12]),
        .Q(dout[12]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[13]),
        .Q(dout[13]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[14]),
        .Q(dout[14]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[15]),
        .Q(dout[15]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[16]),
        .Q(dout[16]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[17]),
        .Q(dout[17]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[18]),
        .Q(dout[18]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[19]),
        .Q(dout[19]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ram_doutb [1]),
        .Q(dout[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[20]),
        .Q(dout[20]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[21]),
        .Q(dout[21]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[22]),
        .Q(dout[22]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[23]),
        .Q(dout[23]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\gbm.gbmg.gbmga.ngecc.bmg_n_21 ),
        .Q(dout[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\gbm.gbmg.gbmga.ngecc.bmg_n_20 ),
        .Q(dout[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\gbm.gbmg.gbmga.ngecc.bmg_n_19 ),
        .Q(dout[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\gbm.gbmg.gbmga.ngecc.bmg_n_18 ),
        .Q(dout[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[6]),
        .Q(dout[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[7]),
        .Q(dout[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[8]),
        .Q(dout[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(clk),
        .CE(E),
        .D(dout_mem[9]),
        .Q(dout[9]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module fifo_24x8192_rd_bin_cntr
   (D,
    v1_reg,
    Q,
    v1_reg_1,
    v1_reg_0,
    \gc0.count_d1_reg[0]_0 ,
    \gc0.count_d1_reg[2]_0 ,
    \gc0.count_d1_reg[4]_0 ,
    \gc0.count_d1_reg[6]_0 ,
    \gc0.count_d1_reg[8]_0 ,
    \gc0.count_d1_reg[10]_0 ,
    \gc0.count_d1_reg[12]_0 ,
    srst,
    E,
    clk,
    \gmux.gm[5].gms.ms ,
    \gmux.gm[5].gms.ms_0 ,
    out,
    sel_pipe);
  output [0:0]D;
  output [5:0]v1_reg;
  output [12:0]Q;
  output [5:0]v1_reg_1;
  output [5:0]v1_reg_0;
  output \gc0.count_d1_reg[0]_0 ;
  output \gc0.count_d1_reg[2]_0 ;
  output \gc0.count_d1_reg[4]_0 ;
  output \gc0.count_d1_reg[6]_0 ;
  output \gc0.count_d1_reg[8]_0 ;
  output \gc0.count_d1_reg[10]_0 ;
  output \gc0.count_d1_reg[12]_0 ;
  input srst;
  input [0:0]E;
  input clk;
  input [11:0]\gmux.gm[5].gms.ms ;
  input [11:0]\gmux.gm[5].gms.ms_0 ;
  input out;
  input sel_pipe;

  wire [0:0]D;
  wire [0:0]E;
  wire [12:0]Q;
  wire clk;
  wire \gc0.count[0]_i_2_n_0 ;
  wire \gc0.count_d1_reg[0]_0 ;
  wire \gc0.count_d1_reg[10]_0 ;
  wire \gc0.count_d1_reg[12]_0 ;
  wire \gc0.count_d1_reg[2]_0 ;
  wire \gc0.count_d1_reg[4]_0 ;
  wire \gc0.count_d1_reg[6]_0 ;
  wire \gc0.count_d1_reg[8]_0 ;
  wire \gc0.count_reg[0]_i_1_n_0 ;
  wire \gc0.count_reg[0]_i_1_n_1 ;
  wire \gc0.count_reg[0]_i_1_n_2 ;
  wire \gc0.count_reg[0]_i_1_n_3 ;
  wire \gc0.count_reg[0]_i_1_n_4 ;
  wire \gc0.count_reg[0]_i_1_n_5 ;
  wire \gc0.count_reg[0]_i_1_n_6 ;
  wire \gc0.count_reg[0]_i_1_n_7 ;
  wire \gc0.count_reg[12]_i_1_n_7 ;
  wire \gc0.count_reg[4]_i_1_n_0 ;
  wire \gc0.count_reg[4]_i_1_n_1 ;
  wire \gc0.count_reg[4]_i_1_n_2 ;
  wire \gc0.count_reg[4]_i_1_n_3 ;
  wire \gc0.count_reg[4]_i_1_n_4 ;
  wire \gc0.count_reg[4]_i_1_n_5 ;
  wire \gc0.count_reg[4]_i_1_n_6 ;
  wire \gc0.count_reg[4]_i_1_n_7 ;
  wire \gc0.count_reg[8]_i_1_n_0 ;
  wire \gc0.count_reg[8]_i_1_n_1 ;
  wire \gc0.count_reg[8]_i_1_n_2 ;
  wire \gc0.count_reg[8]_i_1_n_3 ;
  wire \gc0.count_reg[8]_i_1_n_4 ;
  wire \gc0.count_reg[8]_i_1_n_5 ;
  wire \gc0.count_reg[8]_i_1_n_6 ;
  wire \gc0.count_reg[8]_i_1_n_7 ;
  wire [11:0]\gmux.gm[5].gms.ms ;
  wire [11:0]\gmux.gm[5].gms.ms_0 ;
  wire out;
  wire [11:0]rd_pntr_plus1;
  wire sel_pipe;
  wire srst;
  wire [5:0]v1_reg;
  wire [5:0]v1_reg_0;
  wire [5:0]v1_reg_1;
  wire [3:0]\NLW_gc0.count_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gc0.count_reg[12]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_2 
       (.I0(rd_pntr_plus1[0]),
        .O(\gc0.count[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[10] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[10]),
        .Q(Q[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[11] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[11]),
        .Q(Q[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[12] 
       (.C(clk),
        .CE(E),
        .D(D),
        .Q(Q[12]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[7]),
        .Q(Q[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[8]),
        .Q(Q[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[9] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[9]),
        .Q(Q[9]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_7 ),
        .Q(rd_pntr_plus1[0]),
        .S(srst));
  CARRY4 \gc0.count_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\gc0.count_reg[0]_i_1_n_0 ,\gc0.count_reg[0]_i_1_n_1 ,\gc0.count_reg[0]_i_1_n_2 ,\gc0.count_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\gc0.count_reg[0]_i_1_n_4 ,\gc0.count_reg[0]_i_1_n_5 ,\gc0.count_reg[0]_i_1_n_6 ,\gc0.count_reg[0]_i_1_n_7 }),
        .S({rd_pntr_plus1[3:1],\gc0.count[0]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_5 ),
        .Q(rd_pntr_plus1[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_4 ),
        .Q(rd_pntr_plus1[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[12] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[12]_i_1_n_7 ),
        .Q(D),
        .R(srst));
  CARRY4 \gc0.count_reg[12]_i_1 
       (.CI(\gc0.count_reg[8]_i_1_n_0 ),
        .CO(\NLW_gc0.count_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gc0.count_reg[12]_i_1_O_UNCONNECTED [3:1],\gc0.count_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,D}));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_6 ),
        .Q(rd_pntr_plus1[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_5 ),
        .Q(rd_pntr_plus1[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_4 ),
        .Q(rd_pntr_plus1[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_7 ),
        .Q(rd_pntr_plus1[4]),
        .R(srst));
  CARRY4 \gc0.count_reg[4]_i_1 
       (.CI(\gc0.count_reg[0]_i_1_n_0 ),
        .CO({\gc0.count_reg[4]_i_1_n_0 ,\gc0.count_reg[4]_i_1_n_1 ,\gc0.count_reg[4]_i_1_n_2 ,\gc0.count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gc0.count_reg[4]_i_1_n_4 ,\gc0.count_reg[4]_i_1_n_5 ,\gc0.count_reg[4]_i_1_n_6 ,\gc0.count_reg[4]_i_1_n_7 }),
        .S(rd_pntr_plus1[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_6 ),
        .Q(rd_pntr_plus1[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_5 ),
        .Q(rd_pntr_plus1[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_4 ),
        .Q(rd_pntr_plus1[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_7 ),
        .Q(rd_pntr_plus1[8]),
        .R(srst));
  CARRY4 \gc0.count_reg[8]_i_1 
       (.CI(\gc0.count_reg[4]_i_1_n_0 ),
        .CO({\gc0.count_reg[8]_i_1_n_0 ,\gc0.count_reg[8]_i_1_n_1 ,\gc0.count_reg[8]_i_1_n_2 ,\gc0.count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gc0.count_reg[8]_i_1_n_4 ,\gc0.count_reg[8]_i_1_n_5 ,\gc0.count_reg[8]_i_1_n_6 ,\gc0.count_reg[8]_i_1_n_7 }),
        .S(rd_pntr_plus1[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_6 ),
        .Q(rd_pntr_plus1[9]),
        .R(srst));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(Q[0]),
        .I1(\gmux.gm[5].gms.ms [0]),
        .I2(Q[1]),
        .I3(\gmux.gm[5].gms.ms [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(rd_pntr_plus1[0]),
        .I1(\gmux.gm[5].gms.ms [0]),
        .I2(rd_pntr_plus1[1]),
        .I3(\gmux.gm[5].gms.ms [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(Q[0]),
        .I1(\gmux.gm[5].gms.ms_0 [0]),
        .I2(Q[1]),
        .I3(\gmux.gm[5].gms.ms_0 [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(Q[0]),
        .I1(\gmux.gm[5].gms.ms [0]),
        .I2(Q[1]),
        .I3(\gmux.gm[5].gms.ms [1]),
        .O(\gc0.count_d1_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(Q[2]),
        .I1(\gmux.gm[5].gms.ms [2]),
        .I2(Q[3]),
        .I3(\gmux.gm[5].gms.ms [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[2]),
        .I1(\gmux.gm[5].gms.ms [2]),
        .I2(rd_pntr_plus1[3]),
        .I3(\gmux.gm[5].gms.ms [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(Q[2]),
        .I1(\gmux.gm[5].gms.ms_0 [2]),
        .I2(Q[3]),
        .I3(\gmux.gm[5].gms.ms_0 [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(Q[2]),
        .I1(\gmux.gm[5].gms.ms [2]),
        .I2(Q[3]),
        .I3(\gmux.gm[5].gms.ms [3]),
        .O(\gc0.count_d1_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(Q[4]),
        .I1(\gmux.gm[5].gms.ms [4]),
        .I2(Q[5]),
        .I3(\gmux.gm[5].gms.ms [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[4]),
        .I1(\gmux.gm[5].gms.ms [4]),
        .I2(rd_pntr_plus1[5]),
        .I3(\gmux.gm[5].gms.ms [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(Q[4]),
        .I1(\gmux.gm[5].gms.ms_0 [4]),
        .I2(Q[5]),
        .I3(\gmux.gm[5].gms.ms_0 [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(Q[4]),
        .I1(\gmux.gm[5].gms.ms [4]),
        .I2(Q[5]),
        .I3(\gmux.gm[5].gms.ms [5]),
        .O(\gc0.count_d1_reg[4]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(Q[6]),
        .I1(\gmux.gm[5].gms.ms [6]),
        .I2(Q[7]),
        .I3(\gmux.gm[5].gms.ms [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gmux.gm[5].gms.ms [6]),
        .I2(rd_pntr_plus1[7]),
        .I3(\gmux.gm[5].gms.ms [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(Q[6]),
        .I1(\gmux.gm[5].gms.ms_0 [6]),
        .I2(Q[7]),
        .I3(\gmux.gm[5].gms.ms_0 [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(Q[6]),
        .I1(\gmux.gm[5].gms.ms [6]),
        .I2(Q[7]),
        .I3(\gmux.gm[5].gms.ms [7]),
        .O(\gc0.count_d1_reg[6]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(Q[8]),
        .I1(\gmux.gm[5].gms.ms [8]),
        .I2(Q[9]),
        .I3(\gmux.gm[5].gms.ms [9]),
        .O(v1_reg[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[8]),
        .I1(\gmux.gm[5].gms.ms [8]),
        .I2(rd_pntr_plus1[9]),
        .I3(\gmux.gm[5].gms.ms [9]),
        .O(v1_reg_1[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(Q[8]),
        .I1(\gmux.gm[5].gms.ms_0 [8]),
        .I2(Q[9]),
        .I3(\gmux.gm[5].gms.ms_0 [9]),
        .O(v1_reg_0[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(Q[8]),
        .I1(\gmux.gm[5].gms.ms [8]),
        .I2(Q[9]),
        .I3(\gmux.gm[5].gms.ms [9]),
        .O(\gc0.count_d1_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1 
       (.I0(Q[10]),
        .I1(\gmux.gm[5].gms.ms [10]),
        .I2(Q[11]),
        .I3(\gmux.gm[5].gms.ms [11]),
        .O(v1_reg[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[10]),
        .I1(\gmux.gm[5].gms.ms [10]),
        .I2(rd_pntr_plus1[11]),
        .I3(\gmux.gm[5].gms.ms [11]),
        .O(v1_reg_1[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1__1 
       (.I0(Q[10]),
        .I1(\gmux.gm[5].gms.ms_0 [10]),
        .I2(Q[11]),
        .I3(\gmux.gm[5].gms.ms_0 [11]),
        .O(v1_reg_0[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1__2 
       (.I0(Q[10]),
        .I1(\gmux.gm[5].gms.ms [10]),
        .I2(Q[11]),
        .I3(\gmux.gm[5].gms.ms [11]),
        .O(\gc0.count_d1_reg[10]_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \no_softecc_sel_reg.ce_pri.sel_pipe[0]_i_1 
       (.I0(Q[12]),
        .I1(out),
        .I2(E),
        .I3(srst),
        .I4(sel_pipe),
        .O(\gc0.count_d1_reg[12]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module fifo_24x8192_rd_fwft
   (empty,
    out,
    enb_array,
    E,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    O,
    \count_reg[7] ,
    \count_reg[11] ,
    \count_reg[12] ,
    srst,
    clk,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    data_count,
    Q);
  output empty;
  output out;
  output [1:0]enb_array;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  output ram_empty_fb_i_reg_0;
  output [3:0]O;
  output [3:0]\count_reg[7] ;
  output [3:0]\count_reg[11] ;
  output [1:0]\count_reg[12] ;
  input srst;
  input clk;
  input rd_en;
  input \gpregsm1.curr_fwft_state_reg[1]_0 ;
  input [13:0]data_count;
  input [0:0]Q;

  wire [0:0]E;
  wire [3:0]O;
  wire [0:0]Q;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  wire clk;
  wire \count[11]_i_2_n_0 ;
  wire \count[11]_i_3_n_0 ;
  wire \count[11]_i_4_n_0 ;
  wire \count[11]_i_5_n_0 ;
  wire \count[13]_i_3_n_0 ;
  wire \count[13]_i_4_n_0 ;
  wire \count[3]_i_2_n_0 ;
  wire \count[3]_i_3_n_0 ;
  wire \count[3]_i_4_n_0 ;
  wire \count[3]_i_5_n_0 ;
  wire \count[3]_i_6_n_0 ;
  wire \count[7]_i_2_n_0 ;
  wire \count[7]_i_3_n_0 ;
  wire \count[7]_i_4_n_0 ;
  wire \count[7]_i_5_n_0 ;
  wire [3:0]\count_reg[11] ;
  wire \count_reg[11]_i_1_n_0 ;
  wire \count_reg[11]_i_1_n_1 ;
  wire \count_reg[11]_i_1_n_2 ;
  wire \count_reg[11]_i_1_n_3 ;
  wire [1:0]\count_reg[12] ;
  wire \count_reg[13]_i_2_n_3 ;
  wire \count_reg[3]_i_1_n_0 ;
  wire \count_reg[3]_i_1_n_1 ;
  wire \count_reg[3]_i_1_n_2 ;
  wire \count_reg[3]_i_1_n_3 ;
  wire [3:0]\count_reg[7] ;
  wire \count_reg[7]_i_1_n_0 ;
  wire \count_reg[7]_i_1_n_1 ;
  wire \count_reg[7]_i_1_n_2 ;
  wire \count_reg[7]_i_1_n_3 ;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  wire [13:0]data_count;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire [1:0]enb_array;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [1:0]next_fwft_state;
  wire [0:0]ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire rd_en;
  wire srst;
  (* DONT_TOUCH *) wire user_valid;
  wire [3:1]\NLW_count_reg[13]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_count_reg[13]_i_2_O_UNCONNECTED ;

  assign empty = empty_fwft_i;
  assign out = user_valid;
  LUT5 #(
    .INIT(32'hFFFF4555)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_i_2 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .I4(srst),
        .O(ram_empty_fb_i_reg_0));
  LUT6 #(
    .INIT(64'h88888888AAAA8AAA)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2 
       (.I0(Q),
        .I1(srst),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(rd_en),
        .I5(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .O(enb_array[1]));
  LUT6 #(
    .INIT(64'h00000000AAAAFFBF)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2__0 
       (.I0(srst),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(rd_en),
        .I4(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I5(Q),
        .O(enb_array[0]));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(srst));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_2 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[11]),
        .O(\count[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[10]),
        .O(\count[11]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[9]),
        .O(\count[11]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_5 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[8]),
        .O(\count[11]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[13]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[13]),
        .O(\count[13]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[13]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[12]),
        .O(\count[13]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \count[3]_i_2 
       (.I0(user_valid),
        .I1(rd_en),
        .O(\count[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[3]),
        .O(\count[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[2]),
        .O(\count[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_5 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[1]),
        .O(\count[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_6 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[0]),
        .O(\count[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_2 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[7]),
        .O(\count[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[6]),
        .O(\count[7]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[5]),
        .O(\count[7]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_5 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[4]),
        .O(\count[7]_i_5_n_0 ));
  CARRY4 \count_reg[11]_i_1 
       (.CI(\count_reg[7]_i_1_n_0 ),
        .CO({\count_reg[11]_i_1_n_0 ,\count_reg[11]_i_1_n_1 ,\count_reg[11]_i_1_n_2 ,\count_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(data_count[11:8]),
        .O(\count_reg[11] ),
        .S({\count[11]_i_2_n_0 ,\count[11]_i_3_n_0 ,\count[11]_i_4_n_0 ,\count[11]_i_5_n_0 }));
  CARRY4 \count_reg[13]_i_2 
       (.CI(\count_reg[11]_i_1_n_0 ),
        .CO({\NLW_count_reg[13]_i_2_CO_UNCONNECTED [3:1],\count_reg[13]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,data_count[12]}),
        .O({\NLW_count_reg[13]_i_2_O_UNCONNECTED [3:2],\count_reg[12] }),
        .S({1'b0,1'b0,\count[13]_i_3_n_0 ,\count[13]_i_4_n_0 }));
  CARRY4 \count_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\count_reg[3]_i_1_n_0 ,\count_reg[3]_i_1_n_1 ,\count_reg[3]_i_1_n_2 ,\count_reg[3]_i_1_n_3 }),
        .CYINIT(\count[3]_i_2_n_0 ),
        .DI(data_count[3:0]),
        .O(O),
        .S({\count[3]_i_3_n_0 ,\count[3]_i_4_n_0 ,\count[3]_i_5_n_0 ,\count[3]_i_6_n_0 }));
  CARRY4 \count_reg[7]_i_1 
       (.CI(\count_reg[3]_i_1_n_0 ),
        .CO({\count_reg[7]_i_1_n_0 ,\count_reg[7]_i_1_n_1 ,\count_reg[7]_i_1_n_2 ,\count_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(data_count[7:4]),
        .O(\count_reg[7] ),
        .S({\count[7]_i_2_n_0 ,\count[7]_i_3_n_0 ,\count[7]_i_4_n_0 ,\count[7]_i_5_n_0 }));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(srst));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(srst));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[12]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[23]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module fifo_24x8192_rd_logic
   (empty,
    out,
    D,
    ram_rd_en,
    data_count,
    v1_reg,
    Q,
    enb_array,
    E,
    v1_reg_0,
    ram_empty_fb_i_reg,
    \gc0.count_d1_reg[12] ,
    ram_empty_i_reg,
    ram_empty_i_reg_0,
    srst,
    clk,
    cntr_en,
    rd_en,
    ram_empty_i_reg_1,
    wr_en,
    \gmux.gm[5].gms.ms ,
    \gmux.gm[5].gms.ms_0 ,
    sel_pipe);
  output empty;
  output out;
  output [0:0]D;
  output ram_rd_en;
  output [13:0]data_count;
  output [5:0]v1_reg;
  output [12:0]Q;
  output [1:0]enb_array;
  output [0:0]E;
  output [5:0]v1_reg_0;
  output ram_empty_fb_i_reg;
  output \gc0.count_d1_reg[12] ;
  input ram_empty_i_reg;
  input [0:0]ram_empty_i_reg_0;
  input srst;
  input clk;
  input cntr_en;
  input rd_en;
  input ram_empty_i_reg_1;
  input wr_en;
  input [11:0]\gmux.gm[5].gms.ms ;
  input [11:0]\gmux.gm[5].gms.ms_0 ;
  input sel_pipe;

  wire [0:0]D;
  wire [0:0]E;
  wire [12:0]Q;
  wire [5:0]\c2/v1_reg ;
  wire clk;
  wire cntr_en;
  wire [13:0]data_count;
  wire empty;
  wire empty_fb_i;
  wire [1:0]enb_array;
  wire \gc0.count_d1_reg[12] ;
  wire [11:0]\gmux.gm[5].gms.ms ;
  wire [11:0]\gmux.gm[5].gms.ms_0 ;
  wire \gr1.gr1_int.rfwft_n_10 ;
  wire \gr1.gr1_int.rfwft_n_11 ;
  wire \gr1.gr1_int.rfwft_n_12 ;
  wire \gr1.gr1_int.rfwft_n_13 ;
  wire \gr1.gr1_int.rfwft_n_14 ;
  wire \gr1.gr1_int.rfwft_n_15 ;
  wire \gr1.gr1_int.rfwft_n_16 ;
  wire \gr1.gr1_int.rfwft_n_17 ;
  wire \gr1.gr1_int.rfwft_n_18 ;
  wire \gr1.gr1_int.rfwft_n_19 ;
  wire \gr1.gr1_int.rfwft_n_20 ;
  wire \gr1.gr1_int.rfwft_n_7 ;
  wire \gr1.gr1_int.rfwft_n_8 ;
  wire \gr1.gr1_int.rfwft_n_9 ;
  wire out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_i_reg;
  wire [0:0]ram_empty_i_reg_0;
  wire ram_empty_i_reg_1;
  wire ram_rd_en;
  wire rd_en;
  wire rpntr_n_32;
  wire rpntr_n_33;
  wire rpntr_n_34;
  wire rpntr_n_35;
  wire rpntr_n_36;
  wire rpntr_n_37;
  wire sel_pipe;
  wire srst;
  wire [5:0]v1_reg;
  wire [5:0]v1_reg_0;
  wire wr_en;

  fifo_24x8192_dc_ss_fwft \gr1.gdcf.dc 
       (.O({\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 ,\gr1.gr1_int.rfwft_n_9 ,\gr1.gr1_int.rfwft_n_10 }),
        .clk(clk),
        .cntr_en(cntr_en),
        .\count_reg[11] ({\gr1.gr1_int.rfwft_n_15 ,\gr1.gr1_int.rfwft_n_16 ,\gr1.gr1_int.rfwft_n_17 ,\gr1.gr1_int.rfwft_n_18 }),
        .\count_reg[13] ({\gr1.gr1_int.rfwft_n_19 ,\gr1.gr1_int.rfwft_n_20 }),
        .\count_reg[7] ({\gr1.gr1_int.rfwft_n_11 ,\gr1.gr1_int.rfwft_n_12 ,\gr1.gr1_int.rfwft_n_13 ,\gr1.gr1_int.rfwft_n_14 }),
        .data_count(data_count),
        .srst(srst));
  fifo_24x8192_rd_fwft \gr1.gr1_int.rfwft 
       (.E(E),
        .O({\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 ,\gr1.gr1_int.rfwft_n_9 ,\gr1.gr1_int.rfwft_n_10 }),
        .Q(Q[12]),
        .clk(clk),
        .\count_reg[11] ({\gr1.gr1_int.rfwft_n_15 ,\gr1.gr1_int.rfwft_n_16 ,\gr1.gr1_int.rfwft_n_17 ,\gr1.gr1_int.rfwft_n_18 }),
        .\count_reg[12] ({\gr1.gr1_int.rfwft_n_19 ,\gr1.gr1_int.rfwft_n_20 }),
        .\count_reg[7] ({\gr1.gr1_int.rfwft_n_11 ,\gr1.gr1_int.rfwft_n_12 ,\gr1.gr1_int.rfwft_n_13 ,\gr1.gr1_int.rfwft_n_14 }),
        .data_count(data_count),
        .empty(empty),
        .enb_array(enb_array),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (empty_fb_i),
        .out(out),
        .ram_empty_fb_i_reg(ram_rd_en),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .rd_en(rd_en),
        .srst(srst));
  fifo_24x8192_rd_status_flags_ss \grss.rsts 
       (.E(ram_rd_en),
        .clk(clk),
        .\gmux.gm[1].gms.ms (rpntr_n_32),
        .\gmux.gm[2].gms.ms (rpntr_n_33),
        .\gmux.gm[3].gms.ms (rpntr_n_34),
        .\gmux.gm[4].gms.ms (rpntr_n_35),
        .\gmux.gm[5].gms.ms (rpntr_n_36),
        .\gmux.gm[6].gms.ms (rpntr_n_37),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(ram_empty_i_reg),
        .ram_empty_i_reg_1(ram_empty_i_reg_0),
        .ram_empty_i_reg_2(ram_empty_i_reg_1),
        .srst(srst),
        .v1_reg(\c2/v1_reg ),
        .wr_en(wr_en));
  fifo_24x8192_rd_bin_cntr rpntr
       (.D(D),
        .E(ram_rd_en),
        .Q(Q),
        .clk(clk),
        .\gc0.count_d1_reg[0]_0 (rpntr_n_32),
        .\gc0.count_d1_reg[10]_0 (rpntr_n_37),
        .\gc0.count_d1_reg[12]_0 (\gc0.count_d1_reg[12] ),
        .\gc0.count_d1_reg[2]_0 (rpntr_n_33),
        .\gc0.count_d1_reg[4]_0 (rpntr_n_34),
        .\gc0.count_d1_reg[6]_0 (rpntr_n_35),
        .\gc0.count_d1_reg[8]_0 (rpntr_n_36),
        .\gmux.gm[5].gms.ms (\gmux.gm[5].gms.ms ),
        .\gmux.gm[5].gms.ms_0 (\gmux.gm[5].gms.ms_0 ),
        .out(empty_fb_i),
        .sel_pipe(sel_pipe),
        .srst(srst),
        .v1_reg(v1_reg),
        .v1_reg_0(v1_reg_0),
        .v1_reg_1(\c2/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module fifo_24x8192_rd_status_flags_ss
   (out,
    \gmux.gm[1].gms.ms ,
    \gmux.gm[2].gms.ms ,
    \gmux.gm[3].gms.ms ,
    \gmux.gm[4].gms.ms ,
    \gmux.gm[5].gms.ms ,
    \gmux.gm[6].gms.ms ,
    ram_empty_i_reg_0,
    v1_reg,
    ram_empty_i_reg_1,
    srst,
    clk,
    E,
    ram_empty_i_reg_2,
    wr_en);
  output out;
  input \gmux.gm[1].gms.ms ;
  input \gmux.gm[2].gms.ms ;
  input \gmux.gm[3].gms.ms ;
  input \gmux.gm[4].gms.ms ;
  input \gmux.gm[5].gms.ms ;
  input \gmux.gm[6].gms.ms ;
  input ram_empty_i_reg_0;
  input [5:0]v1_reg;
  input [0:0]ram_empty_i_reg_1;
  input srst;
  input clk;
  input [0:0]E;
  input ram_empty_i_reg_2;
  input wr_en;

  wire [0:0]E;
  wire c2_n_0;
  wire clk;
  wire comp0;
  wire \gmux.gm[1].gms.ms ;
  wire \gmux.gm[2].gms.ms ;
  wire \gmux.gm[3].gms.ms ;
  wire \gmux.gm[4].gms.ms ;
  wire \gmux.gm[5].gms.ms ;
  wire \gmux.gm[6].gms.ms ;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire [0:0]ram_empty_i_reg_1;
  wire ram_empty_i_reg_2;
  wire srst;
  wire [5:0]v1_reg;
  wire wr_en;

  assign out = ram_empty_fb_i;
  fifo_24x8192_compare_1 c1
       (.comp0(comp0),
        .\gmux.gm[1].gms.ms_0 (\gmux.gm[1].gms.ms ),
        .\gmux.gm[2].gms.ms_0 (\gmux.gm[2].gms.ms ),
        .\gmux.gm[3].gms.ms_0 (\gmux.gm[3].gms.ms ),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms ),
        .\gmux.gm[5].gms.ms_0 (\gmux.gm[5].gms.ms ),
        .\gmux.gm[6].gms.ms_0 (\gmux.gm[6].gms.ms ),
        .ram_empty_i_reg(ram_empty_i_reg_0));
  fifo_24x8192_compare_2 c2
       (.E(E),
        .comp0(comp0),
        .out(ram_empty_fb_i),
        .ram_empty_i_reg(ram_empty_i_reg_1),
        .ram_empty_i_reg_0(ram_empty_i_reg_2),
        .ram_full_fb_i_reg(c2_n_0),
        .v1_reg(v1_reg),
        .wr_en(wr_en));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_empty_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_empty_i),
        .S(srst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module fifo_24x8192_reset_blk_ramfifo
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  LUT1 #(
    .INIT(2'h2)) 
    rstblki_0
       (.I0(1'b0),
        .O(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "updn_cntr" *) 
module fifo_24x8192_updn_cntr
   (data_count,
    srst,
    cntr_en,
    O,
    clk,
    \count_reg[7]_0 ,
    \count_reg[11]_0 ,
    \count_reg[13]_0 );
  output [13:0]data_count;
  input srst;
  input cntr_en;
  input [3:0]O;
  input clk;
  input [3:0]\count_reg[7]_0 ;
  input [3:0]\count_reg[11]_0 ;
  input [1:0]\count_reg[13]_0 ;

  wire [3:0]O;
  wire clk;
  wire cntr_en;
  wire [3:0]\count_reg[11]_0 ;
  wire [1:0]\count_reg[13]_0 ;
  wire [3:0]\count_reg[7]_0 ;
  wire [13:0]data_count;
  wire srst;

  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[0]),
        .Q(data_count[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [2]),
        .Q(data_count[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [3]),
        .Q(data_count[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[13]_0 [0]),
        .Q(data_count[12]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[13] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[13]_0 [1]),
        .Q(data_count[13]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[1]),
        .Q(data_count[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[2]),
        .Q(data_count[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[3]),
        .Q(data_count[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [0]),
        .Q(data_count[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [1]),
        .Q(data_count[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [2]),
        .Q(data_count[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [3]),
        .Q(data_count[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [0]),
        .Q(data_count[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [1]),
        .Q(data_count[9]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module fifo_24x8192_wr_bin_cntr
   (D,
    ena_array,
    Q,
    v1_reg,
    \gcc0.gc0.count_d1_reg[12]_0 ,
    v1_reg_0,
    \gcc0.gc0.count_d1_reg[12]_1 ,
    srst,
    E,
    clk,
    out,
    wr_en,
    \gmux.gm[6].gms.ms ,
    \gmux.gm[6].gms.ms_0 );
  output [11:0]D;
  output [0:0]ena_array;
  output [12:0]Q;
  output [0:0]v1_reg;
  output [0:0]\gcc0.gc0.count_d1_reg[12]_0 ;
  output [0:0]v1_reg_0;
  output \gcc0.gc0.count_d1_reg[12]_1 ;
  input srst;
  input [0:0]E;
  input clk;
  input out;
  input wr_en;
  input [0:0]\gmux.gm[6].gms.ms ;
  input [0:0]\gmux.gm[6].gms.ms_0 ;

  wire [11:0]D;
  wire [0:0]E;
  wire [12:0]Q;
  wire clk;
  wire [0:0]ena_array;
  wire \gcc0.gc0.count[0]_i_2_n_0 ;
  wire [0:0]\gcc0.gc0.count_d1_reg[12]_0 ;
  wire \gcc0.gc0.count_d1_reg[12]_1 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_0 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_1 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_2 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_3 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_4 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_5 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_6 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_7 ;
  wire \gcc0.gc0.count_reg[12]_i_1_n_7 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_0 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_1 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_2 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_3 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_4 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_5 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_6 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_7 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_0 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_1 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_2 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_3 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_4 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_5 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_6 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_7 ;
  wire [0:0]\gmux.gm[6].gms.ms ;
  wire [0:0]\gmux.gm[6].gms.ms_0 ;
  wire out;
  wire srst;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_en;
  wire [12:12]wr_pntr_plus1;
  wire [3:0]\NLW_gcc0.gc0.count_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gcc0.gc0.count_reg[12]_i_1_O_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h20)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1__0 
       (.I0(Q[12]),
        .I1(out),
        .I2(wr_en),
        .O(ena_array));
  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc0.count[0]_i_2 
       (.I0(D[0]),
        .O(\gcc0.gc0.count[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(D[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[10] 
       (.C(clk),
        .CE(E),
        .D(D[10]),
        .Q(Q[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[11] 
       (.C(clk),
        .CE(E),
        .D(D[11]),
        .Q(Q[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[12] 
       (.C(clk),
        .CE(E),
        .D(wr_pntr_plus1),
        .Q(Q[12]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(D[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(D[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(D[3]),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(D[4]),
        .Q(Q[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[5] 
       (.C(clk),
        .CE(E),
        .D(D[5]),
        .Q(Q[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[6] 
       (.C(clk),
        .CE(E),
        .D(D[6]),
        .Q(Q[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[7] 
       (.C(clk),
        .CE(E),
        .D(D[7]),
        .Q(Q[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[8] 
       (.C(clk),
        .CE(E),
        .D(D[8]),
        .Q(Q[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[9] 
       (.C(clk),
        .CE(E),
        .D(D[9]),
        .Q(Q[9]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_7 ),
        .Q(D[0]),
        .S(srst));
  CARRY4 \gcc0.gc0.count_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\gcc0.gc0.count_reg[0]_i_1_n_0 ,\gcc0.gc0.count_reg[0]_i_1_n_1 ,\gcc0.gc0.count_reg[0]_i_1_n_2 ,\gcc0.gc0.count_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\gcc0.gc0.count_reg[0]_i_1_n_4 ,\gcc0.gc0.count_reg[0]_i_1_n_5 ,\gcc0.gc0.count_reg[0]_i_1_n_6 ,\gcc0.gc0.count_reg[0]_i_1_n_7 }),
        .S({D[3:1],\gcc0.gc0.count[0]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_5 ),
        .Q(D[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_4 ),
        .Q(D[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[12] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[12]_i_1_n_7 ),
        .Q(wr_pntr_plus1),
        .R(srst));
  CARRY4 \gcc0.gc0.count_reg[12]_i_1 
       (.CI(\gcc0.gc0.count_reg[8]_i_1_n_0 ),
        .CO(\NLW_gcc0.gc0.count_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gcc0.gc0.count_reg[12]_i_1_O_UNCONNECTED [3:1],\gcc0.gc0.count_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,wr_pntr_plus1}));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_6 ),
        .Q(D[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_5 ),
        .Q(D[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_4 ),
        .Q(D[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_7 ),
        .Q(D[4]),
        .R(srst));
  CARRY4 \gcc0.gc0.count_reg[4]_i_1 
       (.CI(\gcc0.gc0.count_reg[0]_i_1_n_0 ),
        .CO({\gcc0.gc0.count_reg[4]_i_1_n_0 ,\gcc0.gc0.count_reg[4]_i_1_n_1 ,\gcc0.gc0.count_reg[4]_i_1_n_2 ,\gcc0.gc0.count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gcc0.gc0.count_reg[4]_i_1_n_4 ,\gcc0.gc0.count_reg[4]_i_1_n_5 ,\gcc0.gc0.count_reg[4]_i_1_n_6 ,\gcc0.gc0.count_reg[4]_i_1_n_7 }),
        .S(D[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_6 ),
        .Q(D[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_5 ),
        .Q(D[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_4 ),
        .Q(D[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_7 ),
        .Q(D[8]),
        .R(srst));
  CARRY4 \gcc0.gc0.count_reg[8]_i_1 
       (.CI(\gcc0.gc0.count_reg[4]_i_1_n_0 ),
        .CO({\gcc0.gc0.count_reg[8]_i_1_n_0 ,\gcc0.gc0.count_reg[8]_i_1_n_1 ,\gcc0.gc0.count_reg[8]_i_1_n_2 ,\gcc0.gc0.count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gcc0.gc0.count_reg[8]_i_1_n_4 ,\gcc0.gc0.count_reg[8]_i_1_n_5 ,\gcc0.gc0.count_reg[8]_i_1_n_6 ,\gcc0.gc0.count_reg[8]_i_1_n_7 }),
        .S(D[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_6 ),
        .Q(D[9]),
        .R(srst));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[6].gms.ms_i_1 
       (.I0(Q[12]),
        .I1(\gmux.gm[6].gms.ms ),
        .O(v1_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[6].gms.ms_i_1__0 
       (.I0(Q[12]),
        .I1(\gmux.gm[6].gms.ms_0 ),
        .O(\gcc0.gc0.count_d1_reg[12]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[6].gms.ms_i_1__1 
       (.I0(wr_pntr_plus1),
        .I1(\gmux.gm[6].gms.ms ),
        .O(v1_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[6].gms.ms_i_1__2 
       (.I0(Q[12]),
        .I1(\gmux.gm[6].gms.ms ),
        .O(\gcc0.gc0.count_d1_reg[12]_1 ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module fifo_24x8192_wr_logic
   (out,
    full,
    D,
    ram_wr_en,
    cntr_en,
    ena_array,
    Q,
    \gcc0.gc0.count_d1_reg[12] ,
    wr_en_0,
    \gcc0.gc0.count_d1_reg[12]_0 ,
    \gmux.gm[6].gms.ms ,
    \gmux.gm[6].gms.ms_0 ,
    srst,
    clk,
    wr_en,
    \count_reg[13] ,
    rd_en,
    ram_rd_en,
    \gmux.gm[6].gms.ms_1 ,
    \gmux.gm[6].gms.ms_2 );
  output out;
  output full;
  output [11:0]D;
  output ram_wr_en;
  output cntr_en;
  output [1:0]ena_array;
  output [12:0]Q;
  output [0:0]\gcc0.gc0.count_d1_reg[12] ;
  output wr_en_0;
  output \gcc0.gc0.count_d1_reg[12]_0 ;
  input [5:0]\gmux.gm[6].gms.ms ;
  input [5:0]\gmux.gm[6].gms.ms_0 ;
  input srst;
  input clk;
  input wr_en;
  input \count_reg[13] ;
  input rd_en;
  input ram_rd_en;
  input [0:0]\gmux.gm[6].gms.ms_1 ;
  input [0:0]\gmux.gm[6].gms.ms_2 ;

  wire [11:0]D;
  wire [12:0]Q;
  wire [6:6]\c0/v1_reg ;
  wire [6:6]\c1/v1_reg ;
  wire clk;
  wire cntr_en;
  wire \count_reg[13] ;
  wire [1:0]ena_array;
  wire full;
  wire [0:0]\gcc0.gc0.count_d1_reg[12] ;
  wire \gcc0.gc0.count_d1_reg[12]_0 ;
  wire [5:0]\gmux.gm[6].gms.ms ;
  wire [5:0]\gmux.gm[6].gms.ms_0 ;
  wire [0:0]\gmux.gm[6].gms.ms_1 ;
  wire [0:0]\gmux.gm[6].gms.ms_2 ;
  wire out;
  wire ram_rd_en;
  wire ram_wr_en;
  wire rd_en;
  wire srst;
  wire wr_en;
  wire wr_en_0;

  fifo_24x8192_wr_status_flags_ss \gwss.wsts 
       (.E(ram_wr_en),
        .Q(Q[12]),
        .clk(clk),
        .cntr_en(cntr_en),
        .\count_reg[13] (\count_reg[13] ),
        .ena_array(ena_array[0]),
        .full(full),
        .\gmux.gm[6].gms.ms (\gmux.gm[6].gms.ms ),
        .\gmux.gm[6].gms.ms_0 (\gmux.gm[6].gms.ms_0 ),
        .out(out),
        .ram_rd_en(ram_rd_en),
        .rd_en(rd_en),
        .srst(srst),
        .v1_reg(\c0/v1_reg ),
        .v1_reg_0(\c1/v1_reg ),
        .wr_en(wr_en),
        .wr_en_0(wr_en_0));
  fifo_24x8192_wr_bin_cntr wpntr
       (.D(D),
        .E(ram_wr_en),
        .Q(Q),
        .clk(clk),
        .ena_array(ena_array[1]),
        .\gcc0.gc0.count_d1_reg[12]_0 (\gcc0.gc0.count_d1_reg[12] ),
        .\gcc0.gc0.count_d1_reg[12]_1 (\gcc0.gc0.count_d1_reg[12]_0 ),
        .\gmux.gm[6].gms.ms (\gmux.gm[6].gms.ms_1 ),
        .\gmux.gm[6].gms.ms_0 (\gmux.gm[6].gms.ms_2 ),
        .out(out),
        .srst(srst),
        .v1_reg(\c0/v1_reg ),
        .v1_reg_0(\c1/v1_reg ),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module fifo_24x8192_wr_status_flags_ss
   (out,
    full,
    cntr_en,
    ena_array,
    E,
    wr_en_0,
    \gmux.gm[6].gms.ms ,
    v1_reg,
    \gmux.gm[6].gms.ms_0 ,
    v1_reg_0,
    srst,
    clk,
    wr_en,
    \count_reg[13] ,
    rd_en,
    ram_rd_en,
    Q);
  output out;
  output full;
  output cntr_en;
  output [0:0]ena_array;
  output [0:0]E;
  output wr_en_0;
  input [5:0]\gmux.gm[6].gms.ms ;
  input [0:0]v1_reg;
  input [5:0]\gmux.gm[6].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input srst;
  input clk;
  input wr_en;
  input \count_reg[13] ;
  input rd_en;
  input ram_rd_en;
  input [0:0]Q;

  wire [0:0]E;
  wire [0:0]Q;
  wire clk;
  wire cntr_en;
  wire comp0;
  wire \count_reg[13] ;
  wire [0:0]ena_array;
  wire [5:0]\gmux.gm[6].gms.ms ;
  wire [5:0]\gmux.gm[6].gms.ms_0 ;
  (* DONT_TOUCH *) wire ram_afull_fb;
  (* DONT_TOUCH *) wire ram_afull_i;
  wire ram_full_comb;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_rd_en;
  wire rd_en;
  wire srst;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_en;
  wire wr_en_0;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(wr_en_0));
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_i_3 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT3 #(
    .INIT(8'h04)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1 
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .O(ena_array));
  fifo_24x8192_compare c0
       (.comp0(comp0),
        .\gmux.gm[6].gms.ms_0 (\gmux.gm[6].gms.ms ),
        .v1_reg(v1_reg));
  fifo_24x8192_compare_0 c1
       (.comp0(comp0),
        .\gmux.gm[6].gms.ms_0 (\gmux.gm[6].gms.ms_0 ),
        .out(ram_full_fb_i),
        .ram_full_comb(ram_full_comb),
        .ram_rd_en(ram_rd_en),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hB444)) 
    \count[13]_i_1 
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(\count_reg[13] ),
        .I3(rd_en),
        .O(cntr_en));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ram_afull_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(ram_afull_fb));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_fb_i),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_i),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module fifo_25x32_blk_mem_gen_generic_cstr
   (D,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [24:0]D;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [24:0]din;

  wire [24:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_25x32_blk_mem_gen_prim_width
   (D,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [24:0]D;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [24:0]din;

  wire [24:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_25x32_blk_mem_gen_prim_wrapper
   (D,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    Q,
    din);
  output [24:0]D;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [4:0]Q;
  input [24:0]din;

  wire [24:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire srst;
  wire tmp_ram_rd_en;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,1'b0,1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,din[12:7],1'b0,din[6:0]}),
        .DIBDI({1'b0,1'b0,din[24:19],1'b0,1'b0,din[18:13]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ,D[12:7],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ,D[6:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ,D[24:19],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ,D[18:13]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 }),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(srst),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module fifo_25x32_blk_mem_gen_top
   (D,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [24:0]D;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [24:0]din;

  wire [24:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module fifo_25x32_blk_mem_gen_v8_4_4
   (D,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [24:0]D;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [24:0]din;

  wire [24:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module fifo_25x32_blk_mem_gen_v8_4_4_synth
   (D,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [24:0]D;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [24:0]din;

  wire [24:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "dc_ss_fwft" *) 
module fifo_25x32_dc_ss_fwft
   (Q,
    rd_en,
    out,
    ram_rd_en_temp__0,
    srst,
    \count_reg[5] ,
    clk);
  output [5:0]Q;
  input rd_en;
  input out;
  input ram_rd_en_temp__0;
  input srst;
  input [0:0]\count_reg[5] ;
  input clk;

  wire [5:0]Q;
  wire clk;
  wire [0:0]\count_reg[5] ;
  wire out;
  wire ram_rd_en_temp__0;
  wire rd_en;
  wire srst;

  fifo_25x32_updn_cntr dc
       (.Q(Q),
        .clk(clk),
        .\count_reg[5]_0 (\count_reg[5] ),
        .out(out),
        .ram_rd_en_temp__0(ram_rd_en_temp__0),
        .rd_en(rd_en),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module fifo_25x32_fifo_generator_ramfifo
   (data_count,
    empty,
    full,
    dout,
    rd_en,
    clk,
    srst,
    din,
    wr_en);
  output [5:0]data_count;
  output empty;
  output full;
  output [24:0]dout;
  input rd_en;
  input clk;
  input srst;
  input [24:0]din;
  input wr_en;

  wire clk;
  wire [5:0]data_count;
  wire [24:0]din;
  wire [24:0]dout;
  wire empty;
  wire empty_fb_i;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_2 ;
  wire \gr1.gdcf.dc/cntr_en ;
  wire ram_rd_en;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_en;
  wire [4:0]rd_pntr;
  wire [4:0]rd_pntr_plus1;
  wire srst;
  wire tmp_ram_rd_en;
  wire valid_fwft;
  wire wr_en;
  wire [4:0]wr_pntr;

  fifo_25x32_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.E(ram_regout_en),
        .Q(data_count),
        .clk(clk),
        .\count_reg[5] (\gr1.gdcf.dc/cntr_en ),
        .empty(empty),
        .\gc0.count_d1_reg[4] (rd_pntr),
        .\gc0.count_reg[4] (rd_pntr_plus1),
        .\gpregsm1.user_valid_reg (valid_fwft),
        .out(empty_fb_i),
        .ram_empty_fb_i_reg(ram_rd_en),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  fifo_25x32_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(ram_wr_en),
        .Q(wr_pntr),
        .clk(clk),
        .\count_reg[5] (valid_fwft),
        .full(full),
        .out(empty_fb_i),
        .ram_empty_fb_i_i_2(rd_pntr_plus1),
        .ram_empty_i_reg(ram_rd_en),
        .ram_full_fb_i_i_3(rd_pntr),
        .ram_full_fb_i_reg(\gr1.gdcf.dc/cntr_en ),
        .ram_full_fb_i_reg_0(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
  fifo_25x32_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (rd_pntr),
        .E(ram_wr_en),
        .Q(wr_pntr),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[24]_0 (ram_regout_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module fifo_25x32_fifo_generator_top
   (DATA_COUNT,
    empty,
    full,
    dout,
    rd_en,
    clk,
    srst,
    din,
    wr_en);
  output [5:0]DATA_COUNT;
  output empty;
  output full;
  output [24:0]dout;
  input rd_en;
  input clk;
  input srst;
  input [24:0]din;
  input wr_en;

  wire [5:0]DATA_COUNT;
  wire clk;
  wire [24:0]din;
  wire [24:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_25x32_fifo_generator_ramfifo \grf.rf 
       (.clk(clk),
        .data_count(DATA_COUNT),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "6" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "25" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "25" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "1" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "6" *) 
(* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "5" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "6" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module fifo_25x32_fifo_generator_v13_2_5
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [24:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [24:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [5:0]data_count;
  output [5:0]rd_data_count;
  output [5:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [5:0]data_count;
  wire [24:0]din;
  wire [24:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  fifo_25x32_fifo_generator_v13_2_5_synth inst_fifo_gen
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module fifo_25x32_fifo_generator_v13_2_5_synth
   (data_count,
    empty,
    full,
    dout,
    rd_en,
    clk,
    srst,
    din,
    wr_en);
  output [5:0]data_count;
  output empty;
  output full;
  output [24:0]dout;
  input rd_en;
  input clk;
  input srst;
  input [24:0]din;
  input wr_en;

  wire clk;
  wire [5:0]data_count;
  wire [24:0]din;
  wire [24:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_25x32_fifo_generator_top \gconvfifo.rf 
       (.DATA_COUNT(data_count),
        .clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module fifo_25x32_memory
   (dout,
    clk,
    tmp_ram_rd_en,
    E,
    srst,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din,
    \goreg_bm.dout_i_reg[24]_0 );
  output [24:0]dout;
  input clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input srst;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [24:0]din;
  input [0:0]\goreg_bm.dout_i_reg[24]_0 ;

  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [24:0]din;
  wire [24:0]dout;
  wire [24:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[24]_0 ;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_blk_mem_gen_v8_4_4 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .clk(clk),
        .din(din),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(clk),
        .CE(\goreg_bm.dout_i_reg[24]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module fifo_25x32_rd_bin_cntr
   (Q,
    \gc0.count_d1_reg[4]_0 ,
    srst,
    E,
    clk);
  output [4:0]Q;
  output [4:0]\gc0.count_d1_reg[4]_0 ;
  input srst;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [4:0]\gc0.count_d1_reg[4]_0 ;
  wire [4:0]plusOp;
  wire srst;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp[4]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[4]_0 [0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[4]_0 [1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[4]_0 [2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(Q[3]),
        .Q(\gc0.count_d1_reg[4]_0 [3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(Q[4]),
        .Q(\gc0.count_d1_reg[4]_0 [4]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp[0]),
        .Q(Q[0]),
        .S(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp[3]),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp[4]),
        .Q(Q[4]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module fifo_25x32_rd_fwft
   (empty,
    \gpregsm1.user_valid_reg_0 ,
    ram_rd_en_temp__0,
    tmp_ram_rd_en,
    E,
    ram_empty_fb_i_reg,
    srst,
    clk,
    rd_en,
    out);
  output empty;
  output \gpregsm1.user_valid_reg_0 ;
  output ram_rd_en_temp__0;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  input srst;
  input clk;
  input rd_en;
  input out;

  wire [0:0]E;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  wire clk;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire [1:0]next_fwft_state;
  wire out;
  wire [0:0]ram_empty_fb_i_reg;
  wire ram_rd_en_temp__0;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign \gpregsm1.user_valid_reg_0  = user_valid;
  LUT5 #(
    .INIT(32'hFFFF4555)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(out),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .I4(srst),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(out),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(srst));
  LUT2 #(
    .INIT(4'h8)) 
    \count[4]_i_2 
       (.I0(rd_en),
        .I1(user_valid),
        .O(ram_rd_en_temp__0));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(srst));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(srst));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[4]_i_1 
       (.I0(out),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[24]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module fifo_25x32_rd_logic
   (out,
    empty,
    \gpregsm1.user_valid_reg ,
    Q,
    \gc0.count_reg[4] ,
    tmp_ram_rd_en,
    E,
    ram_empty_fb_i_reg,
    \gc0.count_d1_reg[4] ,
    srst,
    clk,
    ram_empty_i_reg,
    rd_en,
    \count_reg[5] );
  output out;
  output empty;
  output \gpregsm1.user_valid_reg ;
  output [5:0]Q;
  output [4:0]\gc0.count_reg[4] ;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  output [4:0]\gc0.count_d1_reg[4] ;
  input srst;
  input clk;
  input ram_empty_i_reg;
  input rd_en;
  input [0:0]\count_reg[5] ;

  wire [0:0]E;
  wire [5:0]Q;
  wire clk;
  wire [0:0]\count_reg[5] ;
  wire empty;
  wire [4:0]\gc0.count_d1_reg[4] ;
  wire [4:0]\gc0.count_reg[4] ;
  wire \gpregsm1.user_valid_reg ;
  wire out;
  wire [0:0]ram_empty_fb_i_reg;
  wire ram_empty_i_reg;
  wire ram_rd_en_temp__0;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_25x32_dc_ss_fwft \gr1.gdcf.dc 
       (.Q(Q),
        .clk(clk),
        .\count_reg[5] (\count_reg[5] ),
        .out(\gpregsm1.user_valid_reg ),
        .ram_rd_en_temp__0(ram_rd_en_temp__0),
        .rd_en(rd_en),
        .srst(srst));
  fifo_25x32_rd_fwft \gr1.gr1_int.rfwft 
       (.E(E),
        .clk(clk),
        .empty(empty),
        .\gpregsm1.user_valid_reg_0 (\gpregsm1.user_valid_reg ),
        .out(out),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .ram_rd_en_temp__0(ram_rd_en_temp__0),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  fifo_25x32_rd_status_flags_ss \grss.rsts 
       (.clk(clk),
        .out(out),
        .ram_empty_i_reg_0(ram_empty_i_reg),
        .srst(srst));
  fifo_25x32_rd_bin_cntr rpntr
       (.E(ram_empty_fb_i_reg),
        .Q(\gc0.count_reg[4] ),
        .clk(clk),
        .\gc0.count_d1_reg[4]_0 (\gc0.count_d1_reg[4] ),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module fifo_25x32_rd_status_flags_ss
   (out,
    srst,
    ram_empty_i_reg_0,
    clk);
  output out;
  input srst;
  input ram_empty_i_reg_0;
  input clk;

  wire clk;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire srst;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .Q(ram_empty_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .Q(ram_empty_i),
        .S(srst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module fifo_25x32_reset_blk_ramfifo
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  LUT1 #(
    .INIT(2'h2)) 
    rstblki_0
       (.I0(1'b0),
        .O(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "updn_cntr" *) 
module fifo_25x32_updn_cntr
   (Q,
    rd_en,
    out,
    ram_rd_en_temp__0,
    srst,
    \count_reg[5]_0 ,
    clk);
  output [5:0]Q;
  input rd_en;
  input out;
  input ram_rd_en_temp__0;
  input srst;
  input [0:0]\count_reg[5]_0 ;
  input clk;

  wire [5:0]Q;
  wire clk;
  wire \count[0]_i_1_n_0 ;
  wire \count[1]_i_1_n_0 ;
  wire \count[2]_i_1_n_0 ;
  wire \count[3]_i_1_n_0 ;
  wire \count[4]_i_1_n_0 ;
  wire \count[5]_i_2_n_0 ;
  wire \count[5]_i_3_n_0 ;
  wire [0:0]\count_reg[5]_0 ;
  wire out;
  wire ram_rd_en_temp__0;
  wire rd_en;
  wire srst;

  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1 
       (.I0(Q[0]),
        .O(\count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h956A)) 
    \count[1]_i_1 
       (.I0(Q[0]),
        .I1(rd_en),
        .I2(out),
        .I3(Q[1]),
        .O(\count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hD52ABF40)) 
    \count[2]_i_1 
       (.I0(Q[0]),
        .I1(rd_en),
        .I2(out),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(\count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8FFF7000FFF70008)) 
    \count[3]_i_1 
       (.I0(out),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(\count[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FF0800FFEF0010)) 
    \count[4]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(ram_rd_en_temp__0),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[3]),
        .O(\count[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h78E1)) 
    \count[5]_i_2 
       (.I0(\count[5]_i_3_n_0 ),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(\count[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5DDD555555554555)) 
    \count[5]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(out),
        .I3(rd_en),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\count[5]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(\count_reg[5]_0 ),
        .D(\count[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(\count_reg[5]_0 ),
        .D(\count[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(\count_reg[5]_0 ),
        .D(\count[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(\count_reg[5]_0 ),
        .D(\count[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(\count_reg[5]_0 ),
        .D(\count[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(clk),
        .CE(\count_reg[5]_0 ),
        .D(\count[5]_i_2_n_0 ),
        .Q(Q[5]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module fifo_25x32_wr_bin_cntr
   (ram_full_comb,
    ram_full_fb_i_reg,
    Q,
    wr_en,
    ram_empty_i_reg,
    out,
    ram_empty_i_reg_0,
    ram_full_fb_i_i_3_0,
    ram_empty_fb_i_i_2_0,
    srst,
    E,
    clk);
  output ram_full_comb;
  output ram_full_fb_i_reg;
  output [4:0]Q;
  input wr_en;
  input [0:0]ram_empty_i_reg;
  input out;
  input ram_empty_i_reg_0;
  input [4:0]ram_full_fb_i_i_3_0;
  input [4:0]ram_empty_fb_i_i_2_0;
  input srst;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire \gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1 ;
  wire \gwss.wsts/comp0 ;
  wire \gwss.wsts/comp1 ;
  wire out;
  wire [4:0]plusOp__0;
  wire [4:0]ram_empty_fb_i_i_2_0;
  wire ram_empty_fb_i_i_3_n_0;
  wire [0:0]ram_empty_i_reg;
  wire ram_empty_i_reg_0;
  wire ram_full_comb;
  wire [4:0]ram_full_fb_i_i_3_0;
  wire ram_full_fb_i_i_4_n_0;
  wire ram_full_fb_i_i_5_n_0;
  wire ram_full_fb_i_reg;
  wire srst;
  wire wr_en;
  wire [4:0]wr_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc0.count[0]_i_1 
       (.I0(wr_pntr_plus1[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc0.count[1]_i_1 
       (.I0(wr_pntr_plus1[0]),
        .I1(wr_pntr_plus1[1]),
        .O(plusOp__0[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \gcc0.gc0.count[2]_i_1 
       (.I0(wr_pntr_plus1[0]),
        .I1(wr_pntr_plus1[1]),
        .I2(wr_pntr_plus1[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gcc0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus1[1]),
        .I1(wr_pntr_plus1[0]),
        .I2(wr_pntr_plus1[2]),
        .I3(wr_pntr_plus1[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gcc0.gc0.count[4]_i_1 
       (.I0(wr_pntr_plus1[2]),
        .I1(wr_pntr_plus1[0]),
        .I2(wr_pntr_plus1[1]),
        .I3(wr_pntr_plus1[3]),
        .I4(wr_pntr_plus1[4]),
        .O(plusOp__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(wr_pntr_plus1[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(wr_pntr_plus1[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(wr_pntr_plus1[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(wr_pntr_plus1[3]),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(wr_pntr_plus1[4]),
        .Q(Q[4]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(wr_pntr_plus1[0]),
        .S(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(wr_pntr_plus1[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus1[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus1[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus1[4]),
        .R(srst));
  LUT6 #(
    .INIT(64'hFF0FFFFF88008888)) 
    ram_empty_fb_i_i_1
       (.I0(ram_empty_i_reg),
        .I1(\gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1 ),
        .I2(\gwss.wsts/comp0 ),
        .I3(out),
        .I4(wr_en),
        .I5(ram_empty_i_reg_0),
        .O(ram_full_fb_i_reg));
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_empty_fb_i_i_2
       (.I0(Q[1]),
        .I1(ram_empty_fb_i_i_2_0[1]),
        .I2(Q[0]),
        .I3(ram_empty_fb_i_i_2_0[0]),
        .I4(ram_empty_fb_i_i_3_n_0),
        .O(\gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_fb_i_i_3
       (.I0(Q[3]),
        .I1(ram_empty_fb_i_i_2_0[3]),
        .I2(Q[2]),
        .I3(ram_empty_fb_i_i_2_0[2]),
        .I4(ram_empty_fb_i_i_2_0[4]),
        .I5(Q[4]),
        .O(ram_empty_fb_i_i_3_n_0));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    ram_full_fb_i_i_1
       (.I0(wr_en),
        .I1(\gwss.wsts/comp1 ),
        .I2(\gwss.wsts/comp0 ),
        .I3(ram_empty_i_reg),
        .I4(out),
        .O(ram_full_comb));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_full_fb_i_i_2
       (.I0(wr_pntr_plus1[1]),
        .I1(ram_full_fb_i_i_3_0[1]),
        .I2(wr_pntr_plus1[0]),
        .I3(ram_full_fb_i_i_3_0[0]),
        .I4(ram_full_fb_i_i_4_n_0),
        .O(\gwss.wsts/comp1 ));
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_full_fb_i_i_3
       (.I0(Q[1]),
        .I1(ram_full_fb_i_i_3_0[1]),
        .I2(Q[0]),
        .I3(ram_full_fb_i_i_3_0[0]),
        .I4(ram_full_fb_i_i_5_n_0),
        .O(\gwss.wsts/comp0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_fb_i_i_4
       (.I0(wr_pntr_plus1[3]),
        .I1(ram_full_fb_i_i_3_0[3]),
        .I2(wr_pntr_plus1[2]),
        .I3(ram_full_fb_i_i_3_0[2]),
        .I4(ram_full_fb_i_i_3_0[4]),
        .I5(wr_pntr_plus1[4]),
        .O(ram_full_fb_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_fb_i_i_5
       (.I0(Q[3]),
        .I1(ram_full_fb_i_i_3_0[3]),
        .I2(Q[2]),
        .I3(ram_full_fb_i_i_3_0[2]),
        .I4(ram_full_fb_i_i_3_0[4]),
        .I5(Q[4]),
        .O(ram_full_fb_i_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module fifo_25x32_wr_logic
   (full,
    ram_full_fb_i_reg,
    ram_full_fb_i_reg_0,
    E,
    Q,
    srst,
    clk,
    wr_en,
    \count_reg[5] ,
    rd_en,
    ram_empty_i_reg,
    out,
    ram_full_fb_i_i_3,
    ram_empty_fb_i_i_2);
  output full;
  output [0:0]ram_full_fb_i_reg;
  output ram_full_fb_i_reg_0;
  output [0:0]E;
  output [4:0]Q;
  input srst;
  input clk;
  input wr_en;
  input \count_reg[5] ;
  input rd_en;
  input [0:0]ram_empty_i_reg;
  input out;
  input [4:0]ram_full_fb_i_i_3;
  input [4:0]ram_empty_fb_i_i_2;

  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire \count_reg[5] ;
  wire full;
  wire \gwss.wsts_n_0 ;
  wire out;
  wire [4:0]ram_empty_fb_i_i_2;
  wire [0:0]ram_empty_i_reg;
  wire ram_full_comb;
  wire [4:0]ram_full_fb_i_i_3;
  wire [0:0]ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_25x32_wr_status_flags_ss \gwss.wsts 
       (.E(E),
        .clk(clk),
        .\count_reg[5] (\count_reg[5] ),
        .full(full),
        .out(\gwss.wsts_n_0 ),
        .ram_full_comb(ram_full_comb),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
  fifo_25x32_wr_bin_cntr wpntr
       (.E(E),
        .Q(Q),
        .clk(clk),
        .out(\gwss.wsts_n_0 ),
        .ram_empty_fb_i_i_2_0(ram_empty_fb_i_i_2),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_empty_i_reg_0(out),
        .ram_full_comb(ram_full_comb),
        .ram_full_fb_i_i_3_0(ram_full_fb_i_i_3),
        .ram_full_fb_i_reg(ram_full_fb_i_reg_0),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module fifo_25x32_wr_status_flags_ss
   (out,
    full,
    ram_full_fb_i_reg_0,
    E,
    srst,
    ram_full_comb,
    clk,
    wr_en,
    \count_reg[5] ,
    rd_en);
  output out;
  output full;
  output [0:0]ram_full_fb_i_reg_0;
  output [0:0]E;
  input srst;
  input ram_full_comb;
  input clk;
  input wr_en;
  input \count_reg[5] ;
  input rd_en;

  wire [0:0]E;
  wire clk;
  wire \count_reg[5] ;
  (* DONT_TOUCH *) wire ram_afull_fb;
  (* DONT_TOUCH *) wire ram_afull_i;
  wire ram_full_comb;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire [0:0]ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire rd_en;
  wire srst;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT4 #(
    .INIT(16'hB444)) 
    \count[5]_i_1 
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(\count_reg[5] ),
        .I3(rd_en),
        .O(ram_full_fb_i_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ram_afull_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(ram_afull_fb));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_fb_i),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_i),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module fifo_8x4096_blk_mem_gen_generic_cstr
   (D,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din);
  output [7:0]D;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [7:0]din;

  wire [7:0]D;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_8x4096_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_8x4096_blk_mem_gen_prim_width
   (D,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din);
  output [7:0]D;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [7:0]din;

  wire [7:0]D;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_8x4096_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_8x4096_blk_mem_gen_prim_wrapper
   (D,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,
    din);
  output [7:0]D;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  input [7:0]din;

  wire [7:0]D;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_75 ;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_0 ,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:8],D}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:1],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_75 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ram_wr_en),
        .ENBWREN(tmp_ram_rd_en),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(srst),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({ram_wr_en,ram_wr_en,ram_wr_en,ram_wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module fifo_8x4096_blk_mem_gen_top
   (D,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din);
  output [7:0]D;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [7:0]din;

  wire [7:0]D;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_8x4096_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module fifo_8x4096_blk_mem_gen_v8_4_4
   (D,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din);
  output [7:0]D;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [7:0]din;

  wire [7:0]D;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_8x4096_blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module fifo_8x4096_blk_mem_gen_v8_4_4_synth
   (D,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din);
  output [7:0]D;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [7:0]din;

  wire [7:0]D;
  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_8x4096_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_8x4096_compare
   (comp0,
    v1_reg);
  output comp0;
  input [5:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire comp0;
  wire [5:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp0,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],v1_reg[5:4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_8x4096_compare_0
   (ram_full_comb,
    v1_reg_0,
    wr_en,
    comp0,
    ram_rd_en,
    out);
  output ram_full_comb;
  input [5:0]v1_reg_0;
  input wr_en;
  input comp0;
  input ram_rd_en;
  input out;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire comp0;
  wire comp1;
  wire out;
  wire ram_full_comb;
  wire ram_rd_en;
  wire [5:0]v1_reg_0;
  wire wr_en;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp1,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],v1_reg_0[5:4]}));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    ram_full_fb_i_i_1
       (.I0(wr_en),
        .I1(comp1),
        .I2(comp0),
        .I3(ram_rd_en),
        .I4(out),
        .O(ram_full_comb));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_8x4096_compare_1
   (comp0,
    \gmux.gm[1].gms.ms_0 ,
    \gmux.gm[2].gms.ms_0 ,
    \gmux.gm[3].gms.ms_0 ,
    \gmux.gm[4].gms.ms_0 ,
    \gmux.gm[5].gms.ms_0 ,
    ram_empty_i_reg);
  output comp0;
  input \gmux.gm[1].gms.ms_0 ;
  input \gmux.gm[2].gms.ms_0 ;
  input \gmux.gm[3].gms.ms_0 ;
  input \gmux.gm[4].gms.ms_0 ;
  input \gmux.gm[5].gms.ms_0 ;
  input ram_empty_i_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire comp0;
  wire \gmux.gm[1].gms.ms_0 ;
  wire \gmux.gm[2].gms.ms_0 ;
  wire \gmux.gm[3].gms.ms_0 ;
  wire \gmux.gm[4].gms.ms_0 ;
  wire \gmux.gm[5].gms.ms_0 ;
  wire ram_empty_i_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S({\gmux.gm[4].gms.ms_0 ,\gmux.gm[3].gms.ms_0 ,\gmux.gm[2].gms.ms_0 ,\gmux.gm[1].gms.ms_0 }));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp0,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],ram_empty_i_reg,\gmux.gm[5].gms.ms_0 }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module fifo_8x4096_compare_2
   (ram_full_fb_i_reg,
    v1_reg,
    E,
    comp0,
    ram_empty_i_reg,
    wr_en,
    out);
  output ram_full_fb_i_reg;
  input [5:0]v1_reg;
  input [0:0]E;
  input comp0;
  input ram_empty_i_reg;
  input wr_en;
  input out;

  wire [0:0]E;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire carrynet_4;
  wire comp0;
  wire comp1;
  wire out;
  wire ram_empty_i_reg;
  wire ram_full_fb_i_reg;
  wire [5:0]v1_reg;
  wire wr_en;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp1,carrynet_4}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],v1_reg[5:4]}));
  LUT6 #(
    .INIT(64'hFF0FFFFF88008888)) 
    ram_empty_fb_i_i_1
       (.I0(E),
        .I1(comp1),
        .I2(comp0),
        .I3(ram_empty_i_reg),
        .I4(wr_en),
        .I5(out),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "dc_ss_fwft" *) 
module fifo_8x4096_dc_ss_fwft
   (data_count,
    srst,
    cntr_en,
    O,
    clk,
    \count_reg[7] ,
    \count_reg[11] ,
    \count_reg[12] );
  output [12:0]data_count;
  input srst;
  input cntr_en;
  input [3:0]O;
  input clk;
  input [3:0]\count_reg[7] ;
  input [3:0]\count_reg[11] ;
  input [0:0]\count_reg[12] ;

  wire [3:0]O;
  wire clk;
  wire cntr_en;
  wire [3:0]\count_reg[11] ;
  wire [0:0]\count_reg[12] ;
  wire [3:0]\count_reg[7] ;
  wire [12:0]data_count;
  wire srst;

  fifo_8x4096_updn_cntr dc
       (.O(O),
        .clk(clk),
        .cntr_en(cntr_en),
        .\count_reg[11]_0 (\count_reg[11] ),
        .\count_reg[12]_0 (\count_reg[12] ),
        .\count_reg[7]_0 (\count_reg[7] ),
        .data_count(data_count),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module fifo_8x4096_fifo_generator_ramfifo
   (empty,
    full,
    dout,
    data_count,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [7:0]dout;
  output [12:0]data_count;
  input clk;
  input srst;
  input [7:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [12:0]data_count;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_0 ;
  wire \gr1.gdcf.dc/cntr_en ;
  wire [5:0]\gwss.wsts/c0/v1_reg ;
  wire [5:0]\gwss.wsts/c1/v1_reg ;
  wire ram_rd_en;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_en;
  wire [11:0]rd_pntr;
  wire srst;
  wire tmp_ram_rd_en;
  wire valid_fwft;
  wire wr_en;
  wire [11:0]wr_pntr;
  wire [11:0]wr_pntr_plus1;

  fifo_8x4096_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.D(wr_pntr_plus1),
        .E(ram_regout_en),
        .Q(rd_pntr),
        .clk(clk),
        .cntr_en(\gr1.gdcf.dc/cntr_en ),
        .data_count(data_count),
        .empty(empty),
        .\gmux.gm[5].gms.ms (wr_pntr),
        .out(valid_fwft),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .ram_rd_en(ram_rd_en),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .v1_reg(\gwss.wsts/c0/v1_reg ),
        .v1_reg_0(\gwss.wsts/c1/v1_reg ),
        .wr_en(wr_en));
  fifo_8x4096_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.D(wr_pntr_plus1),
        .Q(wr_pntr),
        .clk(clk),
        .cntr_en(\gr1.gdcf.dc/cntr_en ),
        .\count_reg[12] (valid_fwft),
        .full(full),
        .out(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .ram_rd_en(ram_rd_en),
        .ram_wr_en(ram_wr_en),
        .rd_en(rd_en),
        .srst(srst),
        .v1_reg(\gwss.wsts/c0/v1_reg ),
        .v1_reg_0(\gwss.wsts/c1/v1_reg ),
        .wr_en(wr_en));
  fifo_8x4096_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (rd_pntr),
        .E(ram_regout_en),
        .Q(wr_pntr),
        .clk(clk),
        .din(din),
        .dout(dout),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module fifo_8x4096_fifo_generator_top
   (empty,
    full,
    dout,
    data_count,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [7:0]dout;
  output [12:0]data_count;
  input clk;
  input srst;
  input [7:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [12:0]data_count;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_8x4096_fifo_generator_ramfifo \grf.rf 
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "13" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "8" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "8" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "1" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "4kx9" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "4095" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "4094" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "13" *) 
(* C_RD_DEPTH = "4096" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "12" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "13" *) 
(* C_WR_DEPTH = "4096" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "12" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module fifo_8x4096_fifo_generator_v13_2_5
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [7:0]din;
  input wr_en;
  input rd_en;
  input [11:0]prog_empty_thresh;
  input [11:0]prog_empty_thresh_assert;
  input [11:0]prog_empty_thresh_negate;
  input [11:0]prog_full_thresh;
  input [11:0]prog_full_thresh_assert;
  input [11:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [7:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [12:0]data_count;
  output [12:0]rd_data_count;
  output [12:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [12:0]data_count;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[12] = \<const0> ;
  assign rd_data_count[11] = \<const0> ;
  assign rd_data_count[10] = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[12] = \<const0> ;
  assign wr_data_count[11] = \<const0> ;
  assign wr_data_count[10] = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  fifo_8x4096_fifo_generator_v13_2_5_synth inst_fifo_gen
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module fifo_8x4096_fifo_generator_v13_2_5_synth
   (empty,
    full,
    dout,
    data_count,
    clk,
    srst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [7:0]dout;
  output [12:0]data_count;
  input clk;
  input srst;
  input [7:0]din;
  input rd_en;
  input wr_en;

  wire clk;
  wire [12:0]data_count;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

  fifo_8x4096_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .data_count(data_count),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module fifo_8x4096_memory
   (dout,
    clk,
    ram_wr_en,
    tmp_ram_rd_en,
    srst,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    din,
    E);
  output [7:0]dout;
  input clk;
  input ram_wr_en;
  input tmp_ram_rd_en;
  input srst;
  input [11:0]Q;
  input [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [7:0]din;
  input [0:0]E;

  wire [11:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [11:0]Q;
  wire clk;
  wire [7:0]din;
  wire [7:0]dout;
  wire [7:0]doutb;
  wire ram_wr_en;
  wire srst;
  wire tmp_ram_rd_en;

  fifo_8x4096_blk_mem_gen_v8_4_4 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .Q(Q),
        .clk(clk),
        .din(din),
        .ram_wr_en(ram_wr_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(clk),
        .CE(E),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(clk),
        .CE(E),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(clk),
        .CE(E),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(clk),
        .CE(E),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(clk),
        .CE(E),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(clk),
        .CE(E),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(clk),
        .CE(E),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(clk),
        .CE(E),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module fifo_8x4096_rd_bin_cntr
   (v1_reg,
    Q,
    v1_reg_1,
    v1_reg_0,
    \gc0.count_d1_reg[0]_0 ,
    \gc0.count_d1_reg[2]_0 ,
    \gc0.count_d1_reg[4]_0 ,
    \gc0.count_d1_reg[6]_0 ,
    \gc0.count_d1_reg[8]_0 ,
    \gc0.count_d1_reg[10]_0 ,
    srst,
    E,
    clk,
    \gmux.gm[5].gms.ms ,
    D);
  output [5:0]v1_reg;
  output [11:0]Q;
  output [5:0]v1_reg_1;
  output [5:0]v1_reg_0;
  output \gc0.count_d1_reg[0]_0 ;
  output \gc0.count_d1_reg[2]_0 ;
  output \gc0.count_d1_reg[4]_0 ;
  output \gc0.count_d1_reg[6]_0 ;
  output \gc0.count_d1_reg[8]_0 ;
  output \gc0.count_d1_reg[10]_0 ;
  input srst;
  input [0:0]E;
  input clk;
  input [11:0]\gmux.gm[5].gms.ms ;
  input [11:0]D;

  wire [11:0]D;
  wire [0:0]E;
  wire [11:0]Q;
  wire clk;
  wire \gc0.count[0]_i_2_n_0 ;
  wire \gc0.count_d1_reg[0]_0 ;
  wire \gc0.count_d1_reg[10]_0 ;
  wire \gc0.count_d1_reg[2]_0 ;
  wire \gc0.count_d1_reg[4]_0 ;
  wire \gc0.count_d1_reg[6]_0 ;
  wire \gc0.count_d1_reg[8]_0 ;
  wire \gc0.count_reg[0]_i_1_n_0 ;
  wire \gc0.count_reg[0]_i_1_n_1 ;
  wire \gc0.count_reg[0]_i_1_n_2 ;
  wire \gc0.count_reg[0]_i_1_n_3 ;
  wire \gc0.count_reg[0]_i_1_n_4 ;
  wire \gc0.count_reg[0]_i_1_n_5 ;
  wire \gc0.count_reg[0]_i_1_n_6 ;
  wire \gc0.count_reg[0]_i_1_n_7 ;
  wire \gc0.count_reg[4]_i_1_n_0 ;
  wire \gc0.count_reg[4]_i_1_n_1 ;
  wire \gc0.count_reg[4]_i_1_n_2 ;
  wire \gc0.count_reg[4]_i_1_n_3 ;
  wire \gc0.count_reg[4]_i_1_n_4 ;
  wire \gc0.count_reg[4]_i_1_n_5 ;
  wire \gc0.count_reg[4]_i_1_n_6 ;
  wire \gc0.count_reg[4]_i_1_n_7 ;
  wire \gc0.count_reg[8]_i_1_n_1 ;
  wire \gc0.count_reg[8]_i_1_n_2 ;
  wire \gc0.count_reg[8]_i_1_n_3 ;
  wire \gc0.count_reg[8]_i_1_n_4 ;
  wire \gc0.count_reg[8]_i_1_n_5 ;
  wire \gc0.count_reg[8]_i_1_n_6 ;
  wire \gc0.count_reg[8]_i_1_n_7 ;
  wire [11:0]\gmux.gm[5].gms.ms ;
  wire [11:0]rd_pntr_plus1;
  wire srst;
  wire [5:0]v1_reg;
  wire [5:0]v1_reg_0;
  wire [5:0]v1_reg_1;
  wire [3:3]\NLW_gc0.count_reg[8]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_2 
       (.I0(rd_pntr_plus1[0]),
        .O(\gc0.count[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[10] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[10]),
        .Q(Q[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[11] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[11]),
        .Q(Q[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[7]),
        .Q(Q[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[8]),
        .Q(Q[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[9] 
       (.C(clk),
        .CE(E),
        .D(rd_pntr_plus1[9]),
        .Q(Q[9]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_7 ),
        .Q(rd_pntr_plus1[0]),
        .S(srst));
  CARRY4 \gc0.count_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\gc0.count_reg[0]_i_1_n_0 ,\gc0.count_reg[0]_i_1_n_1 ,\gc0.count_reg[0]_i_1_n_2 ,\gc0.count_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\gc0.count_reg[0]_i_1_n_4 ,\gc0.count_reg[0]_i_1_n_5 ,\gc0.count_reg[0]_i_1_n_6 ,\gc0.count_reg[0]_i_1_n_7 }),
        .S({rd_pntr_plus1[3:1],\gc0.count[0]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_5 ),
        .Q(rd_pntr_plus1[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_4 ),
        .Q(rd_pntr_plus1[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_6 ),
        .Q(rd_pntr_plus1[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_5 ),
        .Q(rd_pntr_plus1[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[0]_i_1_n_4 ),
        .Q(rd_pntr_plus1[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_7 ),
        .Q(rd_pntr_plus1[4]),
        .R(srst));
  CARRY4 \gc0.count_reg[4]_i_1 
       (.CI(\gc0.count_reg[0]_i_1_n_0 ),
        .CO({\gc0.count_reg[4]_i_1_n_0 ,\gc0.count_reg[4]_i_1_n_1 ,\gc0.count_reg[4]_i_1_n_2 ,\gc0.count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gc0.count_reg[4]_i_1_n_4 ,\gc0.count_reg[4]_i_1_n_5 ,\gc0.count_reg[4]_i_1_n_6 ,\gc0.count_reg[4]_i_1_n_7 }),
        .S(rd_pntr_plus1[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_6 ),
        .Q(rd_pntr_plus1[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_5 ),
        .Q(rd_pntr_plus1[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[4]_i_1_n_4 ),
        .Q(rd_pntr_plus1[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_7 ),
        .Q(rd_pntr_plus1[8]),
        .R(srst));
  CARRY4 \gc0.count_reg[8]_i_1 
       (.CI(\gc0.count_reg[4]_i_1_n_0 ),
        .CO({\NLW_gc0.count_reg[8]_i_1_CO_UNCONNECTED [3],\gc0.count_reg[8]_i_1_n_1 ,\gc0.count_reg[8]_i_1_n_2 ,\gc0.count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gc0.count_reg[8]_i_1_n_4 ,\gc0.count_reg[8]_i_1_n_5 ,\gc0.count_reg[8]_i_1_n_6 ,\gc0.count_reg[8]_i_1_n_7 }),
        .S(rd_pntr_plus1[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_reg[8]_i_1_n_6 ),
        .Q(rd_pntr_plus1[9]),
        .R(srst));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(Q[0]),
        .I1(\gmux.gm[5].gms.ms [0]),
        .I2(Q[1]),
        .I3(\gmux.gm[5].gms.ms [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(rd_pntr_plus1[0]),
        .I1(\gmux.gm[5].gms.ms [0]),
        .I2(rd_pntr_plus1[1]),
        .I3(\gmux.gm[5].gms.ms [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(Q[0]),
        .I1(D[0]),
        .I2(Q[1]),
        .I3(D[1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(Q[0]),
        .I1(\gmux.gm[5].gms.ms [0]),
        .I2(Q[1]),
        .I3(\gmux.gm[5].gms.ms [1]),
        .O(\gc0.count_d1_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(Q[2]),
        .I1(\gmux.gm[5].gms.ms [2]),
        .I2(Q[3]),
        .I3(\gmux.gm[5].gms.ms [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[2]),
        .I1(\gmux.gm[5].gms.ms [2]),
        .I2(rd_pntr_plus1[3]),
        .I3(\gmux.gm[5].gms.ms [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(Q[2]),
        .I1(D[2]),
        .I2(Q[3]),
        .I3(D[3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(Q[2]),
        .I1(\gmux.gm[5].gms.ms [2]),
        .I2(Q[3]),
        .I3(\gmux.gm[5].gms.ms [3]),
        .O(\gc0.count_d1_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(Q[4]),
        .I1(\gmux.gm[5].gms.ms [4]),
        .I2(Q[5]),
        .I3(\gmux.gm[5].gms.ms [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[4]),
        .I1(\gmux.gm[5].gms.ms [4]),
        .I2(rd_pntr_plus1[5]),
        .I3(\gmux.gm[5].gms.ms [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(Q[4]),
        .I1(D[4]),
        .I2(Q[5]),
        .I3(D[5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(Q[4]),
        .I1(\gmux.gm[5].gms.ms [4]),
        .I2(Q[5]),
        .I3(\gmux.gm[5].gms.ms [5]),
        .O(\gc0.count_d1_reg[4]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(Q[6]),
        .I1(\gmux.gm[5].gms.ms [6]),
        .I2(Q[7]),
        .I3(\gmux.gm[5].gms.ms [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gmux.gm[5].gms.ms [6]),
        .I2(rd_pntr_plus1[7]),
        .I3(\gmux.gm[5].gms.ms [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(Q[6]),
        .I1(D[6]),
        .I2(Q[7]),
        .I3(D[7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(Q[6]),
        .I1(\gmux.gm[5].gms.ms [6]),
        .I2(Q[7]),
        .I3(\gmux.gm[5].gms.ms [7]),
        .O(\gc0.count_d1_reg[6]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(Q[8]),
        .I1(\gmux.gm[5].gms.ms [8]),
        .I2(Q[9]),
        .I3(\gmux.gm[5].gms.ms [9]),
        .O(v1_reg[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[8]),
        .I1(\gmux.gm[5].gms.ms [8]),
        .I2(rd_pntr_plus1[9]),
        .I3(\gmux.gm[5].gms.ms [9]),
        .O(v1_reg_1[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(Q[8]),
        .I1(D[8]),
        .I2(Q[9]),
        .I3(D[9]),
        .O(v1_reg_0[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(Q[8]),
        .I1(\gmux.gm[5].gms.ms [8]),
        .I2(Q[9]),
        .I3(\gmux.gm[5].gms.ms [9]),
        .O(\gc0.count_d1_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1 
       (.I0(Q[10]),
        .I1(\gmux.gm[5].gms.ms [10]),
        .I2(Q[11]),
        .I3(\gmux.gm[5].gms.ms [11]),
        .O(v1_reg[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1[10]),
        .I1(\gmux.gm[5].gms.ms [10]),
        .I2(rd_pntr_plus1[11]),
        .I3(\gmux.gm[5].gms.ms [11]),
        .O(v1_reg_1[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1__1 
       (.I0(Q[10]),
        .I1(D[10]),
        .I2(Q[11]),
        .I3(D[11]),
        .O(v1_reg_0[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[5].gms.ms_i_1__2 
       (.I0(Q[10]),
        .I1(\gmux.gm[5].gms.ms [10]),
        .I2(Q[11]),
        .I3(\gmux.gm[5].gms.ms [11]),
        .O(\gc0.count_d1_reg[10]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module fifo_8x4096_rd_fwft
   (empty,
    out,
    tmp_ram_rd_en,
    E,
    ram_empty_fb_i_reg,
    O,
    \count_reg[7] ,
    \count_reg[11] ,
    \count_reg[11]_0 ,
    srst,
    clk,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    data_count);
  output empty;
  output out;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  output [3:0]O;
  output [3:0]\count_reg[7] ;
  output [3:0]\count_reg[11] ;
  output [0:0]\count_reg[11]_0 ;
  input srst;
  input clk;
  input rd_en;
  input \gpregsm1.curr_fwft_state_reg[1]_0 ;
  input [12:0]data_count;

  wire [0:0]E;
  wire [3:0]O;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  wire clk;
  wire \count[11]_i_2_n_0 ;
  wire \count[11]_i_3_n_0 ;
  wire \count[11]_i_4_n_0 ;
  wire \count[11]_i_5_n_0 ;
  wire \count[12]_i_3_n_0 ;
  wire \count[3]_i_2_n_0 ;
  wire \count[3]_i_3_n_0 ;
  wire \count[3]_i_4_n_0 ;
  wire \count[3]_i_5_n_0 ;
  wire \count[3]_i_6_n_0 ;
  wire \count[7]_i_2_n_0 ;
  wire \count[7]_i_3_n_0 ;
  wire \count[7]_i_4_n_0 ;
  wire \count[7]_i_5_n_0 ;
  wire [3:0]\count_reg[11] ;
  wire [0:0]\count_reg[11]_0 ;
  wire \count_reg[11]_i_1_n_0 ;
  wire \count_reg[11]_i_1_n_1 ;
  wire \count_reg[11]_i_1_n_2 ;
  wire \count_reg[11]_i_1_n_3 ;
  wire \count_reg[3]_i_1_n_0 ;
  wire \count_reg[3]_i_1_n_1 ;
  wire \count_reg[3]_i_1_n_2 ;
  wire \count_reg[3]_i_1_n_3 ;
  wire [3:0]\count_reg[7] ;
  wire \count_reg[7]_i_1_n_0 ;
  wire \count_reg[7]_i_1_n_1 ;
  wire \count_reg[7]_i_1_n_2 ;
  wire \count_reg[7]_i_1_n_3 ;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  wire [12:0]data_count;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [1:0]next_fwft_state;
  wire [0:0]ram_empty_fb_i_reg;
  wire rd_en;
  wire srst;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;
  wire [3:0]\NLW_count_reg[12]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_count_reg[12]_i_2_O_UNCONNECTED ;

  assign empty = empty_fwft_i;
  assign out = user_valid;
  LUT5 #(
    .INIT(32'hFFFF4555)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .I4(srst),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(srst));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_2 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[11]),
        .O(\count[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[10]),
        .O(\count[11]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[9]),
        .O(\count[11]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[11]_i_5 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[8]),
        .O(\count[11]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[12]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[12]),
        .O(\count[12]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \count[3]_i_2 
       (.I0(user_valid),
        .I1(rd_en),
        .O(\count[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[3]),
        .O(\count[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[2]),
        .O(\count[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_5 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[1]),
        .O(\count[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[3]_i_6 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[0]),
        .O(\count[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_2 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[7]),
        .O(\count[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_3 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[6]),
        .O(\count[7]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_4 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[5]),
        .O(\count[7]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count[7]_i_5 
       (.I0(user_valid),
        .I1(rd_en),
        .I2(data_count[4]),
        .O(\count[7]_i_5_n_0 ));
  CARRY4 \count_reg[11]_i_1 
       (.CI(\count_reg[7]_i_1_n_0 ),
        .CO({\count_reg[11]_i_1_n_0 ,\count_reg[11]_i_1_n_1 ,\count_reg[11]_i_1_n_2 ,\count_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(data_count[11:8]),
        .O(\count_reg[11] ),
        .S({\count[11]_i_2_n_0 ,\count[11]_i_3_n_0 ,\count[11]_i_4_n_0 ,\count[11]_i_5_n_0 }));
  CARRY4 \count_reg[12]_i_2 
       (.CI(\count_reg[11]_i_1_n_0 ),
        .CO(\NLW_count_reg[12]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_count_reg[12]_i_2_O_UNCONNECTED [3:1],\count_reg[11]_0 }),
        .S({1'b0,1'b0,1'b0,\count[12]_i_3_n_0 }));
  CARRY4 \count_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\count_reg[3]_i_1_n_0 ,\count_reg[3]_i_1_n_1 ,\count_reg[3]_i_1_n_2 ,\count_reg[3]_i_1_n_3 }),
        .CYINIT(\count[3]_i_2_n_0 ),
        .DI(data_count[3:0]),
        .O(O),
        .S({\count[3]_i_3_n_0 ,\count[3]_i_4_n_0 ,\count[3]_i_5_n_0 ,\count[3]_i_6_n_0 }));
  CARRY4 \count_reg[7]_i_1 
       (.CI(\count_reg[3]_i_1_n_0 ),
        .CO({\count_reg[7]_i_1_n_0 ,\count_reg[7]_i_1_n_1 ,\count_reg[7]_i_1_n_2 ,\count_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(data_count[7:4]),
        .O(\count_reg[7] ),
        .S({\count[7]_i_2_n_0 ,\count[7]_i_3_n_0 ,\count[7]_i_4_n_0 ,\count[7]_i_5_n_0 }));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(srst));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(srst));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[11]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[7]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module fifo_8x4096_rd_logic
   (empty,
    out,
    data_count,
    ram_rd_en,
    v1_reg,
    Q,
    tmp_ram_rd_en,
    E,
    v1_reg_0,
    srst,
    clk,
    cntr_en,
    rd_en,
    ram_empty_i_reg,
    wr_en,
    \gmux.gm[5].gms.ms ,
    D);
  output empty;
  output out;
  output [12:0]data_count;
  output ram_rd_en;
  output [5:0]v1_reg;
  output [11:0]Q;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [5:0]v1_reg_0;
  input srst;
  input clk;
  input cntr_en;
  input rd_en;
  input ram_empty_i_reg;
  input wr_en;
  input [11:0]\gmux.gm[5].gms.ms ;
  input [11:0]D;

  wire [11:0]D;
  wire [0:0]E;
  wire [11:0]Q;
  wire [5:0]\c2/v1_reg ;
  wire clk;
  wire cntr_en;
  wire [12:0]data_count;
  wire empty;
  wire empty_fb_i;
  wire [11:0]\gmux.gm[5].gms.ms ;
  wire \gr1.gr1_int.rfwft_n_10 ;
  wire \gr1.gr1_int.rfwft_n_11 ;
  wire \gr1.gr1_int.rfwft_n_12 ;
  wire \gr1.gr1_int.rfwft_n_13 ;
  wire \gr1.gr1_int.rfwft_n_14 ;
  wire \gr1.gr1_int.rfwft_n_15 ;
  wire \gr1.gr1_int.rfwft_n_16 ;
  wire \gr1.gr1_int.rfwft_n_17 ;
  wire \gr1.gr1_int.rfwft_n_5 ;
  wire \gr1.gr1_int.rfwft_n_6 ;
  wire \gr1.gr1_int.rfwft_n_7 ;
  wire \gr1.gr1_int.rfwft_n_8 ;
  wire \gr1.gr1_int.rfwft_n_9 ;
  wire out;
  wire ram_empty_i_reg;
  wire ram_rd_en;
  wire rd_en;
  wire rpntr_n_30;
  wire rpntr_n_31;
  wire rpntr_n_32;
  wire rpntr_n_33;
  wire rpntr_n_34;
  wire rpntr_n_35;
  wire srst;
  wire tmp_ram_rd_en;
  wire [5:0]v1_reg;
  wire [5:0]v1_reg_0;
  wire wr_en;

  fifo_8x4096_dc_ss_fwft \gr1.gdcf.dc 
       (.O({\gr1.gr1_int.rfwft_n_5 ,\gr1.gr1_int.rfwft_n_6 ,\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 }),
        .clk(clk),
        .cntr_en(cntr_en),
        .\count_reg[11] ({\gr1.gr1_int.rfwft_n_13 ,\gr1.gr1_int.rfwft_n_14 ,\gr1.gr1_int.rfwft_n_15 ,\gr1.gr1_int.rfwft_n_16 }),
        .\count_reg[12] (\gr1.gr1_int.rfwft_n_17 ),
        .\count_reg[7] ({\gr1.gr1_int.rfwft_n_9 ,\gr1.gr1_int.rfwft_n_10 ,\gr1.gr1_int.rfwft_n_11 ,\gr1.gr1_int.rfwft_n_12 }),
        .data_count(data_count),
        .srst(srst));
  fifo_8x4096_rd_fwft \gr1.gr1_int.rfwft 
       (.E(E),
        .O({\gr1.gr1_int.rfwft_n_5 ,\gr1.gr1_int.rfwft_n_6 ,\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 }),
        .clk(clk),
        .\count_reg[11] ({\gr1.gr1_int.rfwft_n_13 ,\gr1.gr1_int.rfwft_n_14 ,\gr1.gr1_int.rfwft_n_15 ,\gr1.gr1_int.rfwft_n_16 }),
        .\count_reg[11]_0 (\gr1.gr1_int.rfwft_n_17 ),
        .\count_reg[7] ({\gr1.gr1_int.rfwft_n_9 ,\gr1.gr1_int.rfwft_n_10 ,\gr1.gr1_int.rfwft_n_11 ,\gr1.gr1_int.rfwft_n_12 }),
        .data_count(data_count),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (empty_fb_i),
        .out(out),
        .ram_empty_fb_i_reg(ram_rd_en),
        .rd_en(rd_en),
        .srst(srst),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  fifo_8x4096_rd_status_flags_ss \grss.rsts 
       (.E(ram_rd_en),
        .clk(clk),
        .\gmux.gm[1].gms.ms (rpntr_n_30),
        .\gmux.gm[2].gms.ms (rpntr_n_31),
        .\gmux.gm[3].gms.ms (rpntr_n_32),
        .\gmux.gm[4].gms.ms (rpntr_n_33),
        .\gmux.gm[5].gms.ms (rpntr_n_34),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(rpntr_n_35),
        .ram_empty_i_reg_1(ram_empty_i_reg),
        .srst(srst),
        .v1_reg(\c2/v1_reg ),
        .wr_en(wr_en));
  fifo_8x4096_rd_bin_cntr rpntr
       (.D(D),
        .E(ram_rd_en),
        .Q(Q),
        .clk(clk),
        .\gc0.count_d1_reg[0]_0 (rpntr_n_30),
        .\gc0.count_d1_reg[10]_0 (rpntr_n_35),
        .\gc0.count_d1_reg[2]_0 (rpntr_n_31),
        .\gc0.count_d1_reg[4]_0 (rpntr_n_32),
        .\gc0.count_d1_reg[6]_0 (rpntr_n_33),
        .\gc0.count_d1_reg[8]_0 (rpntr_n_34),
        .\gmux.gm[5].gms.ms (\gmux.gm[5].gms.ms ),
        .srst(srst),
        .v1_reg(v1_reg),
        .v1_reg_0(v1_reg_0),
        .v1_reg_1(\c2/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module fifo_8x4096_rd_status_flags_ss
   (out,
    \gmux.gm[1].gms.ms ,
    \gmux.gm[2].gms.ms ,
    \gmux.gm[3].gms.ms ,
    \gmux.gm[4].gms.ms ,
    \gmux.gm[5].gms.ms ,
    ram_empty_i_reg_0,
    v1_reg,
    srst,
    clk,
    E,
    ram_empty_i_reg_1,
    wr_en);
  output out;
  input \gmux.gm[1].gms.ms ;
  input \gmux.gm[2].gms.ms ;
  input \gmux.gm[3].gms.ms ;
  input \gmux.gm[4].gms.ms ;
  input \gmux.gm[5].gms.ms ;
  input ram_empty_i_reg_0;
  input [5:0]v1_reg;
  input srst;
  input clk;
  input [0:0]E;
  input ram_empty_i_reg_1;
  input wr_en;

  wire [0:0]E;
  wire c2_n_0;
  wire clk;
  wire comp0;
  wire \gmux.gm[1].gms.ms ;
  wire \gmux.gm[2].gms.ms ;
  wire \gmux.gm[3].gms.ms ;
  wire \gmux.gm[4].gms.ms ;
  wire \gmux.gm[5].gms.ms ;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire ram_empty_i_reg_1;
  wire srst;
  wire [5:0]v1_reg;
  wire wr_en;

  assign out = ram_empty_fb_i;
  fifo_8x4096_compare_1 c1
       (.comp0(comp0),
        .\gmux.gm[1].gms.ms_0 (\gmux.gm[1].gms.ms ),
        .\gmux.gm[2].gms.ms_0 (\gmux.gm[2].gms.ms ),
        .\gmux.gm[3].gms.ms_0 (\gmux.gm[3].gms.ms ),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms ),
        .\gmux.gm[5].gms.ms_0 (\gmux.gm[5].gms.ms ),
        .ram_empty_i_reg(ram_empty_i_reg_0));
  fifo_8x4096_compare_2 c2
       (.E(E),
        .comp0(comp0),
        .out(ram_empty_fb_i),
        .ram_empty_i_reg(ram_empty_i_reg_1),
        .ram_full_fb_i_reg(c2_n_0),
        .v1_reg(v1_reg),
        .wr_en(wr_en));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_empty_fb_i),
        .S(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_empty_i),
        .S(srst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module fifo_8x4096_reset_blk_ramfifo
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  LUT1 #(
    .INIT(2'h2)) 
    rstblki_0
       (.I0(1'b0),
        .O(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "updn_cntr" *) 
module fifo_8x4096_updn_cntr
   (data_count,
    srst,
    cntr_en,
    O,
    clk,
    \count_reg[7]_0 ,
    \count_reg[11]_0 ,
    \count_reg[12]_0 );
  output [12:0]data_count;
  input srst;
  input cntr_en;
  input [3:0]O;
  input clk;
  input [3:0]\count_reg[7]_0 ;
  input [3:0]\count_reg[11]_0 ;
  input [0:0]\count_reg[12]_0 ;

  wire [3:0]O;
  wire clk;
  wire cntr_en;
  wire [3:0]\count_reg[11]_0 ;
  wire [0:0]\count_reg[12]_0 ;
  wire [3:0]\count_reg[7]_0 ;
  wire [12:0]data_count;
  wire srst;

  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[0]),
        .Q(data_count[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [2]),
        .Q(data_count[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [3]),
        .Q(data_count[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[12]_0 ),
        .Q(data_count[12]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[1]),
        .Q(data_count[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[2]),
        .Q(data_count[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(cntr_en),
        .D(O[3]),
        .Q(data_count[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [0]),
        .Q(data_count[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [1]),
        .Q(data_count[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [2]),
        .Q(data_count[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[7]_0 [3]),
        .Q(data_count[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [0]),
        .Q(data_count[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(clk),
        .CE(cntr_en),
        .D(\count_reg[11]_0 [1]),
        .Q(data_count[9]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module fifo_8x4096_wr_bin_cntr
   (D,
    Q,
    srst,
    E,
    clk);
  output [11:0]D;
  output [11:0]Q;
  input srst;
  input [0:0]E;
  input clk;

  wire [11:0]D;
  wire [0:0]E;
  wire [11:0]Q;
  wire clk;
  wire \gcc0.gc0.count[0]_i_2_n_0 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_0 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_1 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_2 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_3 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_4 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_5 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_6 ;
  wire \gcc0.gc0.count_reg[0]_i_1_n_7 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_0 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_1 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_2 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_3 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_4 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_5 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_6 ;
  wire \gcc0.gc0.count_reg[4]_i_1_n_7 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_1 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_2 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_3 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_4 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_5 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_6 ;
  wire \gcc0.gc0.count_reg[8]_i_1_n_7 ;
  wire srst;
  wire [3:3]\NLW_gcc0.gc0.count_reg[8]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc0.count[0]_i_2 
       (.I0(D[0]),
        .O(\gcc0.gc0.count[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(D[0]),
        .Q(Q[0]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[10] 
       (.C(clk),
        .CE(E),
        .D(D[10]),
        .Q(Q[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[11] 
       (.C(clk),
        .CE(E),
        .D(D[11]),
        .Q(Q[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(D[1]),
        .Q(Q[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(D[2]),
        .Q(Q[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(D[3]),
        .Q(Q[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(D[4]),
        .Q(Q[4]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[5] 
       (.C(clk),
        .CE(E),
        .D(D[5]),
        .Q(Q[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[6] 
       (.C(clk),
        .CE(E),
        .D(D[6]),
        .Q(Q[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[7] 
       (.C(clk),
        .CE(E),
        .D(D[7]),
        .Q(Q[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[8] 
       (.C(clk),
        .CE(E),
        .D(D[8]),
        .Q(Q[8]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[9] 
       (.C(clk),
        .CE(E),
        .D(D[9]),
        .Q(Q[9]),
        .R(srst));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_7 ),
        .Q(D[0]),
        .S(srst));
  CARRY4 \gcc0.gc0.count_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\gcc0.gc0.count_reg[0]_i_1_n_0 ,\gcc0.gc0.count_reg[0]_i_1_n_1 ,\gcc0.gc0.count_reg[0]_i_1_n_2 ,\gcc0.gc0.count_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\gcc0.gc0.count_reg[0]_i_1_n_4 ,\gcc0.gc0.count_reg[0]_i_1_n_5 ,\gcc0.gc0.count_reg[0]_i_1_n_6 ,\gcc0.gc0.count_reg[0]_i_1_n_7 }),
        .S({D[3:1],\gcc0.gc0.count[0]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_5 ),
        .Q(D[10]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_4 ),
        .Q(D[11]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_6 ),
        .Q(D[1]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_5 ),
        .Q(D[2]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[0]_i_1_n_4 ),
        .Q(D[3]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_7 ),
        .Q(D[4]),
        .R(srst));
  CARRY4 \gcc0.gc0.count_reg[4]_i_1 
       (.CI(\gcc0.gc0.count_reg[0]_i_1_n_0 ),
        .CO({\gcc0.gc0.count_reg[4]_i_1_n_0 ,\gcc0.gc0.count_reg[4]_i_1_n_1 ,\gcc0.gc0.count_reg[4]_i_1_n_2 ,\gcc0.gc0.count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gcc0.gc0.count_reg[4]_i_1_n_4 ,\gcc0.gc0.count_reg[4]_i_1_n_5 ,\gcc0.gc0.count_reg[4]_i_1_n_6 ,\gcc0.gc0.count_reg[4]_i_1_n_7 }),
        .S(D[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_6 ),
        .Q(D[5]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_5 ),
        .Q(D[6]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[4]_i_1_n_4 ),
        .Q(D[7]),
        .R(srst));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_7 ),
        .Q(D[8]),
        .R(srst));
  CARRY4 \gcc0.gc0.count_reg[8]_i_1 
       (.CI(\gcc0.gc0.count_reg[4]_i_1_n_0 ),
        .CO({\NLW_gcc0.gc0.count_reg[8]_i_1_CO_UNCONNECTED [3],\gcc0.gc0.count_reg[8]_i_1_n_1 ,\gcc0.gc0.count_reg[8]_i_1_n_2 ,\gcc0.gc0.count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gcc0.gc0.count_reg[8]_i_1_n_4 ,\gcc0.gc0.count_reg[8]_i_1_n_5 ,\gcc0.gc0.count_reg[8]_i_1_n_6 ,\gcc0.gc0.count_reg[8]_i_1_n_7 }),
        .S(D[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\gcc0.gc0.count_reg[8]_i_1_n_6 ),
        .Q(D[9]),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module fifo_8x4096_wr_logic
   (out,
    full,
    D,
    ram_wr_en,
    cntr_en,
    Q,
    v1_reg,
    v1_reg_0,
    srst,
    clk,
    wr_en,
    \count_reg[12] ,
    rd_en,
    ram_rd_en);
  output out;
  output full;
  output [11:0]D;
  output ram_wr_en;
  output cntr_en;
  output [11:0]Q;
  input [5:0]v1_reg;
  input [5:0]v1_reg_0;
  input srst;
  input clk;
  input wr_en;
  input \count_reg[12] ;
  input rd_en;
  input ram_rd_en;

  wire [11:0]D;
  wire [11:0]Q;
  wire clk;
  wire cntr_en;
  wire \count_reg[12] ;
  wire full;
  wire out;
  wire ram_rd_en;
  wire ram_wr_en;
  wire rd_en;
  wire srst;
  wire [5:0]v1_reg;
  wire [5:0]v1_reg_0;
  wire wr_en;

  fifo_8x4096_wr_status_flags_ss \gwss.wsts 
       (.E(ram_wr_en),
        .clk(clk),
        .cntr_en(cntr_en),
        .\count_reg[12] (\count_reg[12] ),
        .full(full),
        .out(out),
        .ram_rd_en(ram_rd_en),
        .rd_en(rd_en),
        .srst(srst),
        .v1_reg(v1_reg),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en));
  fifo_8x4096_wr_bin_cntr wpntr
       (.D(D),
        .E(ram_wr_en),
        .Q(Q),
        .clk(clk),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module fifo_8x4096_wr_status_flags_ss
   (out,
    full,
    cntr_en,
    E,
    v1_reg,
    v1_reg_0,
    srst,
    clk,
    wr_en,
    \count_reg[12] ,
    rd_en,
    ram_rd_en);
  output out;
  output full;
  output cntr_en;
  output [0:0]E;
  input [5:0]v1_reg;
  input [5:0]v1_reg_0;
  input srst;
  input clk;
  input wr_en;
  input \count_reg[12] ;
  input rd_en;
  input ram_rd_en;

  wire [0:0]E;
  wire clk;
  wire cntr_en;
  wire comp0;
  wire \count_reg[12] ;
  (* DONT_TOUCH *) wire ram_afull_fb;
  (* DONT_TOUCH *) wire ram_afull_i;
  wire ram_full_comb;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_rd_en;
  wire rd_en;
  wire srst;
  wire [5:0]v1_reg;
  wire [5:0]v1_reg_0;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  fifo_8x4096_compare c0
       (.comp0(comp0),
        .v1_reg(v1_reg));
  fifo_8x4096_compare_0 c1
       (.comp0(comp0),
        .out(ram_full_fb_i),
        .ram_full_comb(ram_full_comb),
        .ram_rd_en(ram_rd_en),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hB444)) 
    \count[12]_i_1 
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(\count_reg[12] ),
        .I3(rd_en),
        .O(cntr_en));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ram_afull_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(ram_afull_fb));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_fb_i),
        .R(srst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_i),
        .R(srst));
endmodule

(* C_A_TYPE = "1" *) (* C_A_WIDTH = "8" *) (* C_B_TYPE = "0" *) 
(* C_B_VALUE = "10000001" *) (* C_B_WIDTH = "19" *) (* C_CCM_IMP = "0" *) 
(* C_CE_OVERRIDES_SCLR = "0" *) (* C_HAS_CE = "0" *) (* C_HAS_SCLR = "0" *) 
(* C_HAS_ZERO_DETECT = "0" *) (* C_LATENCY = "1" *) (* C_MODEL_TYPE = "0" *) 
(* C_MULT_TYPE = "0" *) (* C_OPTIMIZE_GOAL = "1" *) (* C_OUT_HIGH = "26" *) 
(* C_OUT_LOW = "0" *) (* C_ROUND_OUTPUT = "0" *) (* C_ROUND_PT = "0" *) 
(* C_VERBOSITY = "0" *) (* C_XDEVICEFAMILY = "zynq" *) (* ORIG_REF_NAME = "mult_gen_v12_0_16" *) 
(* downgradeipidentifiedwarnings = "yes" *) 
module mult_8x19_mult_gen_v12_0_16
   (CLK,
    A,
    B,
    CE,
    SCLR,
    ZERO_DETECT,
    P,
    PCASC);
  input CLK;
  input [7:0]A;
  input [18:0]B;
  input CE;
  input SCLR;
  output [1:0]ZERO_DETECT;
  output [26:0]P;
  output [47:0]PCASC;

  wire \<const0> ;
  wire [7:0]A;
  wire [18:0]B;
  wire CLK;
  wire [26:0]P;
  wire [47:0]NLW_i_mult_PCASC_UNCONNECTED;
  wire [1:0]NLW_i_mult_ZERO_DETECT_UNCONNECTED;

  assign PCASC[47] = \<const0> ;
  assign PCASC[46] = \<const0> ;
  assign PCASC[45] = \<const0> ;
  assign PCASC[44] = \<const0> ;
  assign PCASC[43] = \<const0> ;
  assign PCASC[42] = \<const0> ;
  assign PCASC[41] = \<const0> ;
  assign PCASC[40] = \<const0> ;
  assign PCASC[39] = \<const0> ;
  assign PCASC[38] = \<const0> ;
  assign PCASC[37] = \<const0> ;
  assign PCASC[36] = \<const0> ;
  assign PCASC[35] = \<const0> ;
  assign PCASC[34] = \<const0> ;
  assign PCASC[33] = \<const0> ;
  assign PCASC[32] = \<const0> ;
  assign PCASC[31] = \<const0> ;
  assign PCASC[30] = \<const0> ;
  assign PCASC[29] = \<const0> ;
  assign PCASC[28] = \<const0> ;
  assign PCASC[27] = \<const0> ;
  assign PCASC[26] = \<const0> ;
  assign PCASC[25] = \<const0> ;
  assign PCASC[24] = \<const0> ;
  assign PCASC[23] = \<const0> ;
  assign PCASC[22] = \<const0> ;
  assign PCASC[21] = \<const0> ;
  assign PCASC[20] = \<const0> ;
  assign PCASC[19] = \<const0> ;
  assign PCASC[18] = \<const0> ;
  assign PCASC[17] = \<const0> ;
  assign PCASC[16] = \<const0> ;
  assign PCASC[15] = \<const0> ;
  assign PCASC[14] = \<const0> ;
  assign PCASC[13] = \<const0> ;
  assign PCASC[12] = \<const0> ;
  assign PCASC[11] = \<const0> ;
  assign PCASC[10] = \<const0> ;
  assign PCASC[9] = \<const0> ;
  assign PCASC[8] = \<const0> ;
  assign PCASC[7] = \<const0> ;
  assign PCASC[6] = \<const0> ;
  assign PCASC[5] = \<const0> ;
  assign PCASC[4] = \<const0> ;
  assign PCASC[3] = \<const0> ;
  assign PCASC[2] = \<const0> ;
  assign PCASC[1] = \<const0> ;
  assign PCASC[0] = \<const0> ;
  assign ZERO_DETECT[1] = \<const0> ;
  assign ZERO_DETECT[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "1" *) 
  (* C_A_WIDTH = "8" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "19" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "1" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "0" *) 
  (* C_OUT_HIGH = "26" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* c_optimize_goal = "1" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  mult_8x19_mult_gen_v12_0_16_viv i_mult
       (.A(A),
        .B(B),
        .CE(1'b0),
        .CLK(CLK),
        .P(P),
        .PCASC(NLW_i_mult_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_i_mult_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2019.1"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
dmmXCzwxW2FLu/vVGpJzoQ/uTl0t/oirVzDN8rGCQ/cshHIr5KZa8hMP1zjDcrW6js/9tSBuCaB1
Ioj63zjqZA==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
N9Ijk+dhcsedFOz7GhClRR68iRquy2ZzjVLVhi5GByFuPpr/oGFn021AFcKE54GT1hqizIMvWGS0
qRbWSO/aiWGT8c930WMeayc4xm2b65tzi7UyXSjcZqyZqk5spgPewfSuL0LKD5R4+zccn3yeTyAR
Cpi6LZ2KmpRW5biXvss=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
M8NGALCMec7MmW5uPCxfU8HATjWU2XqyPU8phSDe3mtyor4pgfPtg5TJdKOytKhxa+fQwJxytwzI
KPxtYmaRH/KFiGrOvm7jO78NIlt31qN95S7sMYrLxORaZ4bbNMg4RfwEB0haV15qORczgxWEpvBX
6Qukl64ihp4NiBjXt4YYGoDiNMSczgOe3tLn7UWjfPQnsJ8aMxugelO5AciSBxAdohgLMRE3cu6p
gwakO6ytq1vAR8bqHLT8g/Kdsxn72SBHYdpkba0NfEvzzheOlZY7fNuWD48V6QefMjsX1taMkmQH
m38VdXlC6Ocia7H3zT8LvNLtxrpG8zyD+UI+sg==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
I1BukTJgP0oEpI/mdw6jwrYhUTr7MTzY5G/EvfuPKQfGzYRI1qLG+aEQeclA1P65+tkbstBEIIg8
ZhiouPVaom8KwKZHBX7eLpxvNBcYVFfnJb1ES5wdcph3sgGtaYKSpspp51oYPM6ZD7DmMGdoc/Wg
JVIUuIfRpo8AnEMfkayPkbwuB0VUKpz5BXS50B+5jvgK7cFe2gUp2ckThqzKUjViVB56Swsz+IQe
l7GvtTbuNcSwapfPtNHH0bWSQStfIzPZZm1A2IZ2WCYafRPkj7uibtKNgnKgIZs1197qomgXbb+b
fDx1iikgF8snJsPchukmgxkMSQtLntwbLs6H+w==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2019_02", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
UNzBll4hVdQjkp7KJChMHZ9agdKjtTu8+3O75Phz7SpwUZ73Z533+9pCfaH7QI/cwqaVREb20HXT
ji2kU1DV7+Cwbshd08hvUBl23F60ITYS+3rluBLIFX3pzXhjjSu8HQpnxXppbCODvCiWrDLqRU/y
lcFf7B+yp5jK6vEY5xuh8is/oxSPNFwip6GSMqDnE45GU6kU+6n8FTk8pAZUNKnh3j0t6YzcwS3J
wYUhnJpEQYd7+0D/NPjEz0YFqzB8WCh70MxBRJzwdXpuRLiFzplysvw+eHjMPVeU/UPKJWuwWuwc
Bfxw0ThSXZit/SSD+BGhxjbEI9T6rh66FpqbTg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
F7AZy6dB5VKzcudhyRSKWKUbVrSs4vS9jtgDkM6KrVPs3ghP3AF2TeIDyl03EesBxeIQxHqq8thx
uVIGQN5wt92jkzGo61VyUoF2dYHY2dkK9PY4bicayI6rppCS18HnyCC5ODrTMKgOpoj+PEmghCZl
j8+i3NFWPAo6M/MAtVI=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
NQpRHEO/CEh2TWVl2zAKLb4TTDP4G4mQHrGzJeErDNbJ2L2B4iz3unsCjzHkoDagHoU9jeHYNzw1
EdgeGwokAwsWnHc0V18iEu5CZPPLrncpORhuc7qe0zJvoIFW4tgNZuIjFZI6bkrWzgxNYlkitGJ7
wQxgR+6ZenldybAjVF7d1R8FQmrEKWQ9ztmGHKMd9PfWD1VsbOoxbNA1tkQ3Suq2M9HDzUONaPQq
yMnGxLE4+4xTZZFVVFZeizNxqQcM1Y6s2MEUyS89U6rdAH95x9zDN8PGrif1SUWhpoz33cYp/IL8
acGyIWDbmuS0X+xsLC8cWcrO/MxKDk8bj12S7g==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
W2ZLxVMM2bO/6hqe8KRsBOYby+akb1JiKHhCv9fhS2DK483JVHKKDFtV5ZylpQSPfpmWVI6nDnNm
XtxOYqhOdd9wAHIVXly/nJQ3BORIgR42ZfKk3tkiYQd75XwTJmWjvIda5LTjKISy58Rg+7/yc6kX
SAKkQWzcaHy0VIrsbeLAK7Rz2vPrBQAwZijqUO1uD9pTa1ID2lBqRKOaN/lex50cPJ7PNmyesOUe
aisZi7+ubKWoKmZJmdUy4nKUk4a0FLkIqdFpmX+Bu5UVgWOF47nrEwh3c1MVRxWa1uvngQGGl026
FTa0G+nc1Q9KslAvMQ+fMbz+FbnTF3u/A9gizA==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
DuuMj/dNfRCIO4DcZfOHv5qcEPqpgFj4HvNw/3jM8vaBzi6jqh4xiXPe0zxQCHAJcuJm3iL9sVoW
1p8QUr6mNL/8hmef1NO1Z7jD2dM3vuR2mgA1+R9Zfm11iH6q9ZCvGdlAx6E78kzDbXtro+6TzTkD
HlMFmBxo6T6OLZqL7ITO8d7zOHXUCWrK0FSPGSWWqF0TYCYGBHV74ocMGTKE1IjTFHGyg9Vgvi6/
ronIDTJlK0fzlbmG0qTh8DnKGAtugy36q9lZaCOuz0nXtC2oJDZkixKEIpkUBlLWw4oCfjnC6nn9
cBgenC85HSUtnFYwDE7YA7U+5MPl2zOueXwUNw==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
nPRqajjkcjnlfTHE866ToO3844IQiTK2i94+dV5aud39wl4HxIqyf0nkdxRcGEq28iVh3vvFeYM/
RKkhtA0LabCvP7TwBBDmWYIlc18PBjPTMCn0y91Dvn9mGlqT8C0PJUd9jaE6dy1RLzYKsonOqP2G
yxbRsZPVhC98CZt84Z28YZqJyZg2JN7vY7gFFPViYSxxgOrgxtpvRoUiVkum4snWDqClo8pwBrHe
Ukm8j3DovtYh0+5+o0TeyrWPtPXCd6G9vS60eGI0Y2Fy3Sb5JV7mle0aIohxwwh02ZLi4SmBnz42
M4w86YMvZMvQY71NQLYj/ZcTqOEkqtI54j8aYA==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 149824)
`pragma protect data_block
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
qngpYl25O65bRY5b4YVIe4ZyPB253rEUmir5lQ==
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
